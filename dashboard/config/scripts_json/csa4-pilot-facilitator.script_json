{
  "script": {
    "name": "csa4-pilot-facilitator",
    "wrapup_video_id": null,
    "login_required": false,
    "properties": {
      "curriculum_umbrella": "CSA",
      "is_migrated": true,
      "hideable_lessons": true,
      "weekly_instructional_minutes": 225,
      "show_calendar": true,
      "include_student_lesson_plans": true,
      "pilot_experiment": "csa-pilot-facilitators"
    },
    "new_name": null,
    "family_name": null,
    "serialized_at": "2021-08-12 15:52:42 UTC",
    "published_state": "in_development",
    "seeding_key": {
      "script.name": "csa4-pilot-facilitator"
    }
  },
  "lesson_groups": [
    {
      "key": "lessonGroup-2",
      "user_facing": true,
      "position": 1,
      "properties": {
        "display_name": "Content"
      },
      "seeding_key": {
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "lessonGroup-3",
      "user_facing": true,
      "position": 2,
      "properties": {
        "display_name": "Show What You Know"
      },
      "seeding_key": {
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    }
  ],
  "lessons": [
    {
      "key": "Using Existing Libraries to Add Capabilities",
      "name": "Using Existing Libraries to Add Capabilities",
      "absolute_position": 1,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 1,
      "properties": {
        "overview": "The Neighborhood is hosting a block party and needs a game developed for the community to play with their friends and family. Students explore APIs and their documentation to identify features that they can add to their programs. To begin developing the Pop the Balloon game for The Neighborhood block party, students import The Park API and use it to implement clickable images.",
        "student_overview": "The Neighborhood is hosting a block party and needs a game developed for the community to play with their friends and family. You explore APIs and their documentation to identify features that you can add to your programs. To begin developing the Pop the Balloon game for The Neighborhood block party, you import The Park API and use it to implement clickable images."
      },
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Solving Problems with the Math Class",
      "name": "Solving Problems with the Math Class",
      "absolute_position": 2,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 2,
      "properties": {
        "overview": "Students revisit the `Math` class, going more in-depth to explore its methods. They learn about `final` classes and static methods and identify their purposes and uses. They use `Math.pow(double a, double b)`,  `Math.abs(double a)`, and `Math.sqrt(double a)` to solve problems.",
        "preparation": "* Print copies of the Math Class Activity Guide (one per student)",
        "student_overview": "In Unit 3, you looked at the source code for the `Math` class, but now it’s time to see what it can do! In this lesson, you learn about `final` classes and static methods and identify their purposes and uses. You use some of the `Math` class methods - `Math.pow(double a, double b)`,  `Math.abs(double a)`, and `Math.sqrt(double a)` - to solve problems."
      },
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Treating Data as a Different Types",
      "name": "Treating Data as a Different Types",
      "absolute_position": 3,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 3,
      "properties": {
        "overview": "Students revisit the Project Mercury Pastries Food Truck to learn about casting, rounding, and random numbers. The students solve scenarios for the food truck owner using their knowledge of Java and the `Math` class.",
        "preparation": "* Print copies of the Casting Exploration handout (one per student)",
        "student_overview": "The Food Truck has run out of coins! Because the owner can’t give change with coins, she can only charge whole dollar amounts and no cents. You learn how to use casting, rounding, and random numbers to help the owner through her coin shortage."
      },
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Comparing Values to Make Decisions",
      "name": "Comparing Values to Make Decisions",
      "absolute_position": 4,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 4,
      "properties": {
        "overview": "Students use relational operators to write and evaluate expressions. Students expand their use of `if` statements to compare values stored in variables and array elements. ",
        "preparation": "* Print copies of the Exploring Operators handout (one per student)\n* Gather 3-5 sticky notes for each pair of students",
        "student_overview": "Today is all about using code to make decisions. You compare relationships between values while using conditional statements to help the `Painter` make decisions. "
      },
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Adding Randomness to a Program",
      "name": "Adding Randomness to a Program",
      "absolute_position": 5,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 5,
      "properties": {
        "overview": "In this lesson, students develop the dice rolling feature of the Pop the Balloon game. Each subtask of the development process requires students to add different randomization features, including generating numbers between ranges, computing probabilities, and using conditional statements that are executed based on varying results.",
        "preparation": "* Print and cut out a class set of Quiz, Quiz, Trade cards",
        "student_overview": "One of the most common use cases for generating random numbers are games of chance like rolling dice, shuffling playing cards, and flipping a coin. Games often use random numbers to generate different outcomes. Today, you add randomization to the Pop the Balloon game by adding a dice rolling feature."
      },
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Comparing Object References and Data",
      "name": "Comparing Object References and Data",
      "absolute_position": 6,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 6,
      "properties": {
        "overview": "Students differentiate between comparisons of objects and primitive values. Students explore the effects of using `==` or `!=` with objects to identify the need for the `equals()` method to compare object data.",
        "preparation": "* For each pair of students, prepare:\n   * One copy of the Comparing Objects activity guide\n   * Object References Manipulatives and three paper clip chains\n   * 5-6 sticky notes",
        "student_overview": "We have compared two `int`s or `double`s for equality, but how do we compare objects? Can two `String`s be equal? What about two donuts? You discover how to test two objects for equality and implement your findings in the Pop the Balloons game."
      },
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Providing an Alternate Path of Execution",
      "name": "Providing an Alternate Path of Execution",
      "absolute_position": 7,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 7,
      "properties": {
        "overview": "Students review `if/else` statements and use them to implement alternate actions based on the outcome of a Boolean expression. Students apply `if/else` statements to access elements from arrays and use `Math.random()` to access random elements. `if/else` statements are then implemented in the Pop the Balloons game to check the validity of a move.",
        "student_overview": "You review `if/else` statements and use them to implement alternate actions based on the outcome of a Boolean expression. You apply `if/else` statements to access elements from arrays and use `Math.random()` to access random elements. You then implement `if/else` statements in the Pop the Balloons game to check whether a move is valid."
      },
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Testing Multiple Conditions",
      "name": "Testing Multiple Conditions",
      "absolute_position": 8,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 8,
      "properties": {
        "overview": "Students use `if/else-if/else` statements to evaluate multiple conditions to select a specific desired outcome. Students develop the balloon display feature of the Pop the Balloons game using `if/else-if/else` statements to change the image of the balloon if it has been popped.",
        "student_overview": "Today is all about evaluating multiple conditions to select a specific desired outcome. In The Neighborhood, you use `if/else-if/else` statements to solve problems for the `Painter`. You then implement `if/else-if/else` statements in the Pop the Balloons game to update the picture of the balloon if it has been popped. "
      },
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Using Logical Operators",
      "name": "Using Logical Operators",
      "absolute_position": 9,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 9,
      "properties": {
        "overview": "Students explore problems involving multiple conditions and write nested `if` statements to create solutions for these problems. Students write expressions involving logical operators in conditional statements and identify the effect of logical operators on the outcome of the expression. Nested `if` statements and logical operators are then implemented in the Pop the Balloons game to check how many moves are left and calculate the score.",
        "student_overview": "You learn how to write nested `if` statements and expressions involving three logical operators. You simplify more complex multiple conditionals using logical operators to solve problems. You revisit The Neighborhood and add nested `if` statements to solve a given problem for the `Painter`. You then implement nested `if` statements and logical operators in the Pop the Balloons game to check how many moves are left and calculate the game's score."
      },
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Applying De Morgan's Laws to Boolean Expressions",
      "name": "Applying De Morgan's Laws to Boolean Expressions",
      "absolute_position": 10,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 10,
      "properties": {
        "overview": "Students learn how to construct truth tables to represent compound Boolean expressions. Students work together to use truth tables to prove De Morgan’s Laws and explore open-source code.",
        "preparation": "* Print one-sided copies of the Vocabulary Don’t-Say-It! activity guide (one copy for each group of 4-5 students)\n* Cut out the cards for the vocabulary game or gather a pair of scissors for each group of students\n* Print copies of the Truth Tables activity guide (one copy for each student)\n* Print out the station instructions in the Around the World Printouts resource\n* Prepare stacks of sticky notes, poster paper, and markers for each Around the World station\n* Print copies of the Unit 4 Guide (one copy for each student)",
        "student_overview": "You learn about truth tables, a tool we can use to evaluate compound Boolean expressions. You learn about De Morgan's Laws and prove them with a partner using truth tables."
      },
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Neighborhood Block Party Project - Day 1",
      "name": "Neighborhood Block Party Project - Day 1",
      "absolute_position": 11,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 11,
      "properties": {
        "overview": "Students design and build a game engine for this project, focusing primarily on the conditional logic needed to make the game interactive and responsive. Students begin by choosing a simple game and identify its core functionalities. They write pseudocode for these components and begin the development of their project.",
        "preparation": "* Review the project setup, requirements, and rubric\n* Print copies of the Game Engine Project Planning Guide (one per student)",
        "student_overview": "For this project, you design the core elements for a simple game by planning and developing a game engine. You outline the game mechanics, pseudocode each component, then use an interactive design process to make a game that reacts to a user’s interaction. At the end of this project, you participate in a block party to play one another’s games!"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Neighborhood Block Party Project - Day 2",
      "name": "Neighborhood Block Party Project - Day 2",
      "absolute_position": 12,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 12,
      "properties": {
        "overview": "In the previous lesson, students planned a game engine for a simple game and wrote pseudocode for its core functions. Students begin the development of their game engine by translating their pseudocode to Java. They participate in a code review and reflect on their progress to prepare for the final development of their game engine.",
        "student_overview": "Now that you have a plan, today’s goal is to write code. You begin the development of your game engine by translating your pseudocode to Java. You participate in a code review and reflect on your progress to prepare for the final development of your game engine."
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Neighborhood Block Party Project - Day 3",
      "name": "Neighborhood Block Party Project - Day 3",
      "absolute_position": 13,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 13,
      "properties": {
        "overview": "Students begin the second iteration of their project. After working on their code, they self-assess their work against the project rubric and create a final priority list for their last iteration. Students then complete their last iteration, and the class celebrates in the form of a block party where students play each others’ games. Students finish the project with a final reflection and identify potential next steps to continue developing their game.",
        "preparation": "* Gather 3-4 sticky notes per student",
        "student_overview": "It’s Block Party Day! Before the party begins, you will participate in two iterations to further develop your game engine and revise your priority list based on your progress and project requirements. At the end of class, you celebrate your success by playing each other's games and celebrating your development."
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "FRQ Day",
      "name": "FRQ Day",
      "absolute_position": 14,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 14,
      "properties": {
        "overview": "Students complete a Free Response Question (FRQ) in this lesson. Building on prior FRQ work, they begin to work more independently, working through annotating, pseudocoding, and completing an FRQ on their own. After annotating and writing their solutions, students still discuss their results with their peers and receive support.  \n\nThe goals of this lesson are:\n* Practice annotating an FRQ\n* Practice writing pseudocode for an FRQ\n* Practice writing a solution for an FRQ\n* Practice scoring an FRQ against a scoring rubric",
        "preparation": "* Print one copy for each student of the following handouts:\n   * FRQ Writing\n   * FRQ Scoring Guide\n* Gather one sheet of scratch paper per student\n* Gather one sticky note per student",
        "student_overview": "Today you complete a Free Response Question (FRQ) almost completely on your own. To derive a solution for the FRQ on your own, you will follow a three step process: annotating, writing pseudocode, and writing code in Java. Finally, you score your attempt against a scoring rubric and reflect on your experience."
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "Assessment Day",
      "name": "Assessment Day",
      "absolute_position": 15,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 15,
      "properties": {
        "assessment": true,
        "overview": "In this unit, students expanded the expressions used in conditionals and iteration to use relational and logical operators. Students used casting operators and `Math` class methods to write and evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. Students developed an understanding of De Morgan's Laws and writing truth tables. Now, students evaluate achievement of the unit learning objectives and skills on a multiple-choice assessment.",
        "preparation": "* Preview the assessment questions\n* Unlock the assessment questions",
        "student_overview": "In this unit, you expanded the expressions used in conditionals and iteration to use relational and logical operators. You used casting operators and `Math` class methods to write and evaluate expressions and perform calculations, including implementing random in program decisions and behaviors. You developed an understanding of De Morgan's Laws and writing truth tables. Now, you evaluate your achievement of the unit learning objectives and skills on a multiple-choice assessment."
      },
      "seeding_key": {
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    }
  ],
  "lesson_activities": [
    {
      "key": "49368e24-4ff9-4528-9cfe-a0bd9aef82be",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "49368e24-4ff9-4528-9cfe-a0bd9aef82be",
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41",
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "0365cd96-541e-4fb8-bb3f-e03bd83c234b",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "0365cd96-541e-4fb8-bb3f-e03bd83c234b",
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "32ea12d9-b8fe-4b95-bbd8-4b1ed1d6c1f8",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "32ea12d9-b8fe-4b95-bbd8-4b1ed1d6c1f8",
        "lesson.key": "Solving Problems with the Math Class",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02",
        "lesson.key": "Solving Problems with the Math Class",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "0bf2c859-1cd1-4f1a-812a-b417089c69be",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "0bf2c859-1cd1-4f1a-812a-b417089c69be",
        "lesson.key": "Solving Problems with the Math Class",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "223860fb-8836-4a52-bff7-2dd40254f519",
      "position": 1,
      "properties": {
        "duration": 3,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "223860fb-8836-4a52-bff7-2dd40254f519",
        "lesson.key": "Treating Data as a Different Types",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "03c9bfee-5192-47c1-ae15-a865574011f8",
      "position": 2,
      "properties": {
        "duration": 40,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8",
        "lesson.key": "Treating Data as a Different Types",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "8298442d-a51a-4ad3-8a43-7519d0bf44e1",
      "position": 3,
      "properties": {
        "duration": 2,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "8298442d-a51a-4ad3-8a43-7519d0bf44e1",
        "lesson.key": "Treating Data as a Different Types",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "14e568b4-2bdf-456a-9b0e-3de0d733a968",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "14e568b4-2bdf-456a-9b0e-3de0d733a968",
        "lesson.key": "Comparing Values to Make Decisions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "80924630-ca01-446e-add2-f9284c1b7364",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364",
        "lesson.key": "Comparing Values to Make Decisions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "852cdb1b-b7b1-4271-8014-a352d3077993",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "852cdb1b-b7b1-4271-8014-a352d3077993",
        "lesson.key": "Comparing Values to Make Decisions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "3b80755a-5f38-4386-860c-6871eb0538d7",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "3b80755a-5f38-4386-860c-6871eb0538d7",
        "lesson.key": "Adding Randomness to a Program",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "72523b0a-3d3a-4206-a14d-6284063f83dd",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd",
        "lesson.key": "Adding Randomness to a Program",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "0036794f-9f09-4fe4-921e-36a9fdfdeada",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "0036794f-9f09-4fe4-921e-36a9fdfdeada",
        "lesson.key": "Adding Randomness to a Program",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "6f4a197b-d154-44b2-b524-6e1f66a0de81",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "6f4a197b-d154-44b2-b524-6e1f66a0de81",
        "lesson.key": "Comparing Object References and Data",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade",
        "lesson.key": "Comparing Object References and Data",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "8dc839cd-4a61-4ff4-8fa9-3e93cae012da",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "8dc839cd-4a61-4ff4-8fa9-3e93cae012da",
        "lesson.key": "Comparing Object References and Data",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "97a2b96d-9310-4eab-b7fb-0f3ae73bbf55",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "97a2b96d-9310-4eab-b7fb-0f3ae73bbf55",
        "lesson.key": "Providing an Alternate Path of Execution",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "1187b286-d15a-4172-be9c-a25ed221ba29",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29",
        "lesson.key": "Providing an Alternate Path of Execution",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "b6d4dc14-2e1f-4c31-8e8f-91f1dbe21d5e",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "b6d4dc14-2e1f-4c31-8e8f-91f1dbe21d5e",
        "lesson.key": "Providing an Alternate Path of Execution",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "0c295ce5-6521-4474-af4e-d5e0cb1c6e54",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "0c295ce5-6521-4474-af4e-d5e0cb1c6e54",
        "lesson.key": "Testing Multiple Conditions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "77756c35-c621-411c-8272-6149cfd47dfe",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe",
        "lesson.key": "Testing Multiple Conditions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "b54cf23f-bdb9-4a6d-a5bd-485a6c381c50",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "b54cf23f-bdb9-4a6d-a5bd-485a6c381c50",
        "lesson.key": "Testing Multiple Conditions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "80574f7f-bf6f-4846-899c-cb0cb49347a1",
      "position": 1,
      "properties": {
        "duration": 10,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "80574f7f-bf6f-4846-899c-cb0cb49347a1",
        "lesson.key": "Using Logical Operators",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "e540042f-1994-4199-91df-0946b4f226fb",
      "position": 2,
      "properties": {
        "duration": 30,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb",
        "lesson.key": "Using Logical Operators",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "30521431-1757-443d-9fe6-dc74f55fe7b6",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "30521431-1757-443d-9fe6-dc74f55fe7b6",
        "lesson.key": "Using Logical Operators",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "3804a50f-6631-45ed-aaec-d57803d09f83",
      "position": 1,
      "properties": {
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "3804a50f-6631-45ed-aaec-d57803d09f83",
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "358622a0-f748-4191-bb28-e139dbb96115",
      "position": 2,
      "properties": {
        "duration": 28,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115",
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "5def2c10-9a03-44cc-84df-f9b3f4252931",
      "position": 3,
      "properties": {
        "duration": 7,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "5def2c10-9a03-44cc-84df-f9b3f4252931",
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "17f89756-3409-4329-9193-0709e963b245",
      "position": 1,
      "properties": {
        "name": "Project Setup"
      },
      "seeding_key": {
        "lesson_activity.key": "17f89756-3409-4329-9193-0709e963b245",
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "db48cbe8-d728-4561-bb90-b1a079c5c709",
      "position": 2,
      "properties": {
        "duration": 3,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "db48cbe8-d728-4561-bb90-b1a079c5c709",
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "b158439b-4ded-447b-b3e2-566b7c4e8998",
      "position": 3,
      "properties": {
        "duration": 37,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "b158439b-4ded-447b-b3e2-566b7c4e8998",
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "b363a23d-160f-4951-af56-422dea6b2b6e",
      "position": 4,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "b363a23d-160f-4951-af56-422dea6b2b6e",
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "f7320864-4100-4d1c-a2ae-c1801ae87322",
      "position": 1,
      "properties": {
        "duration": 10,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "f7320864-4100-4d1c-a2ae-c1801ae87322",
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "c4a677fe-eeac-4340-997a-8745ed71762f",
      "position": 2,
      "properties": {
        "duration": 30,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "c4a677fe-eeac-4340-997a-8745ed71762f",
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "bae3b9fc-77ef-4651-84a7-f972647fefb8",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "bae3b9fc-77ef-4651-84a7-f972647fefb8",
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "4579b56d-089e-4185-b90b-e4ad8237356f",
      "position": 1,
      "properties": {
        "duration": 40,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f",
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "316d1beb-5f00-4e2d-bdd0-72e5d64f0612",
      "position": 2,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "316d1beb-5f00-4e2d-bdd0-72e5d64f0612",
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "0328967a-6e64-4a19-ad68-0cb8a92df4a6",
      "position": 1,
      "properties": {
        "duration": 9,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "0328967a-6e64-4a19-ad68-0cb8a92df4a6",
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "04aa65d2-c9db-4288-ba82-ea205714ed03",
      "position": 2,
      "properties": {
        "duration": 33,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03",
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "ca4a20f5-cf37-4dd7-a542-4186ba9e42c3",
      "position": 3,
      "properties": {
        "duration": 3,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "ca4a20f5-cf37-4dd7-a542-4186ba9e42c3",
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "95288af4-e414-4d5f-82b9-36d7e0ca2b6a",
      "position": 1,
      "properties": {
        "duration": 45,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "95288af4-e414-4d5f-82b9-36d7e0ca2b6a",
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    },
    {
      "key": "ea3f9736-ea5e-4616-a675-b30b68ada78b",
      "position": 2,
      "properties": {
        "name": "Wrap Up (Optional)"
      },
      "seeding_key": {
        "lesson_activity.key": "ea3f9736-ea5e-4616-a675-b30b68ada78b",
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa4-pilot-facilitator"
      }
    }
  ],
  "activity_sections": [
    {
      "key": "f89433e3-613b-4732-b391-8a3ea3136e87",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the examples of an app using universal login, Google Maps on a website, and posting on social media from other websites and apps.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What are examples of apps and websites that use functionalities from other apps and services?*\n\n**Discussion Goal:** Students share examples they have seen or used, such as sharing a post on Instagram to Twitter or getting directions to a store location on the store's website.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *How is it possible for apps and websites to use the functionalities of other apps and services?*\n\n**Discussion Goal:** Students guess that software engineers might be writing code to send information to other apps or that they might be using existing code that communicates between their app and other apps.",
        "name": "App Functionalities"
      },
      "seeding_key": {
        "activity_section.key": "f89433e3-613b-4732-b391-8a3ea3136e87",
        "lesson_activity.key": "49368e24-4ff9-4528-9cfe-a0bd9aef82be"
      }
    },
    {
      "key": "152f880e-1f32-4e4e-9acc-534e93bbd5b6",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Software engineers often use application program interfaces, or APIs, to create interaction between their program and other programs. APIs contain tools and libraries that software engineers can use in their programs.\n\nWe use the Java API to write our programs. Let's explore it by looking at some classes we have been using and find out exactly where they come from and what we can do with them.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "152f880e-1f32-4e4e-9acc-534e93bbd5b6",
        "lesson_activity.key": "49368e24-4ff9-4528-9cfe-a0bd9aef82be"
      }
    },
    {
      "key": "59bf43ac-ca19-4925-a426-a5c15f5e862d",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Run the program on Level 1 for the class to demonstrate the error that occurs.",
        "duration": "10",
        "name": "The Scanner Class",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Alternatively, direct students to Level 1 on Code Studio to run the program individually to identify the error."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "59bf43ac-ca19-4925-a426-a5c15f5e862d",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "650b1a4d-1c14-4f05-a737-4f4d7eca0452",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What do you think caused this error?*\n\n**Discussion Goal:** Students guess the meaning of the error displayed in the console, including that Java does not know what a `Scanner` object is. Some students may have noticed the `import` statement at the top of previous programs they have written and may point out that the `import` statement is missing."
      },
      "seeding_key": {
        "activity_section.key": "650b1a4d-1c14-4f05-a737-4f4d7eca0452",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "7596aad4-61fa-46ac-ba32-9d1dc371f534",
      "position": 3,
      "properties": {
        "description": "We have created `Scanner` objects before, but we did not have to create a `Scanner` class first.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> But remember that no class, __________ (no object)!",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "7596aad4-61fa-46ac-ba32-9d1dc371f534",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "63ae431a-887d-4b07-a953-ed411d2feaa3",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *How were we able to create `Scanner` objects when we did not create a `Scanner` class first?*\n\n**Discussion Goal:** Students guess that something told Java where to find the `Scanner` class.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio to review the `Scanner` class documentation. Have students work with a partner to find the components listed on the slide in the `Scanner` class documentation."
      },
      "seeding_key": {
        "activity_section.key": "63ae431a-887d-4b07-a953-ed411d2feaa3",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "d5ea9ea5-9d6c-4a21-aa90-e1ef6e62dae7",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to discuss the prompts.\n* *What did you find out about the `Scanner` class?*\n* *What did you notice about the constructors and methods for the `Scanner` class?*\n* *What do you wonder?*\n\n**Discussion Goal:** Students share information they found about the `Scanner` class, including descriptions, constructors for creating `Scanner` objects, and methods that they can use. Students may wonder about other methods in the `Scanner` class that they have not used yet.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to define packages, explain their purpose, and demonstrate how to use them in a program.\n* A package is a collection of similar classes.\n* The `Scanner` class is in the `java.util` package.\n* Use the `import` statement to use a package in a program."
      },
      "seeding_key": {
        "activity_section.key": "d5ea9ea5-9d6c-4a21-aa90-e1ef6e62dae7",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "c1665dc5-71b7-44e7-8bc0-3a5fd396390e",
      "position": 6,
      "properties": {
        "description": "`String` is another object that we create and use in our programs, but we never wrote a `String` class.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> But no class, ______ (no object)!\n\nLike with the `Scanner` class, we can create `String` objects without first creating a `String` class because it is in a package.",
        "duration": "10",
        "name": "The String Class",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c1665dc5-71b7-44e7-8bc0-3a5fd396390e",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "32c7c14d-23be-44b0-92e2-57f842042d76",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 2 on Code Studio. Have students work with a partner to find the components listed on the slide in the `String` class documentation."
      },
      "seeding_key": {
        "activity_section.key": "32c7c14d-23be-44b0-92e2-57f842042d76",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "2e730bc0-b520-4d92-bf95-0eccaa29d648",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Click through the animated slide to discuss the prompts.*\n* *What did you find out about the `String` class?*\n* *What did you notice about the constructors and methods for the `String` class?*\n* *What do you wonder?*\n\n**Discussion Goal:** Students share information they found about the `String` class, including descriptions, constructors for creating `String` objects, and methods that they can use. Students may wonder about other methods in the `String` class that they have not used yet.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Which package can we find the `String` class?*\n\n**Discussion Goal:** Students share that the `String` class is part of the `java.lang` package.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Why do you think we can create `String` objects without first importing `java.lang`?*\n\n**Discussion Goal:** Students guess that the `java.lang` package is the core package of the Java language. Java automatically includes this package in every program.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may wonder about the difference between the `java.util` and the `java.lang` package. Reinforce to students that since packages contain similar classes, they have different types of classes based on their overall purposes or common themes."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "2e730bc0-b520-4d92-bf95-0eccaa29d648",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "6637b283-c696-4edf-b099-b486d7c8c0ee",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the APIs and Libraries video."
      },
      "seeding_key": {
        "activity_section.key": "6637b283-c696-4edf-b099-b486d7c8c0ee",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "d36adae3-737f-4e8b-a44c-bb2202412713",
      "position": 10,
      "properties": {
        "description": "The `Scanner` and `String` classes are part of the Java API, which we use to write programs. That is why the package names start with java, such as `java.util` and `java.lang`.\n\nWe saw at the beginning of class that apps and websites often use functions from other apps. The software engineers of these programs can add functions and interact with other apps by using APIs.\n\nLet's look at some popular APIs used in many of the programs we use every day.",
        "duration": "15",
        "name": "Exploring APIs",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "d36adae3-737f-4e8b-a44c-bb2202412713",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "dad43519-551e-483f-bc5c-ee4f20bb8ca0",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 3 on Code Studio. Students explore example APIs such as Google Developers and Spotify for Developers."
      },
      "seeding_key": {
        "activity_section.key": "dad43519-551e-483f-bc5c-ee4f20bb8ca0",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "61aa76ce-505b-46f9-87c2-49af2c3b48db",
      "position": 12,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Click through the animated slide to discuss the prompts.*\n* *What do you notice about these APIs?*\n* *What do you wonder?*\n\n**Discussion Goal:** Students notice that the APIs define functionalities that a software engineer can incorporate into their programs and include documentation explaining how to use them. Students may wonder if there are APIs for other apps they use or how to incorporate these into their programs."
      },
      "seeding_key": {
        "activity_section.key": "61aa76ce-505b-46f9-87c2-49af2c3b48db",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "bf9a7582-2363-4208-b3b1-5a70851a3103",
      "position": 13,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The Neighborhood is hosting a block party, and you have been asked to develop a game to play at the block party. In this unit, you will implement the API for The Park, which allows people in the community to gather to play games with their friends and family.\n\nThroughout this unit, you will develop a game called Pop the Balloon for The Neighborhood Block Party.",
        "duration": "10",
        "name": "Introduction to The Park",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "bf9a7582-2363-4208-b3b1-5a70851a3103",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "7c5aecf8-6b26-4d0b-8d12-d8a2809b5783",
      "position": 14,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 4 on Code Studio to review the API documentation for The Park."
      },
      "seeding_key": {
        "activity_section.key": "7c5aecf8-6b26-4d0b-8d12-d8a2809b5783",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "2e82c047-1dda-4bbd-88db-b447a0ef9d21",
      "position": 15,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What could you do or create with this API?*\n\n**Discussion Goal:** Students notice the API includes adding and removing images and clickable images. Students also notice that the API allows them to play sounds. Students share ideas about making games and interactive programs.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Return students to Level 4 on Code Studio. Students import The Park and run the sample code."
      },
      "seeding_key": {
        "activity_section.key": "2e82c047-1dda-4bbd-88db-b447a0ef9d21",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "4053175d-6fbb-4c11-8bff-87553bbc44e0",
      "position": 16,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to introduce using The Park.\n* Adding a `ClickableImage`\n* Writing the `onClick()` method\n* Adding an `Image`\n* Removing an image\n* Playing a sound effect\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 5 on Code Studio. Students add a balloon as a `ClickableImage`, then add a popped balloon as an Image that shows when the balloon is clicked."
      },
      "seeding_key": {
        "activity_section.key": "4053175d-6fbb-4c11-8bff-87553bbc44e0",
        "lesson_activity.key": "5707f5bb-bd86-4132-a8b9-e630d21b2a41"
      }
    },
    {
      "key": "5b75c380-ac05-41e5-a2be-9d8da88b8ca7",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Click through the animated slide to discuss the prompts.*\n* *What did we learn today?*\n* *So what?*\n* *Now what?*\n\n**Discussion Goal:** Students discuss the purpose of APIs and libraries and the benefits of using APIs. Students make predictions about how they will use APIs and libraries throughout the unit.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Three W's"
      },
      "seeding_key": {
        "activity_section.key": "5b75c380-ac05-41e5-a2be-9d8da88b8ca7",
        "lesson_activity.key": "0365cd96-541e-4fb8-bb3f-e03bd83c234b"
      }
    },
    {
      "key": "a11a1476-a6b8-476f-8d13-2dca7405e23b",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "a11a1476-a6b8-476f-8d13-2dca7405e23b",
        "lesson_activity.key": "0365cd96-541e-4fb8-bb3f-e03bd83c234b"
      }
    },
    {
      "key": "0f048b68-1d1b-44af-95c7-89bc0bc207ee",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of the Solving Problems with the Math Class handout.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete the “What We Know” column on the KWL chart on the first page of the handout.",
        "name": "KWL: Math Class/Static Methods",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "During this time, students should only complete the “What We Know” column. Students complete the other two columns throughout the lesson."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "0f048b68-1d1b-44af-95c7-89bc0bc207ee",
        "lesson_activity.key": "32ea12d9-b8fe-4b95-bbd8-4b1ed1d6c1f8"
      }
    },
    {
      "key": "22f584ea-3071-4087-a497-c9087cf7d1b8",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *With a partner, share what you wrote in the “What We Know” column. Add to your column based on what your partner shares.*\n\n**Discussion Goal:** Students recall what they learned about the `Math` class and how they used the static keyword to create shared variables and constants."
      },
      "seeding_key": {
        "activity_section.key": "22f584ea-3071-4087-a497-c9087cf7d1b8",
        "lesson_activity.key": "32ea12d9-b8fe-4b95-bbd8-4b1ed1d6c1f8"
      }
    },
    {
      "key": "e69134e1-b7b5-47b8-af46-f2d868f1604b",
      "position": 3,
      "properties": {
        "description": "In Unit 3, we looked at the source code for the `Math` class. Today, we’ll be spending more time with the `Math` class, working with several of its methods. Before we get started in Code Studio, we will be completing a Scavenger Hunt through the `Math` class documentation.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "e69134e1-b7b5-47b8-af46-f2d868f1604b",
        "lesson_activity.key": "32ea12d9-b8fe-4b95-bbd8-4b1ed1d6c1f8"
      }
    },
    {
      "key": "8584af70-9c1e-4c22-888d-6c5f823f4eb8",
      "position": 1,
      "properties": {
        "description": "**Group:** Place students in pairs.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to turn to the next page in their activity guide and work with their partners to complete the Math Class Scavenger Hunt.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio to review the `Math` class documentation. Have students work with a partner to find the components listed on their Scavenger Hunt within the `Math` class documentation.",
        "duration": "10",
        "name": "Revisiting the Math Class"
      },
      "seeding_key": {
        "activity_section.key": "8584af70-9c1e-4c22-888d-6c5f823f4eb8",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "6e9e1128-c0e2-46af-b8a9-a86aa51e7a17",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to discuss the prompts.\n* *What did you find most interesting about the `Math` class?*\n* *What questions do you have?*\n\n**Discussion Goal:** Students share what they found during the Math Class Scavenger Hunt and any questions.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete the “What We Want to Know” column on the KWL chart on their Activity Guide. Students can add to this column throughout the lesson."
      },
      "seeding_key": {
        "activity_section.key": "6e9e1128-c0e2-46af-b8a9-a86aa51e7a17",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "1ab9532b-3980-472f-bdfb-8191a91ec98d",
      "position": 3,
      "properties": {
        "description": "`Math` is a special type of class because it is `final`. You likely have many questions about the `Math` class at this point, and you may have some written on your KWL chart. Today, we will be learning more about what `final` classes and static methods are and why we use them. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1ab9532b-3980-472f-bdfb-8191a91ec98d",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "e9f613c6-a006-4100-bb60-42015d9c17b0",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Show the Final Classes and Static Methods video. Direct students to answer the questions at the bottom of the second page of their activity guide.\n\n**Display:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Show the definitions of `final` class and static method.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Review how to call a static method.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Based on our definitions of `final` classes and static methods, why do you think the `Math` class is `final` with all static methods?*\n\n**Discussion Goal:** Students identify that mathematical operations or constant values should do the same thing, regardless of the input. A `Math` object does not need to be created to use its methods.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may struggle to identify why the `Math` class is `final` and has only static methods. A few guiding questions might include:\n* *What might happen if we could change different mathematical formulas or calculations depending on the input?*\n* *If we were to create `Math` objects, what would you want to change about them? In other words, what instance variables would you declare?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "e9f613c6-a006-4100-bb60-42015d9c17b0",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "e182964c-ed34-4bc0-9bff-431eb61e5063",
      "position": 5,
      "properties": {
        "description": "While `Math` is a `final` class with all static methods, we can also create static methods within non-`final` classes. We have already seen an example of this in The Theater!",
        "duration": "7",
        "name": "The Theater: Static Variables and Methods"
      },
      "seeding_key": {
        "activity_section.key": "e182964c-ed34-4bc0-9bff-431eb61e5063",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "5a103b91-9978-48ce-8af8-637f48d03df9",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to the Conductor Source Code from The Theater on page 3 of their activity guide. With a partner, students trace the code and write notes.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *After reviewing the Conductor source code, why do you think the `makeNotes()` method is static?*\n\n**Discussion Goal:** Students identify that this method has to do with playing music in The Theater. While the input may change, users would expect music to play the same regardless of what the input is. Therefore, instead of an object calling each method, the class itself calls the method."
      },
      "seeding_key": {
        "activity_section.key": "5a103b91-9978-48ce-8af8-637f48d03df9",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "fc4482cd-8435-4c8e-aebc-d0f7f8c42c04",
      "position": 7,
      "properties": {
        "description": "Now that we have a better understanding of `final` classes and static methods, we will focus on three methods from the `Math` class. While you may have noticed that the `Math` class has many different methods, we are focusing today on `Math.abs(double a)`, `Math.sqrt(double a)`, and `Math.pow(double a, double b)`.",
        "duration": "18",
        "name": "Working with Math",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "fc4482cd-8435-4c8e-aebc-d0f7f8c42c04",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "5374ac39-1e99-4dd3-b4b1-2667adc4bd69",
      "position": 8,
      "properties": {
        "description": "**Do This:** Click through the animated slides to demonstrate the `Math` class methods.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> `Math.abs(double a)`\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> `Math.sqrt(double a)`\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> `Math.pow(double a, double b)`",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "When attempting to calculate the square root of a negative number, Java returns `NaN`, which stands for “Not a Number.” Negative numbers do not have square roots (since they must be positive or zero), so Java will always return `NaN`."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "5374ac39-1e99-4dd3-b4b1-2667adc4bd69",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "2a73b226-64ab-45a9-a538-bddebfd7a7c7",
      "position": 9,
      "properties": {
        "description": "Now that we’re familiar with how each of these `Math` methods works, let’s practice using them!",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "2a73b226-64ab-45a9-a538-bddebfd7a7c7",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "a7e73279-2f5f-4f22-8718-e203856043eb",
      "position": 10,
      "properties": {
        "description": "**Group:** Place students in pairs.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Levels 2 through 6 on Code Studio. Students work with the `Scanner` and `Math` classes to calculate the absolute value, square root, and calculate the exponential output of user input.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "It is okay if students do not finish all five levels. All levels involve using the `Math` class methods highlighted in this lesson while also allowing students to practice with content from previous lessons.\n\nStudents will have access to the Java Quick Reference on the AP Exam, including the `Math` class methods from this lesson."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "a7e73279-2f5f-4f22-8718-e203856043eb",
        "lesson_activity.key": "e0f3a18e-7d6d-487a-b4ff-24221fe4ce02"
      }
    },
    {
      "key": "3f4eeca9-73d5-4da7-ae0b-5d8e97c9caf8",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students back to their KWL chart on the first page of their activity guide. Direct students to complete the “What We Learned” column with at least three takeaways from this lesson.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *With a partner, share what you wrote in the “What We Learned” column. Add to your column based on what your partner shares.*\n\n**Discussion Goal:** Students share their major takeaways from the lesson and add new information from their discussion with their partners.",
        "name": "KWL: What We Learned"
      },
      "seeding_key": {
        "activity_section.key": "3f4eeca9-73d5-4da7-ae0b-5d8e97c9caf8",
        "lesson_activity.key": "0bf2c859-1cd1-4f1a-812a-b417089c69be"
      }
    },
    {
      "key": "9c564eef-fc5c-4bdc-a5e3-0fd40c2388d8",
      "position": 2,
      "properties": {
        "description": "Today, we spent a lot of time with the `Math` class and practiced using  `Math.abs(double a)`, `Math.pow(double a, double b)`, and `Math.sqrt(double a)`. Tomorrow, you will learn about another method from the `Math` class that is particularly helpful as we work to create games: `Math.random`.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "9c564eef-fc5c-4bdc-a5e3-0fd40c2388d8",
        "lesson_activity.key": "0bf2c859-1cd1-4f1a-812a-b417089c69be"
      }
    },
    {
      "key": "f7cb3855-5ea2-4046-967a-3916cc36abca",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "f7cb3855-5ea2-4046-967a-3916cc36abca",
        "lesson_activity.key": "0bf2c859-1cd1-4f1a-812a-b417089c69be"
      }
    },
    {
      "key": "19e31212-3141-448a-be30-cb9c40b901b1",
      "position": 4,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "19e31212-3141-448a-be30-cb9c40b901b1",
        "lesson_activity.key": "0bf2c859-1cd1-4f1a-812a-b417089c69be"
      }
    },
    {
      "key": "2ed21369-8acf-4407-93e4-14e68bd45cc5",
      "position": 1,
      "properties": {
        "description": "Yesterday you learned how to use the `Math` class. Today we revisit the Project Mercury Pastries Food Truck.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "2ed21369-8acf-4407-93e4-14e68bd45cc5",
        "lesson_activity.key": "223860fb-8836-4a52-bff7-2dd40254f519"
      }
    },
    {
      "key": "dc7b5f56-1c4a-4305-ba28-51be18a60617",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to discuss the prompt.\n* *The Food Truck has run out of coins! Because the owner can’t give change with coins, she can only charge whole dollar amounts and no cents. With a partner, discuss: How can the owner change the prices of the desserts so that they are all whole numbers?*\n\n**Discussion Goal:** Students share out that the owner could round the price to the nearest dollar. She could also instead always round down or always round up.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "To guide students to think about always rounding down, ask leading questions like, *“What if the owner doesn’t want to overcharge customers?”*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "dc7b5f56-1c4a-4305-ba28-51be18a60617",
        "lesson_activity.key": "223860fb-8836-4a52-bff7-2dd40254f519"
      }
    },
    {
      "key": "219abf0a-cc08-41fc-baf8-e89618835a21",
      "position": 1,
      "properties": {
        "description": "Today we’re going to learn how to round up to the nearest whole number and round down. We’re going to start with rounding down, or truncation.",
        "duration": "8",
        "name": "Casting Exploration",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "219abf0a-cc08-41fc-baf8-e89618835a21",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "fd7db555-3905-4b41-946c-60330b92b399",
      "position": 2,
      "properties": {
        "description": "**Group:** Place students in groups of two.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a Casting Exploration handout. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Give students seven minutes to complete page one of the Casting Exploration activity. As students are working, use Catch and Release as appropriate to maintain engagement. You may choose to catch to:\n* Assist students in writing the code in Code Studio.\n* Clarify how casting works.\n* Support students with misconceptions involving mathematical concepts.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Catch and Release is a technique to allow students to explore a concept with intermittent support while preventing students from struggling for too long or disengaging. As students work, circulate and note any misconceptions. After the two minutes, briefly clarify issues or pose a question to the class that students have been struggling with, then send them back to their work.\n\nIt is not necessary to bring the class back together after every question. If individual discussions address questions or students do not need the answer to continue working, you may choose to address these questions during the summary.\n\nOptional differentiation: Use a public timer to differentiate between independent work and discussion, addressing all student questions after a given amount of time has elapsed."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "fd7db555-3905-4b41-946c-60330b92b399",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "01b8a88c-bfb2-4cbe-a472-732d692e1661",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What do you think casting means?*\n\n**Discussion Goal:** Students share their ideas about what casting means.\n\n**Display:** Click through the animated slide to show the definition.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Look at the Food Truck question on your activity guide. How did you round down?*\n\n**Discussion Goal:** Students share that you can cast the `double` price to an `int` to round down.\n\n**Display:** Click through the animated slide to show the code.",
        "duration": "10",
        "name": "Double Division"
      },
      "seeding_key": {
        "activity_section.key": "01b8a88c-bfb2-4cbe-a472-732d692e1661",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "a8b4e69d-5090-44cf-a832-453711c0021c",
      "position": 4,
      "properties": {
        "description": "From the activity, you saw that you could cast the `double` price to an `int` to round down. Casting an `int` to a `double` is also useful.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "a8b4e69d-5090-44cf-a832-453711c0021c",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "bf1f3bae-8b05-451a-8637-7ba36f2a29d8",
      "position": 5,
      "properties": {
        "description": "**Discuss:** Click through the animated slide to discuss the prompt.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> *In Unit 2, you explored evaluating `int`s and `double`s. When we divide two `int`s, we truncate (remove everything to the right of the decimal point). If one of the values is a `double`, then the resulting value is a `double`. With a partner, discuss: Given two `int`s, how can we use casting to get a `double` as the resulting value?*\n\n**Discussion Goal:** Students realize they can cast the numerator or denominator to a `double`. They may also come up with unique solutions.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students back to Level 1 on Code Studio. Given two `int`s, students try different ways to get the expression to evaluate to a `double`.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students are using the same level as the Casting Exploration Activity to test their code."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "bf1f3bae-8b05-451a-8637-7ba36f2a29d8",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "95c1187a-da90-4d01-9d5f-adba315905ed",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What is one way that you wrote your expression to evaluate to a `double` in Level 1?*\n\n**Discussion Goal:** Students share ways that they completed Level 1."
      },
      "seeding_key": {
        "activity_section.key": "95c1187a-da90-4d01-9d5f-adba315905ed",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "14e78fde-da2f-4407-898f-4aa48a7e405b",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Give students twelve minutes to complete the rest of the Casting Exploration activity then complete the Check for Understanding on Level 2. As students are working, use Catch and Release as appropriate to maintain engagement. You may choose to catch to:\n* Assist students in writing the code in Code Studio.\n* Clarify how casting works.\n* Support students with misconceptions involving mathematical concepts.",
        "duration": "15",
        "name": "More Casting Exploration"
      },
      "seeding_key": {
        "activity_section.key": "14e78fde-da2f-4407-898f-4aa48a7e405b",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "7f943ac6-f779-4bfd-9d30-4f17b1aa3a89",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Look at the “Double Division?” question. What was printed? Why?*\n\n**Discussion Goal:** Students share that 1.0 printed because you divide the two `int`s, truncating the answer to 1. Casting it to a `double` prints out 1.0.\n\n**Display:** Click through the animation to show the evaluation.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Casting and Rounding video."
      },
      "seeding_key": {
        "activity_section.key": "7f943ac6-f779-4bfd-9d30-4f17b1aa3a89",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "b06619de-a28c-4523-9bf0-f478071b1a52",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The owner wants to thank everyone for their patience during the coin shortage. She has decided to give customers free donuts! She wants to give each customer between 2-4 donuts, but she wants to be fair by choosing the number of donuts to give at random.",
        "duration": "7",
        "name": "Random",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b06619de-a28c-4523-9bf0-f478071b1a52",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "06b6421f-a42e-46da-b243-4691206c3d35",
      "position": 10,
      "properties": {
        "description": "**Display:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Show that 2-4 inclusive means that the owner can give two donuts, three donuts, or four donuts.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Show the random video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct Students to Level 3. Students print out a random number between 2-4 inclusive."
      },
      "seeding_key": {
        "activity_section.key": "06b6421f-a42e-46da-b243-4691206c3d35",
        "lesson_activity.key": "03c9bfee-5192-47c1-ae15-a865574011f8"
      }
    },
    {
      "key": "d1ccb2d3-f9c5-448c-851b-cb91cc0ce054",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to discuss the prompts.\n* *What did we learn today?*\n* *So what?*\n* *Now what?*\n\n**Discussion Goal:** Students discuss the importance of using casting and random. Students make predictions on different uses of casting and random in future lessons.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Three W's"
      },
      "seeding_key": {
        "activity_section.key": "d1ccb2d3-f9c5-448c-851b-cb91cc0ce054",
        "lesson_activity.key": "8298442d-a51a-4ad3-8a43-7519d0bf44e1"
      }
    },
    {
      "key": "b1c90733-7ffe-49d8-8350-affbd6182c8e",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "b1c90733-7ffe-49d8-8350-affbd6182c8e",
        "lesson_activity.key": "8298442d-a51a-4ad3-8a43-7519d0bf44e1"
      }
    },
    {
      "key": "69f41585-f4a7-4936-a9e4-d34877fec2d4",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What do you remember about a Boolean value?*\n\n**Discussion Goal:** Students share that Boolean values are only `true` or `false`.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Review the `isOnBucket()` method and its return type.",
        "name": "Boolean Value"
      },
      "seeding_key": {
        "activity_section.key": "69f41585-f4a7-4936-a9e4-d34877fec2d4",
        "lesson_activity.key": "14e568b4-2bdf-456a-9b0e-3de0d733a968"
      }
    },
    {
      "key": "2e1cfb89-b2dc-4ded-8b27-72ddf01a772d",
      "position": 2,
      "properties": {
        "description": "In Unit 1, you learned that sometimes we need to determine when a value is `true` or `false`. To review, we will look back at scenarios using the `Painter`’s information-gathering commands to determine if a Boolean value is `true` or `false`.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "2e1cfb89-b2dc-4ded-8b27-72ddf01a772d",
        "lesson_activity.key": "14e568b4-2bdf-456a-9b0e-3de0d733a968"
      }
    },
    {
      "key": "00f63539-bca2-4fb5-b72d-a61a8fc7dacd",
      "position": 3,
      "properties": {
        "description": "**Do This:** Click through the animated slides to review the scenarios. Have students determine if the output is `true` or `false` for each scenario.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> `canMove()`\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> `isOnBucket()`\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> `facingNorth()`"
      },
      "seeding_key": {
        "activity_section.key": "00f63539-bca2-4fb5-b72d-a61a8fc7dacd",
        "lesson_activity.key": "14e568b4-2bdf-456a-9b0e-3de0d733a968"
      }
    },
    {
      "key": "3d6e1a52-e281-4825-be01-6936c3db1dbe",
      "position": 4,
      "properties": {
        "description": "Today we will learn how to expand our use of `if` statements with relational operators.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "3d6e1a52-e281-4825-be01-6936c3db1dbe",
        "lesson_activity.key": "14e568b4-2bdf-456a-9b0e-3de0d733a968"
      }
    },
    {
      "key": "ea10a2b2-f0af-48f6-862a-7b6671d0ab4f",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Where have you used operators like less than, greater than, or equal?*\n\n**Discussion Goal:** Students recall using operators in math or previous computer science courses. ",
        "duration": "20",
        "name": "Relational Operators"
      },
      "seeding_key": {
        "activity_section.key": "ea10a2b2-f0af-48f6-862a-7b6671d0ab4f",
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364"
      }
    },
    {
      "key": "9dd3f3fb-0ca1-48d5-8064-888bb589ebbd",
      "position": 2,
      "properties": {
        "description": "Programming is all about testing and comparing values to make decisions about actions to take. Relational operators help us evaluate values to make these decisions.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "9dd3f3fb-0ca1-48d5-8064-888bb589ebbd",
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364"
      }
    },
    {
      "key": "10d37f45-3c18-4478-8d3b-3b1cd79da371",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to review the definition and chart of relational operators.\n* The `==` operator is equal to\n* The `!=` operator is not equal to\n* The `>` operator is greater than\n* The `<` operator is less than\n* The `>=` operator is greater than or equal to\n* The `<=` operator is less than or equal to",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "As you review the chart, emphasize the difference between the assignment operator (`=`) and the equals operator (`==`). Confusing the assignment operator with the equals operator is common. It is important when reading out loud to differentiate the single equal sign as an assignment and the double equals sign as a comparison."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "10d37f45-3c18-4478-8d3b-3b1cd79da371",
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364"
      }
    },
    {
      "key": "626b5605-61d1-44e1-8d6e-676131810ea8",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *In what order would you evaluate this expression?*\n\n**Discussion Goal:** Students recall the order of operations and how to evaluate the expression.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to introduce the order of operations that Java uses for arithmetic and relational operators when evaluating expressions.\n* The highest precedence is multiplication, division, and modulus.\n* The second precedence is addition and subtraction.\n* The third precedence is the relational operators.\n* The lowest precedence is the equality operators.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "As you click through the animated slide, review the mod `%` operator. Emphasize that relational operators have lower precedence than addition and subtraction operators and that relational operators have higher precedence than equality operators. "
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "626b5605-61d1-44e1-8d6e-676131810ea8",
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364"
      }
    },
    {
      "key": "ac934715-5d1b-447d-b3a0-586e0e79fa9c",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student an Exploring Operators handout.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Give students 10 minutes to complete the Exploring Operators handout. As students are working, use Catch and Release as appropriate to maintain engagement. You may choose to catch to:\n* Ask a student to demonstrate how to use the widget when they have started the plugged section of the activity.\n* Answer the fill-in-the-blank questions for the relational operators.\n* Answer the free-response questions for the numeric values.\n* Clarify how operator precedence is used in arithmetic expressions using relational operators.\n* Support students with misconceptions involving mathematical concepts.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Use a public timer to differentiate between independent work and discussion, addressing all student questions after a given amount of time has elapsed."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "ac934715-5d1b-447d-b3a0-586e0e79fa9c",
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364"
      }
    },
    {
      "key": "0a78513e-4c68-4b39-98a4-040c63e6f83b",
      "position": 6,
      "properties": {
        "description": "You have used `if` statements in previous lessons before. Let’s recall how you would use an `if` statement to modify the outcome of a program. ",
        "duration": "15",
        "name": "if Statements Using Relational Operators",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "0a78513e-4c68-4b39-98a4-040c63e6f83b",
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364"
      }
    },
    {
      "key": "6a20706c-8993-4c04-af42-f9ad8877d085",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *How might you modify the code to check if Frida has enough paint to produce the mural?*\n\n**Discussion Goal:** Students notice that for Frida to check if she has enough paint, the variables `currentPaint` and `muralAmount` with the relational operator `<=` needs to be inside the conditional statement.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to introduce using relational operators inside an `if` statement.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Levels 2 through 4 on Code Studio. Remind them that they should use an `if` statement and relational operator to solve the problems."
      },
      "seeding_key": {
        "activity_section.key": "6a20706c-8993-4c04-af42-f9ad8877d085",
        "lesson_activity.key": "80924630-ca01-446e-add2-f9284c1b7364"
      }
    },
    {
      "key": "81a0e107-5112-464d-8400-644096aa95e4",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student several sticky notes.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Prompt students to write down any bugs they encountered and the strategy they used to debug on a sticky note. Have students add their sticky notes to the Debugging Wall. If time permits, students should read the sticky notes placed by other students.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Debugging if Statements"
      },
      "seeding_key": {
        "activity_section.key": "81a0e107-5112-464d-8400-644096aa95e4",
        "lesson_activity.key": "852cdb1b-b7b1-4271-8014-a352d3077993"
      }
    },
    {
      "key": "6fb5d502-07db-44df-a4a1-ca8e010bb4ed",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "6fb5d502-07db-44df-a4a1-ca8e010bb4ed",
        "lesson_activity.key": "852cdb1b-b7b1-4271-8014-a352d3077993"
      }
    },
    {
      "key": "f1d76d18-f4b9-4fac-af61-45af7614b81d",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student one Quiz, Quiz, Trade card. Make sure students keep the definition side hidden.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain the instructions for Quiz, Quiz, Trade. Students should find a partner, complete their Quiz, Quiz, Trade, and then raise their hand to find a new partner. They will repeat this process for 5 minutes.",
        "name": "Vocabulary Review: Quiz, Quiz, Trade"
      },
      "seeding_key": {
        "activity_section.key": "f1d76d18-f4b9-4fac-af61-45af7614b81d",
        "lesson_activity.key": "3b80755a-5f38-4386-860c-6871eb0538d7"
      }
    },
    {
      "key": "048ebad9-844d-4423-97e4-b7391b6f5a05",
      "position": 2,
      "properties": {
        "description": "You have learned a lot of new words and concepts that will be useful in today’s lesson. Today you will apply them to expand your Pop the Balloon game.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "048ebad9-844d-4423-97e4-b7391b6f5a05",
        "lesson_activity.key": "3b80755a-5f38-4386-860c-6871eb0538d7"
      }
    },
    {
      "key": "cdbdb073-955e-451d-9ea7-3276de5860d9",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Today we will build the dice rolling feature of our Pop the Balloon game. \n\nThe game uses two six-sided dice, which we will refer to as the left die and right die. To roll the dice in the game, the user will click the roll button to generate two numbers between 1 and 6. After each roll, images of the dice will be updated on the game board.\n\nThere is a lot to do today so let’s break this into smaller tasks.",
        "duration": "2",
        "name": "Dice Rolling Feature Overview",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "cdbdb073-955e-451d-9ea7-3276de5860d9",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "276af91c-468e-4889-8156-f09175e2252a",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Walk students through the checklist of subtasks needed to create the dice rolling feature."
      },
      "seeding_key": {
        "activity_section.key": "276af91c-468e-4889-8156-f09175e2252a",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "cb9b0b97-4fda-4d9f-8337-7fd6bbcd5a3c",
      "position": 3,
      "properties": {
        "description": "In previous lessons, you learned how to generate a random number using `Math.random()`.\n\nOne of the most common use cases for generating random numbers are games of chance like rolling dice, shuffling playing cards, and flipping a coin. Games often use random numbers to generate different outcomes.",
        "duration": "13",
        "name": "Task 1: Implementing rollDice()",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "cb9b0b97-4fda-4d9f-8337-7fd6bbcd5a3c",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "21b7aafc-5fd9-4cc3-ad8d-1405ddf91c7e",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *When the roll button is clicked, two random numbers between 1 and 6 are generated to represent the numbers showing on each die. How might this be implemented using `Math.random()`?*\n\n**Discussion Goal:** For each die, generate a random number between 1 to 6 to represent the value of the rolled die. To generate a number from 1 to 6, use `(int)(Math.random() * 6) + 1 `.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Levels 1 and 2 on Code Studio. Students independently complete the Check for Understanding on Level 1 then complete Level 2 in pairs, where they create a dice rolling simulation."
      },
      "seeding_key": {
        "activity_section.key": "21b7aafc-5fd9-4cc3-ad8d-1405ddf91c7e",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "9c46bab9-8981-4e62-8c6e-4ce4fbd1a10a",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain that the numbers returned by `Math.random()` have an equal probability of being generated. \n\n**Display:** Show the Probability with Math.random() video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Which of the following would be true about 65% of the time?*\n\n**Discussion Goal:** The answer is B.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "To demonstrate this to the class, go to Level 3 on Code Studio and run `Math.random()` 10 times. Keep track of how many times each of the three options were true. Answer B should have the highest number of occurrences out of the 10 trials."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "9c46bab9-8981-4e62-8c6e-4ce4fbd1a10a",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "ffc9e30e-0091-4e8a-b5c8-b5febe21774b",
      "position": 6,
      "properties": {
        "description": "Not all outcomes in a game need to have equal probability. Some outcomes are more likely to occur than others.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ffc9e30e-0091-4e8a-b5c8-b5febe21774b",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "49b27bf2-49e4-4882-8586-956e187bf2a0",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Show example of a weighted die that rolls a five or higher 65% of the time. Points to highlight:\n* To allow our code to make decisions, we can use an `if-else` statement.\n* If `Math.random()` generates a number between above 0.35, the code block under the `if` statement is executed. This condition is true 65% of the time. Therefore, `leftRoll` will be assigned to be five or six 65% of the time.\n* If `Math.random()` generates a number that is less than or equal to 0.35, the code block under the `else` statement is executed. This condition is true 35% of the time. Therefore, `leftRoll` will be assigned one, two, three or four for the remaining 35% of the time.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The conditional statement expression `Math.random() > 0.35` could also be written as  `Math.random() <= 0.65`. "
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "49b27bf2-49e4-4882-8586-956e187bf2a0",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "bdc33910-769c-4186-8339-131f1d89ecb8",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Levels 4 on Code Studio, where they create a weighted dice using conditional statements."
      },
      "seeding_key": {
        "activity_section.key": "bdc33910-769c-4186-8339-131f1d89ecb8",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "66d4803f-edcf-4156-a2da-b5db2682570d",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Read the next two tasks from the checklist of subtasks. Use the image to show the result of completing the tasks.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Levels 5 and 6 on Code Studio. In pairs, students complete Level 5 and 6 to add roll button functionality and dice images to the game board.",
        "duration": "8",
        "name": "Task 2: Adding Images to the Game Board"
      },
      "seeding_key": {
        "activity_section.key": "66d4803f-edcf-4156-a2da-b5db2682570d",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "e13e628f-ed24-4cac-b521-6c5b3dfb5ead",
      "position": 10,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Read the last task from the checklist of subtasks. Use the image to show the result of completing the task.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Currently, each side of a die is represented by an individual `Die` object stored in a variable. How could we use an array to represent a `Die`?*\n\n**Discussion Goal:** Create an array of `Die` where each `Die` object element can be accessed at its corresponding index (offset by 1).\n\n**Do This:** Click through the animated slide to show an array containing each side of a die.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Levels 7 on Code Studio. In pairs, students complete Level 7 to use an array to represent dice and expand the `rollDice()` method to update the dice images on the game board.",
        "duration": "12",
        "name": "Task 3: Update Dice Images"
      },
      "seeding_key": {
        "activity_section.key": "e13e628f-ed24-4cac-b521-6c5b3dfb5ead",
        "lesson_activity.key": "72523b0a-3d3a-4206-a14d-6284063f83dd"
      }
    },
    {
      "key": "e546d968-d8d6-4ef2-9852-0f84ad53d4bf",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Great job! You have completed all of the subtasks for the dice rolling feature. As we continue to build the Pop the Balloon game, you will continue to modify your code to add more functionality. ",
        "name": "Closing the Loop",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "e546d968-d8d6-4ef2-9852-0f84ad53d4bf",
        "lesson_activity.key": "0036794f-9f09-4fe4-921e-36a9fdfdeada"
      }
    },
    {
      "key": "436e2f1e-c429-40f5-9225-9080275d0847",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Guide students through a Closing the Loop discussion.\n* *What are the key takeaways of this lesson?*\n* *Which parts of this lesson built off of previous lesson content? What is completely new?*\n* *What words would you use to describe our learning as a class today?*\n\n**Discussion Goal:** This discussion should help reinforce the important beats of the lesson, allowing students to check their understanding and support one another in cementing their understanding of the day’s objectives."
      },
      "seeding_key": {
        "activity_section.key": "436e2f1e-c429-40f5-9225-9080275d0847",
        "lesson_activity.key": "0036794f-9f09-4fe4-921e-36a9fdfdeada"
      }
    },
    {
      "key": "d93c1de9-b3e2-470d-84ff-643f86f89fb4",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "d93c1de9-b3e2-470d-84ff-643f86f89fb4",
        "lesson_activity.key": "0036794f-9f09-4fe4-921e-36a9fdfdeada"
      }
    },
    {
      "key": "6c2c923f-0b1a-4312-994b-54f3e714964f",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the two code segments and prompts. Direct students to silently predict the output of the code.\n\n**Do This:**\n* Have students share their predictions with a partner, then ask for volunteers to share their predictions with the class.\n* Display Lesson 6 Level 1 for the class and run the two code segments. To run Code Segment B, comment lines 5 to 11 and uncomment lines 14 - 20.",
        "name": "Primitive vs Reference Type",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Have students run the code with you to compare their predictions to the actual outcomes."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "6c2c923f-0b1a-4312-994b-54f3e714964f",
        "lesson_activity.key": "6f4a197b-d154-44b2-b524-6e1f66a0de81"
      }
    },
    {
      "key": "edf521a0-8460-48f0-ac8f-61e02667c9d0",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Why did the two code segments have different results?*\n\n**Discussion Goal:** Students make connections to prior knowledge to identify that integers are primitive values and `String`s are objects."
      },
      "seeding_key": {
        "activity_section.key": "edf521a0-8460-48f0-ac8f-61e02667c9d0",
        "lesson_activity.key": "6f4a197b-d154-44b2-b524-6e1f66a0de81"
      }
    },
    {
      "key": "b56b18ba-2b81-4b01-8dcf-6a29e0f40427",
      "position": 3,
      "properties": {
        "description": "Although these two code segments are very similar, there is a key difference between the two. Integers are primitive values, but `String`s are objects.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b56b18ba-2b81-4b01-8dcf-6a29e0f40427",
        "lesson_activity.key": "6f4a197b-d154-44b2-b524-6e1f66a0de81"
      }
    },
    {
      "key": "758fe8ca-7f1e-4d05-a503-5c56b226487a",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to summarize the difference between primitive values and objects."
      },
      "seeding_key": {
        "activity_section.key": "758fe8ca-7f1e-4d05-a503-5c56b226487a",
        "lesson_activity.key": "6f4a197b-d154-44b2-b524-6e1f66a0de81"
      }
    },
    {
      "key": "4cf1a9ae-648d-4065-b2a7-232c22c3011b",
      "position": 5,
      "properties": {
        "description": "Today, our goal is to explore the relationship between reference variables and objects and how Java references and accesses data in a computer. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "4cf1a9ae-648d-4065-b2a7-232c22c3011b",
        "lesson_activity.key": "6f4a197b-d154-44b2-b524-6e1f66a0de81"
      }
    },
    {
      "key": "5b55452c-9e1e-449b-81cd-746f0231178b",
      "position": 1,
      "properties": {
        "description": "**Group:** Place students in pairs. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each pair a copy of the Comparing Objects activity guide, a set of Object References Manipulatives and several sticky notes.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:**\n* Have students set up their manipulatives to match the diagram on the slide. Students specify the flavor, quantity, and price on the objects, write names for the reference variables on sticky notes and use paper clip chains to connect the reference variable to the object.\n* Click through the animated slide to describe the problem.\n* Give students time to use the manipulatives to develop a solution.\n* Ask a pair to demonstrate the swap.",
        "duration": "14",
        "name": "Aliasing",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students completed this same manipulative swap exercise in Unit 3, Lesson 9. This activity is a quick reactivation of prior knowledge to focus on the mental model represented by the manipulatives and visualizing references."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "5b55452c-9e1e-449b-81cd-746f0231178b",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "0f4819cf-ea14-412a-8602-37714026267d",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *When we perform a swap, what does the temp reference variable store?*\n\n**Discussion Goal:** Students continue to differentiate between reference and primitive variables. Students note that a reference variable only holds that object’s location in memory, making it possible to have two variables that reference the same object.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to discuss the functionality of a reference variable.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Describe the relationship between reference variables that are aliases.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to use the manipulatives to complete the first page of the Comparing Objects activity guide.  As they work, they should test their predictions by running the code in Level 2 on Code Studio."
      },
      "seeding_key": {
        "activity_section.key": "0f4819cf-ea14-412a-8602-37714026267d",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "aca93871-4320-41a4-8022-44102e8df1fc",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What if we want to find whether some or all attributes of two objects contain the same value?  How might we do this?*\n\n**Discussion Goal:** Students consider what it means for an object to be equal and hypothesize about comparing properties of an object. They may suggest creating a method that compares these properties. Students consider how they would get the values of the instance variables using the accessor methods.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 3 on Code Studio to look at the documentation for the `String` class. They should use the questions to guide their exploration. ",
        "duration": "13",
        "name": "Object Equality"
      },
      "seeding_key": {
        "activity_section.key": "aca93871-4320-41a4-8022-44102e8df1fc",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "b0ed762c-db35-463d-9db0-19f24fe5d741",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to discuss the `equals()` method in the `String` class.\n* *What does this method compare?*\n   * The `equals()` method compares the characters (letters) of the `String`s. It looks at the contents of the object to see if they are the same.\n* *How can this method be used or called?*\n   * This method is called on one `String`, and the second `String` to compare to is passed as an argument.\n* *Where does it come from within the class hierarchy?*\n   * Just like the `toString()` method, `equals()` is inherited from the `Object` class."
      },
      "seeding_key": {
        "activity_section.key": "b0ed762c-db35-463d-9db0-19f24fe5d741",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "9e329c90-ec7e-44e6-ad43-46b08738f3e4",
      "position": 5,
      "properties": {
        "description": "All classes inherit from the `Object` class, which means all classes have an `equals()` method! The `Object` `equals()` method only returns `true` if two reference variables are aliases. To use it to compare specific attributes, we need to override the method.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "9e329c90-ec7e-44e6-ad43-46b08738f3e4",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "b33fa3de-25ce-4cf4-b5ed-4bb633351ab4",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Equals and Aliasing video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to use the second page of the Comparing Objects activity guide to write pseudocode for an `equals()` method for the `Cake` class. Students then navigate to Level 4 on Code Studio to write and test their method."
      },
      "seeding_key": {
        "activity_section.key": "b33fa3de-25ce-4cf4-b5ed-4bb633351ab4",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "ceeef690-3f78-4e78-8798-9b10b9ef321c",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the `equals()` method.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students struggled with translating their algorithm to code, walk through this code segment with them and highlight:\n* The use of a `boolean` value\n* The use of accessor methods and `this`\n* The condition in the `if` statement to determine whether the two objects are the same\n\nAn alternative solution returns both inside and outside the `if` statement without using a `boolean` variable. This approach demonstrates a more familiar solution since students have not yet learned about returning inside an `if` statement or loop."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "ceeef690-3f78-4e78-8798-9b10b9ef321c",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "fdc204af-2a2e-4eeb-b9b6-b9ed9222be47",
      "position": 8,
      "properties": {
        "description": "Now that we’ve spent some time working with object equality, we will apply this concept to our block party game. Your task is to figure out whether two rolled dice display the same number. First, we’re going to get to know the `Die` class.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "fdc204af-2a2e-4eeb-b9b6-b9ed9222be47",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "ad03504b-f509-4ba2-8f78-93c05e8e5bfb",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 5 on Code Studio to read through the methods in the `Die` class.",
        "duration": "8",
        "name": "Adding equals() to Pop the Balloons",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students should focus on the constructor to identify the instance variables they should compare and the accessor method(s) they want to use when comparing."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "ad03504b-f509-4ba2-8f78-93c05e8e5bfb",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "198631a0-7fcf-47d4-904c-f845bb2dc305",
      "position": 10,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Which methods will be important when writing an `equals()` method to compare the dice values?*\n\n**Discussion Goal:** Students consider what to compare and how to access the information for both objects.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 6 on Code Studio. Students write an `equals()` method in the `Die` class of the Pop the Balloons game."
      },
      "seeding_key": {
        "activity_section.key": "198631a0-7fcf-47d4-904c-f845bb2dc305",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "29437591-fefc-4338-90c2-fce44cc7e30a",
      "position": 11,
      "properties": {
        "description": "You’ve now spent some time comparing objects and learned the difference between using `==` and the `equals()` method. Well done! Let’s take a moment to recap the objectives of today’s lessons through a guided pair discussion.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "29437591-fefc-4338-90c2-fce44cc7e30a",
        "lesson_activity.key": "ae3f2b85-ee8d-4b60-8dbb-615fe5068ade"
      }
    },
    {
      "key": "3f7ca17c-3633-4b1d-854e-0c9de3b2c670",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student an index card or piece of scrap paper.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students choose one of the question stems. Students write the question stem on an index card or scrap paper and fill in the blank to complete the question. Have students then turn to the person next to them and take turns asking and answering their questions.\n \n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Question Stems"
      },
      "seeding_key": {
        "activity_section.key": "3f7ca17c-3633-4b1d-854e-0c9de3b2c670",
        "lesson_activity.key": "8dc839cd-4a61-4ff4-8fa9-3e93cae012da"
      }
    },
    {
      "key": "4a63970b-01d2-48f8-afd3-b31abbe2f89f",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "4a63970b-01d2-48f8-afd3-b31abbe2f89f",
        "lesson_activity.key": "8dc839cd-4a61-4ff4-8fa9-3e93cae012da"
      }
    },
    {
      "key": "4e854116-a2de-402b-a31f-f9b309e5cd4c",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Click through the animated slide to review the problem from Unit 1 Lesson 7, which used `if/else` statements in its solution.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What do you remember about how you solved this problem?*\n\n**Discussion Goal:** Students explain the solution for solving the problem, including the use of `if/else` statements to achieve the desired outcome.",
        "name": "Problem-Solving Brainstorm"
      },
      "seeding_key": {
        "activity_section.key": "4e854116-a2de-402b-a31f-f9b309e5cd4c",
        "lesson_activity.key": "97a2b96d-9310-4eab-b7fb-0f3ae73bbf55"
      }
    },
    {
      "key": "21b6caad-df37-42bb-bc14-a4106f25e471",
      "position": 2,
      "properties": {
        "description": "We are familiar with how to use `if/else` statements to solve problems in The Neighborhood. Today, we will practice using `if/else` statements in new ways in The Neighborhood. We will also expand the functionality of our Pop the Balloons game to check if the player's move is valid.\n\nFirst, let's review how `if/else` statements work.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "21b6caad-df37-42bb-bc14-a4106f25e471",
        "lesson_activity.key": "97a2b96d-9310-4eab-b7fb-0f3ae73bbf55"
      }
    },
    {
      "key": "cecc8fde-2cb7-4cd7-91e5-99a44469ddb0",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the if/else Statements video.",
        "duration": "5",
        "name": "if/else Statements",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "This video is the same one from Unit 1 Lesson 7 to review the structure and functionality of an `if/else` statement."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "cecc8fde-2cb7-4cd7-91e5-99a44469ddb0",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "9bdac9c5-f2b2-491f-8974-f04df2ab5ebe",
      "position": 2,
      "properties": {
        "description": "**Do This:** Review the difference between `if` statements and `if/else` statements and how to write `if/else` statements.\n* Explain the purpose and flow of an `if` statement.\n* Explain the purpose and flow of an `if/else` statement.\n* Define two-way selection.\n* Review the syntax for writing an `if/else` statement."
      },
      "seeding_key": {
        "activity_section.key": "9bdac9c5-f2b2-491f-8974-f04df2ab5ebe",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "8b9617d8-9423-4030-a5af-65d27ae81f19",
      "position": 3,
      "properties": {
        "description": "We used `if/else` statements before to decide whether or not to move the `Painter` or to paint. We can also use `if/else` statements to choose paint colors from an array of paint colors based on a condition.\n\nWe used `if` statements while traversing arrays in Unit 3 to find elements that met certain criteria. We're going to use a similar approach in The Neighborhood with `if/else` statements.",
        "duration": "10",
        "name": "Using if/else in The Neighborhood",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "8b9617d8-9423-4030-a5af-65d27ae81f19",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "5f083cd0-b7c8-4a21-a2f1-5981752cae55",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio. Students use an `if/else` statement to access individual elements from an array of paint colors to solve the problem."
      },
      "seeding_key": {
        "activity_section.key": "5f083cd0-b7c8-4a21-a2f1-5981752cae55",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "888b1f71-8ce0-43cb-94a2-8bac060a7021",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What if we wanted to randomly choose paint colors from the array?*\n\n**Discussion Goal:** Students suggest using `Math.random()` and casting to generate a random number within the range of the index values of the array.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students initially only suggest using `Math.random()`, ask additional probing questions to guide students in realizing the need for obtaining a value within the range of index values.\n* *Remember that `Math.random()` generates a `double` value between 0.0 up to but not including 1.0. Index values are integers and not `double`s. What do we need to add to get an integer result from `Math.random()`?*\n* *Index values range from 0 up to the length of the array minus 1. What do we need to add to get a random value in this range?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "888b1f71-8ce0-43cb-94a2-8bac060a7021",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "4617abe5-00b0-4cd8-b815-6a72c7ff5eaf",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to show the solution for generating a random index value and using it to access an element in an array.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 2 on Code Studio. Students use `Math.random()` and `if/else` to access random elements from the array of paint colors to solve the problem. Have students continue to complete Level 3."
      },
      "seeding_key": {
        "activity_section.key": "4617abe5-00b0-4cd8-b815-6a72c7ff5eaf",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "14c040fb-774a-4c58-83d3-0bb2dfc9e6c6",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to discuss the effects of using separate `if` statements instead of an `if/else` statement.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Trace through each code segment with the class before showing the output."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "14c040fb-774a-4c58-83d3-0bb2dfc9e6c6",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "8414852d-9160-4803-8d8f-3e42690a680f",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Why should we use `if/else` statements instead of writing separate `if` statements?*\n\nDiscussion Goal: Students point out that it makes the code cleaner and easier to debug. Students also note that since both `if` statements are evaluated separately, they could both execute depending on the outcome of the first `if` statement, which will change the end result of the program."
      },
      "seeding_key": {
        "activity_section.key": "8414852d-9160-4803-8d8f-3e42690a680f",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "fbfe12e5-a883-42ea-bcb4-dffa719a89d0",
      "position": 9,
      "properties": {
        "description": "The next features of our Pop the Balloons game that we are going to develop is the `isValidMove()` functionality.\n\nWith the `isValidMove()` method, we can check if the balloons that are clicked add up to the dice roll. This method takes the value of the balloon to check if it is less than the dice roll.",
        "duration": "10",
        "name": "Expanding Pop the Balloons",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "fbfe12e5-a883-42ea-bcb4-dffa719a89d0",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "b410c447-233b-4f3e-ab9a-ee855e0a47b0",
      "position": 10,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to explain the purpose of the `isValidMove()` method. Direct students to work with a partner to write pseudocode on a piece of paper for `isValidMove()`.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Review the steps needed to implement the `isValidMove()` method.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If you notice students struggling to break the problem down into pseudocode, write the pseudocode for each step as you review them. Allow students to ask clarifying questions before transitioning to Code Studio."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "b410c447-233b-4f3e-ab9a-ee855e0a47b0",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "8236e0fb-84e5-4c64-97b1-0795f71b760e",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 4 on Code Studio. Students implement the `isValidMove()` method in the Pop the Balloons game."
      },
      "seeding_key": {
        "activity_section.key": "8236e0fb-84e5-4c64-97b1-0795f71b760e",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "32157506-2f25-4dcc-94ee-5d052d7a97ad",
      "position": 12,
      "properties": {
        "description": "Let's take a moment to provide feedback to each other through a code review. Don't forget to follow ART – ask questions, raise flags about confusing code, and tag awesome code! ",
        "duration": "10",
        "name": "Code Review",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "32157506-2f25-4dcc-94ee-5d052d7a97ad",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "1d8b5a4f-9ac9-4013-9df5-75c5277246d9",
      "position": 13,
      "properties": {
        "description": "**Do This:** Pair students within a review group to review each other's game in Code Studio. Students request, receive, and review feedback on their `isValidMove()` method."
      },
      "seeding_key": {
        "activity_section.key": "1d8b5a4f-9ac9-4013-9df5-75c5277246d9",
        "lesson_activity.key": "1187b286-d15a-4172-be9c-a25ed221ba29"
      }
    },
    {
      "key": "6672106f-9e13-4bf1-8de1-75448b6e87ec",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student two sticky notes.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students write one thing they feel confident about and one thing they are still unsure about with `if/else` statements.",
        "name": "Gots and Needs",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Collect and review student responses to identify students that may need additional support in upcoming lessons."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "6672106f-9e13-4bf1-8de1-75448b6e87ec",
        "lesson_activity.key": "b6d4dc14-2e1f-4c31-8e8f-91f1dbe21d5e"
      }
    },
    {
      "key": "b8d5aa64-0379-419b-8ae2-c433568f778f",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "b8d5aa64-0379-419b-8ae2-c433568f778f",
        "lesson_activity.key": "b6d4dc14-2e1f-4c31-8e8f-91f1dbe21d5e"
      }
    },
    {
      "key": "b7fdc7f4-0724-4c2b-971e-c09a437a0595",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "b7fdc7f4-0724-4c2b-971e-c09a437a0595",
        "lesson_activity.key": "b6d4dc14-2e1f-4c31-8e8f-91f1dbe21d5e"
      }
    },
    {
      "key": "1ebfb199-1715-4b72-bcb5-3bccfb5386b4",
      "position": 1,
      "properties": {
        "description": "When we want our code to make decisions based on a condition, we use selection statements such as an `if` statement or `if/else` statement.\n\n`if` statements are useful for getting something to happen when a condition is `true`. `if/else` statements are useful when we want to execute a task when the condition is `true` or a different task if the condition is `false`. \n\nLet’s review how you can use an `if/else` statement to solve a problem.",
        "name": "Conditional Statements",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1ebfb199-1715-4b72-bcb5-3bccfb5386b4",
        "lesson_activity.key": "0c295ce5-6521-4474-af4e-d5e0cb1c6e54"
      }
    },
    {
      "key": "c83f2739-2dde-4e11-8b5b-0abfa4c61c0f",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *The `Painter` wants to clean up The Neighborhood. She needs to see if there is unwanted paint on the road. If there is, she will remove the paint. How could this be achieved using an `if/else` statement?*\n\n**Discussion Goal:** Students identify that if the `Painter` is on the paint, then she will scrape it, `else` move forward."
      },
      "seeding_key": {
        "activity_section.key": "c83f2739-2dde-4e11-8b5b-0abfa4c61c0f",
        "lesson_activity.key": "0c295ce5-6521-4474-af4e-d5e0cb1c6e54"
      }
    },
    {
      "key": "7a254566-1075-4f8c-9b8c-0778790afc78",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Let’s take a moment to read this problem. If you want to go to the park, the weather needs to be higher than 85 degrees. If the weather is 80 degrees, you can play soccer with friends. If the weather is lower than 80 degrees, you can stay at home. Think to yourself about how you would solve this problem with what you know about conditional statements.",
        "duration": "15",
        "name": "Multi-Selection Statements",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "7a254566-1075-4f8c-9b8c-0778790afc78",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "4b1a4035-7504-4788-aa4b-bbfb924530a3",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Define multi-selection statement.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to demonstrate the execution flow of `if/else-if/else`.\n* The first condition is `true` if the number is greater than 0. If `true`, the body of that `if` statement executes.\n* If the first condition is `false`, the second condition is evaluated. The second condition is `true` `else-if` the number is equal to 0. Then the body of the `else-if` statement is executed.\n* When all conditions are `false`, the `else` statement executes.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to work with a partner to read through the problem again. Students will write code on a piece of paper.\n\n**Discuss:** *How would you use a multi-selection statement to structure this problem in code?*\n\n**Discussion Goal:** Students work with a partner and write a code segment that would include an `if/else-if/else` statement to reflect the decisions based on the weather.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the solution to the discussion prompt. As you go through the solution, prompt students to participate in the `System.out.print()` Call and Response by saying the words and clapping as indicated on the slide. ",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Perform the Call and Response for the students by saying the words in caps and clapping as indicated: **SYSTEM** (clap while saying **DOT**) **OUT** (clap while saying **DOT**) **PRINT** (clap while saying **DOT**). Have students repeat it as a class."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "4b1a4035-7504-4788-aa4b-bbfb924530a3",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "9366514f-cb2a-45eb-bca7-2209cfffb506",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Levels 1 and 2 on Code Studio. Students will revisit Level 1 from Lesson 7 to include multiple conditions to solve the problem."
      },
      "seeding_key": {
        "activity_section.key": "9366514f-cb2a-45eb-bca7-2209cfffb506",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "5608bff4-9ec7-4610-bd26-06ad5e27912a",
      "position": 4,
      "properties": {
        "description": "The next feature of our Pop the Balloons game that we need to develop is the `updateBalloons()` functionality. Let's walk through how this method needs to function so we can implement it. You will use multi-selection statements inside your method to update the display if a balloon is popped. ",
        "duration": "20",
        "name": "Expanding Pop the Balloons",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "5608bff4-9ec7-4610-bd26-06ad5e27912a",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "1000af40-89de-40e4-b9f8-0f4c9b273957",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Share the to-do list to write the `updateBalloons()` method for the balloons.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Currently, each balloon is represented by an individual `Balloon` object stored in a variable. How could we use multi-selection statements to update the display of the balloon if it’s been popped?*\n\n**Discussion Goal:** Students suggest creating an `if/else-if/else` statement to test if each balloon number equals the balloon value.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Review the steps needed to implement the `updateBalloons()` method.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Suggest that students write on a piece of paper their code segment to test the multiple conditions for each prompt. "
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1000af40-89de-40e4-b9f8-0f4c9b273957",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "1a571f2d-2cae-45ca-b87c-a36271dfc738",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Level 3 on Code Studio. Remind students to use multi-selection statements to solve the problem.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Circulate as students work through this level. Display the steps to implement the `updateBalloons()` method to assist students who need a visual while writing the method. If students finish early, encourage them to test their code with multiple inputs to see if the balloon pops for all values. \n\nSince students will be completing a code review for this level, remind students to commit their code often."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1a571f2d-2cae-45ca-b87c-a36271dfc738",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "2ee17574-56e1-4c2e-b5c2-5acc18ab245f",
      "position": 7,
      "properties": {
        "description": "This is a good opportunity to do a code review to make improvements. Let's take a moment to provide feedback to each other. Don't forget to follow ART – ask questions, raise flags about confusing code, and tag awesome code!",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "2ee17574-56e1-4c2e-b5c2-5acc18ab245f",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "e008dc24-6045-4b56-98f9-4c05bc7d58c5",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students remain in the same pairs to review each other's `updateBallons()` method. Students request, receive, and review feedback on Level 3. While reviewing, students consider the following questions:\n* Am I able to understand the code easily?\n* Can you think of any inputs that could break the code?\n* How many test cases are needed to test all branches of the code?\n* Is the same code duplicated across multiple files?"
      },
      "seeding_key": {
        "activity_section.key": "e008dc24-6045-4b56-98f9-4c05bc7d58c5",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "aa27829e-7310-4411-85d3-d0fb9d91e2c0",
      "position": 9,
      "properties": {
        "description": "Great job! You have completed your task for the Pop the Balloons Game. As we continue to build the game, you will continue to modify your code to add more functionality. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "aa27829e-7310-4411-85d3-d0fb9d91e2c0",
        "lesson_activity.key": "77756c35-c621-411c-8272-6149cfd47dfe"
      }
    },
    {
      "key": "1e80d2a7-32ac-4d25-a7ab-061e4a523f37",
      "position": 1,
      "properties": {
        "description": "The methods you wrote today are methods that you will be able to use in your upcoming project. Today we used `if/else-if/else` statements to test multiple conditions. When you update the display of the balloon, you see the change based on the condition being `true`.",
        "name": "Glows, Grows, Want-to-Knows",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1e80d2a7-32ac-4d25-a7ab-061e4a523f37",
        "lesson_activity.key": "b54cf23f-bdb9-4a6d-a5bd-485a6c381c50"
      }
    },
    {
      "key": "a67c71c6-7a88-434c-bd0e-1b9be1ee5a3c",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Conditional Statements video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Students reflect on the following Glows, Grows, Want-to-Knows prompts:\n* Glow: *What is awesome about writing your code?*\n* Grow: *What is one action you can take to improve your code?*\n* Want-to-Know: *What is one question you have about an algorithm you worked on today?*\n\n**Discussion Goal:** Students share successes they experienced in writing their methods in today's activities and ideas for improvements they can make to their code. Students ask questions about the methods they wrote today and may even share wonders about the effects of potential modifications to the code they wrote.\n\n**Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "a67c71c6-7a88-434c-bd0e-1b9be1ee5a3c",
        "lesson_activity.key": "b54cf23f-bdb9-4a6d-a5bd-485a6c381c50"
      }
    },
    {
      "key": "28421f73-4ca3-498e-af88-ae4267d11050",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "28421f73-4ca3-498e-af88-ae4267d11050",
        "lesson_activity.key": "b54cf23f-bdb9-4a6d-a5bd-485a6c381c50"
      }
    },
    {
      "key": "29629602-2fa4-4804-8596-b0c33ef9849b",
      "position": 1,
      "properties": {
        "description": "Today you’ll be playing Guess This Tech Company. Guess This Tech Company is a two-player game in which each player chooses a mystery tech logo. Each player then uses yes or no questions to guess the other player’s tech company.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "29629602-2fa4-4804-8596-b0c33ef9849b",
        "lesson_activity.key": "80574f7f-bf6f-4846-899c-cb0cb49347a1"
      }
    },
    {
      "key": "fb21ada6-8053-4347-ab2d-2eb4e9b616a2",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Read the instructions for the Guess This Tech Company game to the class. Have students write down three yes or no questions on a sheet of paper. "
      },
      "seeding_key": {
        "activity_section.key": "fb21ada6-8053-4347-ab2d-2eb4e9b616a2",
        "lesson_activity.key": "80574f7f-bf6f-4846-899c-cb0cb49347a1"
      }
    },
    {
      "key": "42552764-f293-4527-b94e-86e4bcf289dc",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Play a round of Guess This Tech Company with a partner. Use your three questions and tech companies displayed on the slide to assist you with guessing. Each partner should take a turn as the guesser. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "42552764-f293-4527-b94e-86e4bcf289dc",
        "lesson_activity.key": "80574f7f-bf6f-4846-899c-cb0cb49347a1"
      }
    },
    {
      "key": "eea59cea-be8e-48a2-b9d3-7f6333cc6e49",
      "position": 4,
      "properties": {
        "description": "**Display:** Show the Guess This Tech Company logos while students play the game.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Were you able to guess each other’s tech companies? Which questions were helpful? If you were to build a Java version of our Guess This Tech Company game, what structures would you use?*\n\n**Discussion Goal:** Students share if they could guess the tech company and examples of helpful questions. Students share that conditional statements allow them to simplify code through testing multiple conditions to get to the correct answer. ",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Prompt students to share different opinions about building a Guess This Tech Company program in Java. Ask students to identify some challenges using conditional statements. Some might include: \n* Increasing the number of tech companies might result in an excessive number of `if/else` statements\n* Large amounts of code may be difficult to debug"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "eea59cea-be8e-48a2-b9d3-7f6333cc6e49",
        "lesson_activity.key": "80574f7f-bf6f-4846-899c-cb0cb49347a1"
      }
    },
    {
      "key": "bd9ba870-3532-48be-894c-028c63ff2195",
      "position": 1,
      "properties": {
        "description": "In Unit 3, you were introduced to the term nested. Let’s look at how we can apply the concept of nested to if statements.  ",
        "duration": "10",
        "name": "Nested if",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "bd9ba870-3532-48be-894c-028c63ff2195",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "edc5292d-25cc-4cc2-b08e-4f708dc8dde5",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Show the definition and an example of a nested `if` statement. Click through the animated slide to discuss the execution of a nested `if` statement. Pause at each step to discuss what is happening. Highlight the following:\n* Evaluating the first `if` statement\n* Evaluating the nested `if` statement condition\n* Executing the body of the nested `if` statement if the condition of the nested `if` statement is `true`\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What would be the reason to include an `if` statement in the body of another `if` statement?*\n\n**Discussion Goal:** Students share using nested `if` statements can simplify the code to allow the program to make a decision based on whether the condition is `true` or `false`.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students don’t get to this on their own, ask the following prompting questions:\n* *What is meant by nested?*\n* *How is this nested statement similar to a nested loop?*\n* *How could using a nested `if` statement simplify the use of an `if/else-if/else` statement?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "edc5292d-25cc-4cc2-b08e-4f708dc8dde5",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "1098d518-d5c6-46a9-9175-6e8e00a01662",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Before you can hang out with your friends, you need to answer the following questions: Did I finish my homework? Did I do all my chores? If the answers are true to both questions, then you can hang out with your friends. If not, then you need to complete your homework first, then finish all your chores.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1098d518-d5c6-46a9-9175-6e8e00a01662",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "f5f4845c-fa32-4a73-aaad-28cca399b7bb",
      "position": 4,
      "properties": {
        "description": "**Discuss:** *How would you structure this scenario in Java?*\n\n**Discussion Goal:** Students share the code segment would include an `if` statement to check if the homework is finished then a nested `if` statement to check if the chores are completed. If both conditions are `true`, then they can hang out with their friends. If one of the conditions is `false`, then they will need to complete their task first.\n\n**Do This:** Click through the animated slide to show an example solution with a nested `if` statement. "
      },
      "seeding_key": {
        "activity_section.key": "f5f4845c-fa32-4a73-aaad-28cca399b7bb",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "12208dda-66ed-4f4b-844b-9f28c792e731",
      "position": 5,
      "properties": {
        "description": "Now that you understand how to use a nested `if` statement, let’s practice using them to solve problems in The Neighborhood.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "12208dda-66ed-4f4b-844b-9f28c792e731",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "3e18fadb-797c-42dc-b54f-f6dc366f94bb",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Level 1 on Code Studio. Students revisit Level 1 from Lesson 8 to add a nested `if` statement to the current condition."
      },
      "seeding_key": {
        "activity_section.key": "3e18fadb-797c-42dc-b54f-f6dc366f94bb",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "e3ce41d3-48fc-487f-b75f-9d69cff039e5",
      "position": 7,
      "properties": {
        "description": "In Lesson 4, you learned how to implement relational operators in conditional statements. We will now expand our conditional statements to include logical operators to create compound Boolean expressions. You should recall the first logical operator from Unit 1. ",
        "duration": "8",
        "name": "Logical Operators",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "e3ce41d3-48fc-487f-b75f-9d69cff039e5",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "3c19f111-dfc9-4b09-81e9-f147f31383d8",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to discuss logical operators.\n* The `!` operator means NOT\n* The `&&` operator means AND \n* The `||` operator means OR \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to discuss the definition and example of compound Boolean expressions.\n* A && B → evaluates to `true` when both A and B are true\n* A || B → evaluates to `true` when either (or both) A or B is true"
      },
      "seeding_key": {
        "activity_section.key": "3c19f111-dfc9-4b09-81e9-f147f31383d8",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "5aebd38f-463b-4880-99f7-988785c151a1",
      "position": 9,
      "properties": {
        "description": "Think about yesterday’s example about the weather. If you want to go to the park, the weather needs to be higher than 85 degrees. If the weather is above 95 degrees, then you want to stay home. If the weather is 80 degrees, you can play soccer with friends, but if the weather is lower than 80, you can just stay at home.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "5aebd38f-463b-4880-99f7-988785c151a1",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "56bbcb07-e703-4108-98ae-fc00cc0bd7df",
      "position": 10,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *How would you guess logical operators show up in Java? How might they help us simplify the use of conditional statements? What if the weather was 98 degrees? How would you write that code segment?*\n\n**Discussion Goal:** Students suggest using a && operator to test if the weather is between 81 and 95 degrees. If the condition is `true`, then they can go to the park. If it is `false`, then the second condition will be evaluated. If the second condition is `false`, they will need to stay at home. \n\n**Do This:** Click through the animated slide to show an example conditional statement using a logical operator. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 2 Code Studio. Students use logical operators to simplify the conditional statements. Have students continue to complete Level 3."
      },
      "seeding_key": {
        "activity_section.key": "56bbcb07-e703-4108-98ae-fc00cc0bd7df",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "34d8f25e-6875-4fe0-9164-8a41746d5852",
      "position": 11,
      "properties": {
        "description": "Today we will update our Pop the Balloon game to improve its functionality. The next features of our Pop the Balloons game that we will develop are the `movesLeft()` and `calculateScore()` functions. ",
        "duration": "12",
        "name": "Pop the Balloons Game",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "34d8f25e-6875-4fe0-9164-8a41746d5852",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "7720976b-4223-462e-9ce0-d61c46f148d6",
      "position": 12,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *How can logical operators improve the functionality of your Pop the Balloons game?*\n\n**Discussion Goal:** Students share that the logical operators can simplify the selection statements to test multiple conditions in one or two selection statements.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Walk students through the to-do list of methods for the Pop the Balloons game. ",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may struggle to break down the process of checking if there are moves left or calculating the score. To help students think about the process, ask:\n* *Consider how many balloons have been popped and the value of each balloon. How would you know how many balloons have been popped? How would you find out if the values equal the number rolled?*\n* *How would you calculate the score by hand if you were playing the game? What steps would you take to find the score?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "7720976b-4223-462e-9ce0-d61c46f148d6",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "d723e288-6f7e-4ab7-a3c8-24afb78a21da",
      "position": 13,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain the purpose of the `movesLeft()` method. Direct students to work with a partner to write pseudocode for the if statements on a sheet of paper. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to review the pseudocode for the `if` statements in the `movesLeft()` method. Students should compare their pseudocode to the slide to ensure they’re on the right track.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain the purpose of the `calculateScore()` method. Direct students to work with a partner to write pseudocode on a sheet of paper for `calculateScore()`."
      },
      "seeding_key": {
        "activity_section.key": "d723e288-6f7e-4ab7-a3c8-24afb78a21da",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "e9ee8198-732e-4069-be8d-a9023e3f5441",
      "position": 14,
      "properties": {
        "description": "Using your pseudocode, apply what you have written to write your two methods in Code Studio.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "e9ee8198-732e-4069-be8d-a9023e3f5441",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "5155d2e7-aedc-4583-b8ac-3c611bc2ebdd",
      "position": 15,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Levels 4 and 5 on Code Studio. Students use nested `if` statements and logical operators to improve the functionality of the Pop the Balloons game.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students need extra support:\n* Have students translate their pseudocode to Java before they go to Code Studio.\n* Encourage those who finish early to assist students who need extra support.\n* If time permits, review both methods as a class before the code review."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "5155d2e7-aedc-4583-b8ac-3c611bc2ebdd",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "8eca1080-2469-4dee-9afc-c46eab5868bb",
      "position": 16,
      "properties": {
        "description": "This is a good opportunity to do a code review to make improvements. Let's take a moment to provide feedback to each other. Don't forget to follow ART – ask questions, raise flags about confusing code, and tag awesome code!",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "8eca1080-2469-4dee-9afc-c46eab5868bb",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "30f9e566-19d0-4e23-a93e-130e017daaa4",
      "position": 17,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Place students in pairs to review each other's `calculateScore()` method. Students request, receive and review feedback on Level 5. While reviewing, students consider the following questions:\n* Am I able to understand the code easily?\n* Can you think of any inputs that could break the code?\n* Is error handling provided to handle edge cases?\n* Is the same code duplicated across multiple files?"
      },
      "seeding_key": {
        "activity_section.key": "30f9e566-19d0-4e23-a93e-130e017daaa4",
        "lesson_activity.key": "e540042f-1994-4199-91df-0946b4f226fb"
      }
    },
    {
      "key": "8e336470-1951-42d9-8cba-0aba9cad827d",
      "position": 1,
      "properties": {
        "description": "Great job! You have completed all of the tasks for the Pop the Balloons game. ",
        "name": "Closing the Loop",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "8e336470-1951-42d9-8cba-0aba9cad827d",
        "lesson_activity.key": "30521431-1757-443d-9fe6-dc74f55fe7b6"
      }
    },
    {
      "key": "9d688cd1-1240-404f-9efa-fd09c8a5c83c",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Guide students through a Closing the Loop discussion.\n* *What are the key takeaways of this lesson?*\n* *Which parts of this lesson built off of previous lesson content? What is completely new?*\n* *What words would you use to describe our learning as a class today?*\n\n**Discussion Goal:** This discussion should help reinforce the important beats of the lesson, allowing students to check their understanding and support one another in their understanding of the day’s objectives.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary "
      },
      "seeding_key": {
        "activity_section.key": "9d688cd1-1240-404f-9efa-fd09c8a5c83c",
        "lesson_activity.key": "30521431-1757-443d-9fe6-dc74f55fe7b6"
      }
    },
    {
      "key": "cb46efd8-a746-4cf2-b842-26d8d8ed160a",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "cb46efd8-a746-4cf2-b842-26d8d8ed160a",
        "lesson_activity.key": "30521431-1757-443d-9fe6-dc74f55fe7b6"
      }
    },
    {
      "key": "1195d11b-f156-4df8-a9ac-f21d1a20468e",
      "position": 1,
      "properties": {
        "description": "**Group:** Place students in groups of 4-5.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give a copy of the Vocabulary Don’t-Say-It! activity guide and a pair of scissors to each group.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Review the rules of Vocabulary Don’t-Say-It! with the class:\n* Students will rotate being the clue-giver and guessers.\n* Once cut out, all cards should be placed face down in a pile. Cards should be shuffled.\n* During each round:\n   * The clue-giver will draw a card from the top of the deck and describe the vocabulary word on the top of the card to the guessers. \n   * They cannot say any of the “Don’t-Say-It!” words listed underneath the vocabulary word.\n   * The student who guesses the word correctly gets the card.\n* Students take turns as the clue-giver for each card.\n* The winner is the student with the most cards.\n\n**Do This:** Direct students to play Vocabulary Don't-Say-It! in their groups.",
        "name": "Vocabulary Don't-Say-It!",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students get through all of the cards, have them shuffle and play again. Teams can also add new words to the bottom of each card to make the game more challenging."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1195d11b-f156-4df8-a9ac-f21d1a20468e",
        "lesson_activity.key": "3804a50f-6631-45ed-aaec-d57803d09f83"
      }
    },
    {
      "key": "1c798fa9-a015-488d-8708-775721495864",
      "position": 1,
      "properties": {
        "description": "Yesterday, we learned the logical operators ! (not), && (and), and || (or) and how we can use them to create compound Boolean expressions. Today, we’re going to learn about a tool called a truth table, which we can use to evaluate compound Boolean expressions.",
        "duration": "8",
        "name": "Truth Tables Introduction",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1c798fa9-a015-488d-8708-775721495864",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "c25eb4be-3017-496d-9c75-912dfbe9f963",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of the Truth Tables activity guide.\n\n**Do This:** Walk through the following slides as a class:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Truth tables help visualize compound Boolean expressions and their resulting Boolean values.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Show the Creating a Truth Table video.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to demonstrate creating a truth table for !A. Prompt students to complete the truth table on their activity guide.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to demonstrate creating a truth table for A && B. Prompt students to complete the truth table on their activity guide.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to demonstrate creating a truth table for A || B. Prompt students to complete the truth table on their activity guide.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If you have additional time, instruct students to work through the truth table for A || B either independently or with a partner before reviewing the resulting truth table with the class."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "c25eb4be-3017-496d-9c75-912dfbe9f963",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "8598ec47-ed83-447e-9730-5db9c867f120",
      "position": 3,
      "properties": {
        "description": "Truth tables can also be used to represent more complex compound Boolean expressions. These can get complicated, but it’s important to remember that every compound Boolean expression can be broken down into our three core logical operators: not, and, and or. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "8598ec47-ed83-447e-9730-5db9c867f120",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "c0453ed7-100d-4f94-af3f-a61e278b1b93",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the truth table for !A || !B. Highlight the use of extra columns to complete the truth table for the Boolean expression. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Suppose we wanted to figure out if two expressions are equivalent. How could we use truth tables to check for equivalence?*\n\n**Discussion Goal:** Students discuss ideas for how they might show the equivalence of two expressions.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to explain how to use truth tables to determine equivalence."
      },
      "seeding_key": {
        "activity_section.key": "c0453ed7-100d-4f94-af3f-a61e278b1b93",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "9c89f5b2-4181-4400-abc8-3ca55c039a88",
      "position": 5,
      "properties": {
        "description": "Now that we understand how to create truth tables, we’re going to put our knowledge into action! You’ll have the chance to use truth tables to prove a set of famous Boolean logic laws and see how to use truth tables in software engineering through open-source code.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "9c89f5b2-4181-4400-abc8-3ca55c039a88",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "295c301a-a5b8-4e19-b5f5-53d550fd1350",
      "position": 6,
      "properties": {
        "description": "**Group:** Place students in pairs.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain the process for the Around the World activity.\n1. Students find a station (they do not need to go in order).\n2. Students follow instructions at that station. There is a spot in their activity guide that corresponds with each station.\n3. Students find another group who has completed the same station and explain their completed truth table to that group.\n   * The second group initials their activity guide if they agree with their solution.\n   * If they believe there is an error, the groups revise the truth table together before the second group signs off.\n4. Students answer the question(s) attached to each station before moving on to the next.\n5. Pairs repeat steps 1-4 for each station (or until the time is up).",
        "duration": "20",
        "name": "Around the World",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "As students work, circulate the room to check that they are successfully following the Around the World steps and are not getting stuck at a station. You may choose to use a four-minute timer to help students pace themselves.\n\nAllow pairs who may need more time on each part to complete three stations instead of four. Encourage them to at least complete either (A or B) AND (C or D) to obtain practice proving one of De Morgan’s Laws and an opportunity to work with open-source code."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "295c301a-a5b8-4e19-b5f5-53d550fd1350",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "a849f13e-3c7a-49f1-96a9-6d9c52a7f2eb",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Look at your solution for station A or B. Were the two expressions equivalent? How do you know?*\n\n**Discussion Goal:** Students note that the two expressions were equivalent at both stations A and B because their resulting truth tables had the same final truth values.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Encourage students who did not complete both A and B to look at a neighbor’s solution. "
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "a849f13e-3c7a-49f1-96a9-6d9c52a7f2eb",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "77c4fefd-08a5-40e6-b891-12bbe0654182",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Define De Morgan’s Laws.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to demonstrate truth tables for each of De Morgan’s Laws."
      },
      "seeding_key": {
        "activity_section.key": "77c4fefd-08a5-40e6-b891-12bbe0654182",
        "lesson_activity.key": "358622a0-f748-4191-bb28-e139dbb96115"
      }
    },
    {
      "key": "c7a0f5a2-e210-48d9-9de3-6a433f0d1ce6",
      "position": 1,
      "properties": {
        "description": "You've learned a lot this unit, and now it’s time to Show What You Know! Like in previous units, we will begin with the unit project, then we will spend a day practicing how to answer AP-style free-response questions. We will then wrap up the unit with a multiple-choice assessment.",
        "name": "Project Preview",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c7a0f5a2-e210-48d9-9de3-6a433f0d1ce6",
        "lesson_activity.key": "5def2c10-9a03-44cc-84df-f9b3f4252931"
      }
    },
    {
      "key": "5dccbce9-a743-4e8c-8599-ead13d110665",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Share an overview of the Neighborhood Block Party Project with the students:\n* Students will be creating the underlying logic for a basic game to play at The Neighborhood Block Party. They will not develop an entire functional game for this project.\n* They will implement what they’ve learned throughout this unit to design a basic board or lawn game.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Think about some games you enjoy playing. Given what we’ve learned in this unit, what games could you build using Java?*\n\n**Discussion Goal:** Students share ideas about games they could create.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Ask additional prompting questions to encourage brainstorming, such as:\n* *What video, computer, or phone games do you enjoy playing? Could you build a version of these?*\n* *When we developed Pop the Balloons, what different techniques or methods did we use? How could you use these in a different game?*\n* *What card or board game do you enjoy playing? How might you create a virtual version?*\n\nConsider creating a class list of brainstormed ideas by doing the following:\n* Distribute sticky notes or slips of paper and ask students to record one idea per sticky or slip. Keep the ideas for use during the first day of the project.\n* Record ideas as students share on a slide or document to review later.\n\nAlternately, students can write the prompt in their notebooks and add any ideas they have. If you have extra time, give several minutes of quiet brainstorming time followed by sharing with a partner or small group to flesh out ideas."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "5dccbce9-a743-4e8c-8599-ead13d110665",
        "lesson_activity.key": "5def2c10-9a03-44cc-84df-f9b3f4252931"
      }
    },
    {
      "key": "38a297ce-c97e-4296-9a8c-5625936b1c5e",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of the Unit 4 Guide."
      },
      "seeding_key": {
        "activity_section.key": "38a297ce-c97e-4296-9a8c-5625936b1c5e",
        "lesson_activity.key": "5def2c10-9a03-44cc-84df-f9b3f4252931"
      }
    },
    {
      "key": "3785fa10-5819-420d-8c51-12697a3b82ed",
      "position": 4,
      "properties": {
        "description": "The Unit 4 Guide will help you remember what you have learned in this unit. Go over all of the lessons and think to yourself if you can say \"I can..\" with each lesson objective. Review the vocabulary. Look over the reference section for code. You don't need to memorize any particular class for the assessment, but it's helpful to remember how everything works together. ",
        "remarks": true,
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The unit guide outlines the objectives, vocabulary, and programming concepts to help students prepare for the assessment. If time permits, you can choose to quickly review any parts of the unit that are still confusing for students."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "3785fa10-5819-420d-8c51-12697a3b82ed",
        "lesson_activity.key": "5def2c10-9a03-44cc-84df-f9b3f4252931"
      }
    },
    {
      "key": "994b2d39-1924-428a-9faa-acdb73783e79",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "994b2d39-1924-428a-9faa-acdb73783e79",
        "lesson_activity.key": "5def2c10-9a03-44cc-84df-f9b3f4252931"
      }
    },
    {
      "key": "f6dd5639-bc79-471b-ade3-f0cc4d289c70",
      "position": 6,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "f6dd5639-bc79-471b-ade3-f0cc4d289c70",
        "lesson_activity.key": "5def2c10-9a03-44cc-84df-f9b3f4252931"
      }
    },
    {
      "key": "36e9d55c-915f-497b-9bb5-094df41884a6",
      "position": 1,
      "properties": {
        "description": "The unit assessment project assesses proficiency in the knowledge and skills developed in this unit. It is completed in three class periods during which students design and develop the game engine for an interactive game. Students participate in planning and feedback activities to improve their programs and solve problems, reinforce software development practices, and self-image as software engineers. Lessons 11, 12, and 13 collectively include instructions for the three-day project.\n\nIf there is not enough time for the three-day project, a one-day option is available that achieves the targeted learning objectives and goals. If using this option, refer to the [**Neighborhood Block Party Project 1 Day Lesson Plan**](https://docs.google.com/document/d/1xQ1NB9PSyIhNymwCulbU3YLRA8jBKbMvy2qsXTBaJCM/edit?usp=sharing), which includes a one-day version of the [**Neighborhood Block Party Project Planning Guide**](https://docs.google.com/document/d/1tJRsllS_PR2bn0ZcHwrwo3Tgsxvqc7r9XAuP4HM6R6E/edit?usp=sharing). Direct students to develop their program on Code Studio Lesson 13 so they can submit their project. While the one-day option covers the learning objectives and goals, it shortens planning and reflection time. Consider this tradeoff when deciding which version to use."
      },
      "seeding_key": {
        "activity_section.key": "36e9d55c-915f-497b-9bb5-094df41884a6",
        "lesson_activity.key": "17f89756-3409-4329-9193-0709e963b245"
      }
    },
    {
      "key": "4b54f8ea-3d0d-477d-a518-74855820297d",
      "position": 1,
      "properties": {
        "description": "To bring all the ideas of this unit together, we will develop a game engine and a simple interface to interact with it.",
        "name": "What is a Game Engine?",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "4b54f8ea-3d0d-477d-a518-74855820297d",
        "lesson_activity.key": "db48cbe8-d728-4561-bb90-b1a079c5c709"
      }
    },
    {
      "key": "b3e9f169-3a9f-4627-a252-a1fc6302f61f",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the video What is a Game Engine?\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Describe a game you have played recently and its steps to update your score. What might the program logic look like to make that update happen?*\n\n**Discussion Goal:** Students differentiate between playing and designing a game. They identify the conditional logic needed to achieve the desired outcomes of a game."
      },
      "seeding_key": {
        "activity_section.key": "b3e9f169-3a9f-4627-a252-a1fc6302f61f",
        "lesson_activity.key": "db48cbe8-d728-4561-bb90-b1a079c5c709"
      }
    },
    {
      "key": "1dfd651b-46c5-45fa-a08d-a448e3f67f51",
      "position": 3,
      "properties": {
        "description": "Over the next three days, you will build your game engine and implement it into a simple game. We will play our games during our block party! Let’s take a look at the project requirements and rubric.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1dfd651b-46c5-45fa-a08d-a448e3f67f51",
        "lesson_activity.key": "db48cbe8-d728-4561-bb90-b1a079c5c709"
      }
    },
    {
      "key": "0cc8a23e-f137-446f-95e7-4d2920c9af2a",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give a copy of the Neighborhood Block Party Project Planning Guide to each student. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to read through the project description on the first page of the planning guide and then read the last page's rubric.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What code needs to be written for this project?*\n* *How can sprites be added to the game? Are they required?*\n* *Based on the rubric, what is the focus of this project?*\n\n**Discussion Goal:** Students identify the goals of the project before beginning work.  Students should identify:\n* The four required methods are `setupGame()`, `updateScore()`, `checkGameOver()`, and `isValidMove()`. Students are NOT required to develop a fully functioning game. \n* They will need to create a new class for each sprite they add. Students can use the template sprite provided in the starter code and are NOT required to write their own to meet the project specifications.\n* There is only one row in the project rubric that assesses the code of their program. Assessment of the project focuses on design practices and iterative development. An example of this would be to develop the game logic using the template sprites to make the game work before adding additional classes and visuals.",
        "duration": "5",
        "name": "Project Description and Rubric"
      },
      "seeding_key": {
        "activity_section.key": "0cc8a23e-f137-446f-95e7-4d2920c9af2a",
        "lesson_activity.key": "b158439b-4ded-447b-b3e2-566b7c4e8998"
      }
    },
    {
      "key": "8ea6e7c1-00f9-46db-ae2c-9c3d3ae81247",
      "position": 2,
      "properties": {
        "description": "We are about to begin designing our game engines. Before we begin, it is important to set our expectations for the project. You should assume that you are not going to have enough time to build out a full game. Remember - Pop the Balloons took multiple class periods over the past two weeks!",
        "duration": "8",
        "name": "Narrowing Down the Project",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "8ea6e7c1-00f9-46db-ae2c-9c3d3ae81247",
        "lesson_activity.key": "b158439b-4ded-447b-b3e2-566b7c4e8998"
      }
    },
    {
      "key": "74dae34a-fde8-4de9-b8cd-3eea1367395b",
      "position": 3,
      "properties": {
        "description": "**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to discuss guidelines for narrowing down a project.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> With a partner, students read through the sample project proposal in part one of their Project Planning Guides. They practice narrowing down the project's features and identifying the core algorithms needed for each of the game engine methods.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *How can this game be narrowed to fit within the time frame of this project?*\n\n**Discussion Goal:** Students identify the core components of the game and the general logic for each method.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Keep students focused on the four required methods. It may be that some of the gameplay needs to be revised to make it achievable within three days."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "74dae34a-fde8-4de9-b8cd-3eea1367395b",
        "lesson_activity.key": "b158439b-4ded-447b-b3e2-566b7c4e8998"
      }
    },
    {
      "key": "a027c13a-a6bb-48e3-bda0-76b03b45c12d",
      "position": 4,
      "properties": {
        "description": "Before writing code, software engineers plan and write pseudocode for their methods and algorithms. You have the next 10 minutes to pick a game and draft out the mechanics for each method of your game engine.",
        "duration": "24",
        "name": "Game Design",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "a027c13a-a6bb-48e3-bda0-76b03b45c12d",
        "lesson_activity.key": "b158439b-4ded-447b-b3e2-566b7c4e8998"
      }
    },
    {
      "key": "9f95a0e8-9765-4559-9533-2ca04eed2e54",
      "position": 5,
      "properties": {
        "description": "**Do This:** Students begin working on their project\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Each student should choose a game to build.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Direct students to design their game logic in part two of their Project Planning Guide.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Students look at a partner’s project design to give feedback.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Planning a game has the potential to take a lot of time. Use a 10-minute timer to help students stay on pace."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "9f95a0e8-9765-4559-9533-2ca04eed2e54",
        "lesson_activity.key": "b158439b-4ded-447b-b3e2-566b7c4e8998"
      }
    },
    {
      "key": "b12679e0-ad80-4770-9d55-bd1bae5e31fe",
      "position": 6,
      "properties": {
        "description": "**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to display the example pseudocode for the Tic-Tac-Toe game.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Direct students to create pseudocode for each of their game engine components in part three. They may choose to include additional methods for sprites but should only work on these after achieving the project requirements.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students finish writing their pseudocode early, encourage them to trace through the pseudocode with a partner to make sure there are no logic errors. You may also have them begin steps four and five by accessing Lesson 12 on Code Studio to begin writing their code."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "b12679e0-ad80-4770-9d55-bd1bae5e31fe",
        "lesson_activity.key": "b158439b-4ded-447b-b3e2-566b7c4e8998"
      }
    },
    {
      "key": "adb6268a-776b-468a-8602-05137ac50950",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete the reflection prompt in their Project Planning guide.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Reflection"
      },
      "seeding_key": {
        "activity_section.key": "adb6268a-776b-468a-8602-05137ac50950",
        "lesson_activity.key": "b363a23d-160f-4951-af56-422dea6b2b6e"
      }
    },
    {
      "key": "48140f5f-7bb5-45cb-a53e-99e481c56336",
      "position": 2,
      "properties": {
        "description": "**Neighborhood Block Party Project:** You can use the pseudocode or the reflection as a formative assessment for the day.",
        "name": "Assessment (Optional)"
      },
      "seeding_key": {
        "activity_section.key": "48140f5f-7bb5-45cb-a53e-99e481c56336",
        "lesson_activity.key": "b363a23d-160f-4951-af56-422dea6b2b6e"
      }
    },
    {
      "key": "163ca4a8-e480-4535-8f1d-8424fd4ebc9c",
      "position": 1,
      "properties": {
        "description": "When designing a large product, it is important for software engineers to think about the work to complete and the people they work with to complete the project. Agile development is one approach software engineers use to organize and manage their work.",
        "name": "Using Agile Development",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "163ca4a8-e480-4535-8f1d-8424fd4ebc9c",
        "lesson_activity.key": "f7320864-4100-4d1c-a2ae-c1801ae87322"
      }
    },
    {
      "key": "05e3c86a-034e-4214-aed3-e17419ba01dd",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the video What is Agile Development?\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** How can you use this development process to plan your project?\n\n**Discussion Goal:** Students identify the need for incremental development and teamwork to establish and achieve goals."
      },
      "seeding_key": {
        "activity_section.key": "05e3c86a-034e-4214-aed3-e17419ba01dd",
        "lesson_activity.key": "f7320864-4100-4d1c-a2ae-c1801ae87322"
      }
    },
    {
      "key": "06509417-8a76-42b9-bfb3-d192206959da",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Agile development is a process that is often used for large collaborative projects. Since we do not have a lot of development time, we will focus on practicing a few components of the Agile process as you work on your project. We started the process when we planned and designed our game engines yesterday. Today, we will identify priorities, begin development, and reflect on our progress to refine our priorities.\n\nYou will have three iterations of 20, 15, and 10 minutes to develop and revise your program.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "06509417-8a76-42b9-bfb3-d192206959da",
        "lesson_activity.key": "f7320864-4100-4d1c-a2ae-c1801ae87322"
      }
    },
    {
      "key": "e9268231-0e92-43e5-989d-149bc0cdca27",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete the priority list in part five.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "This priority list looks similar to those of the previous projects but is tailored towards iterative planning.  Encourage students to think about the development of each component."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "e9268231-0e92-43e5-989d-149bc0cdca27",
        "lesson_activity.key": "f7320864-4100-4d1c-a2ae-c1801ae87322"
      }
    },
    {
      "key": "a698f906-9c8e-46eb-b89c-7b9f0fb7574b",
      "position": 1,
      "properties": {
        "description": "Now that you have planned your game engine, you will begin writing your program. Consider your goals for this first iteration. Each time you complete a goal, commit your code with a message to indicate the update. This way, if something breaks in your next stage of development, you can return to a previous version.",
        "duration": "20",
        "name": "Iteration 1",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "a698f906-9c8e-46eb-b89c-7b9f0fb7574b",
        "lesson_activity.key": "c4a677fe-eeac-4340-997a-8745ed71762f"
      }
    },
    {
      "key": "410f7eec-c1d0-4a4c-9173-91ec3d97f128",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to begin developing their game engine on Level 1 in Code Studio. Use the 20-minute timer to help students pace their work. Remind students to commit their code often as they work.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Encourage students to complete their reach goals if they have finished the primary methods for their game engine."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "410f7eec-c1d0-4a4c-9173-91ec3d97f128",
        "lesson_activity.key": "c4a677fe-eeac-4340-997a-8745ed71762f"
      }
    },
    {
      "key": "c9f57a18-3e59-458a-869d-56330e3c5170",
      "position": 3,
      "properties": {
        "description": "At the end of each iteration, developers share their work, stakeholders ask questions, and the group begins to plan the product's next iteration. We will participate in a revised code review so you can share your work as peer developers and provide feedback as potential users of your game.",
        "duration": "10",
        "name": "Code Review",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c9f57a18-3e59-458a-869d-56330e3c5170",
        "lesson_activity.key": "c4a677fe-eeac-4340-997a-8745ed71762f"
      }
    },
    {
      "key": "a3dd2e9a-7975-494c-8a13-c0ba68c9c625",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the three steps of the day’s code review and group students for review.\n* Step 1: Each developer spends one minute describing what they have done so far.\n* Step 2: Code Review\n* Step 3: Reflect on feedback and create a revised priority list.\n\n**Do This:** \n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Students share their planning guide and progress with their review partner, giving a quick overview of what they have done so far.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Students return to their computers and request, receive, and review feedback on their Neighborhood Block Party Project."
      },
      "seeding_key": {
        "activity_section.key": "a3dd2e9a-7975-494c-8a13-c0ba68c9c625",
        "lesson_activity.key": "c4a677fe-eeac-4340-997a-8745ed71762f"
      }
    },
    {
      "key": "614487d9-343c-41ec-9e25-47e3454a96ba",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Tomorrow, we will start the day with our second iteration of your project. By the end of the second iteration, you should achieve many of your priorities, but nothing needs to be in its final state of done.",
        "name": "Revisions, Updates, and Reviews",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "614487d9-343c-41ec-9e25-47e3454a96ba",
        "lesson_activity.key": "bae3b9fc-77ef-4651-84a7-f972647fefb8"
      }
    },
    {
      "key": "f47a2849-e4e7-44be-8788-99b9d9e8112d",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students review feedback from the code review to create a priority list for the second iteration of upgrades, changes, and things they still need to complete. They should complete this in the Iteration 2 section of the Project Planning Guide.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students finish their prioritized list early, encourage them to start working on their first priority."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "f47a2849-e4e7-44be-8788-99b9d9e8112d",
        "lesson_activity.key": "bae3b9fc-77ef-4651-84a7-f972647fefb8"
      }
    },
    {
      "key": "fbdbf44b-2c1d-4c80-bf61-a584248aae5c",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "fbdbf44b-2c1d-4c80-bf61-a584248aae5c",
        "lesson_activity.key": "bae3b9fc-77ef-4651-84a7-f972647fefb8"
      }
    },
    {
      "key": "aa617a04-46ca-4e01-83f5-0acdf352f16b",
      "position": 4,
      "properties": {
        "description": "**Neighborhood Block Party Project:** You can collect the Daily Reflection and Prioritized Lists as an optional completion assessment.",
        "name": "Assessment (Optional)"
      },
      "seeding_key": {
        "activity_section.key": "aa617a04-46ca-4e01-83f5-0acdf352f16b",
        "lesson_activity.key": "bae3b9fc-77ef-4651-84a7-f972647fefb8"
      }
    },
    {
      "key": "af06c3cb-bc45-4222-b356-3b62b956b0ed",
      "position": 1,
      "properties": {
        "description": "Yesterday you prepared a priority list for your second iteration. You now have 15 minutes to work toward these goals, and then we will reassess. You will have 10 minutes for your final iteration. Let’s get to it!",
        "name": "Iteration 2",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "af06c3cb-bc45-4222-b356-3b62b956b0ed",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "a02e861a-a129-4b23-9ee9-409ebda4797f",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to their second priority list in the Project Planning Guide and Level 1 on Code Studio to finish their game engine. Use the 15-minute timer to help students pace their work. Remind students to commit their code often as they work.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may move at different speeds depending on their priorities. If students finish early, encourage them to complete their reach goals. Students can also complete their reflections using the rubric and begin their third iteration."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "a02e861a-a129-4b23-9ee9-409ebda4797f",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "4b1559f4-b9d8-426e-aa39-1f83f89756b0",
      "position": 3,
      "properties": {
        "description": "You are about to enter your last iteration to complete this project. Take the next three minutes to check your program against the rubric in the project guide. If your project was scored now, which requirements have you met? Which still needs work?",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "4b1559f4-b9d8-426e-aa39-1f83f89756b0",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "1287746b-e4d4-4088-8953-b66e231a3202",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students assess their project against the rubric outlined in the Project Planning Guide. They use this information to create a final priority list."
      },
      "seeding_key": {
        "activity_section.key": "1287746b-e4d4-4088-8953-b66e231a3202",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "c8c3fc36-d506-419c-8385-ef65011a68e2",
      "position": 5,
      "properties": {
        "description": "We will now begin our last iteration to complete this project. Use this time to make sure you are meeting the project's requirements, and if you have time, try to begin addressing your reach goals. Remember to commit your code after adding a new feature.",
        "name": "Iteration 3",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c8c3fc36-d506-419c-8385-ef65011a68e2",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "cfbdf5ee-0b8c-489a-bfe4-3557f8b02909",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students continue working in Level 1 on their final game engine."
      },
      "seeding_key": {
        "activity_section.key": "cfbdf5ee-0b8c-489a-bfe4-3557f8b02909",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "1fce6b13-cc1e-4f17-89c7-69987568cdea",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> We’ve made it to the end of our project, and the party is about to begin! Now you get to share your work with your peers.",
        "duration": "10",
        "name": "Block Party!",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1fce6b13-cc1e-4f17-89c7-69987568cdea",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "7998792e-4bc4-4bae-ae47-4dd6c32aa1b4",
      "position": 8,
      "properties": {
        "description": "**Distribute:** Give 3-4 sticky notes to each student.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students display their games and circulate to play each other's games. As they play, they should use the sticky notes to write feedback to the game developer sharing things they like about the game and suggest innovations for the developer to consider.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Create a party atmosphere within your school regulations by:\n* Playing music\n* Encouraging students to bring in snacks/treats to share\n* Taping a hopscotch path to get from one game to another\n* Setting up balloons or other decorations around the room"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "7998792e-4bc4-4bae-ae47-4dd6c32aa1b4",
        "lesson_activity.key": "4579b56d-089e-4185-b90b-e4ad8237356f"
      }
    },
    {
      "key": "ef0bb29b-e7b8-43ea-a09f-b2be113e3458",
      "position": 1,
      "properties": {
        "description": "Congratulations on the completion of your projects and the success of our party!  Take the last few minutes of class to read through your users’ feedback and reflect on the development process of your game.",
        "name": "Reflection",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ef0bb29b-e7b8-43ea-a09f-b2be113e3458",
        "lesson_activity.key": "316d1beb-5f00-4e2d-bdd0-72e5d64f0612"
      }
    },
    {
      "key": "04f2966c-a755-4e99-bb79-1022aade58be",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students read through the glows/innovations for their game. Have students complete the End of Project Self-Reflection in the Project Planning Guide. "
      },
      "seeding_key": {
        "activity_section.key": "04f2966c-a755-4e99-bb79-1022aade58be",
        "lesson_activity.key": "316d1beb-5f00-4e2d-bdd0-72e5d64f0612"
      }
    },
    {
      "key": "fdefd811-33db-43d6-94d8-e56c989241b7",
      "position": 3,
      "properties": {
        "description": "**Neighborhood Block Party Project:** Use the rubric on the last page of the Game Engine Project Planning Guide to assess student projects.",
        "name": "Assessment: Grading the Project"
      },
      "seeding_key": {
        "activity_section.key": "fdefd811-33db-43d6-94d8-e56c989241b7",
        "lesson_activity.key": "316d1beb-5f00-4e2d-bdd0-72e5d64f0612"
      }
    },
    {
      "key": "d29eb149-780d-492f-8dfc-9faa691aad56",
      "position": 1,
      "properties": {
        "description": "Today, we will complete a free response question called BingoCaller almost completely on your own. To approach this problem, let’s apply the three steps of the Close Reading Strategy.",
        "name": "Step 1: Annotate",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "d29eb149-780d-492f-8dfc-9faa691aad56",
        "lesson_activity.key": "0328967a-6e64-4a19-ad68-0cb8a92df4a6"
      }
    },
    {
      "key": "46b896de-5133-40b5-827c-64e2a269e21d",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Review the three-step Close Reading Strategy:\n* Step 1: Annotate the question.\n* Step 2: Write pseudocode to plan the solution.\n* Step 3: Implement the solution in Java.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of FRQ Writing activity guide and a sheet of scratch paper.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to individually annotate the FRQ using the shapes and symbols. \n\n**Group:** Place students in groups of two.\n\n**Do This:** After students finish annotating, have students compare their annotations with their partner.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the directions and starter code from the FRQ Writing activity guide.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What questions do you have about approaching this Free Response Question?*\n\n**Discussion Goal:** Students share any misunderstandings or points of confusion they have about the FRQ. Point out words in the directions or starter code when addressing student questions. Some questions students may ask include:\n* How do I start the problem?\n* What methods do I need to write?\n* Is there an example I can review?\n* How will this FRQ be graded?"
      },
      "seeding_key": {
        "activity_section.key": "46b896de-5133-40b5-827c-64e2a269e21d",
        "lesson_activity.key": "0328967a-6e64-4a19-ad68-0cb8a92df4a6"
      }
    },
    {
      "key": "c112b919-240d-466d-a6aa-c8efef5fe20d",
      "position": 1,
      "properties": {
        "description": "Before writing your solution in Java, let’s plan it using pseudocode. Writing your algorithm out in pseudocode helps you plan your algorithm without worrying about the syntax rules of the programming language.",
        "duration": "10",
        "name": "Pseudocode",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c112b919-240d-466d-a6aa-c8efef5fe20d",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "e9b0e12f-2f60-42e7-86ee-90d906dda21f",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to plan their solutions for part A and B using pseudocode on the provided scratch paper.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "As students work, you may choose to use a ten minute timer to help students pace themselves. At this point, the classroom should be quiet so students can focus on writing pseudocode. After five minutes, you may suggest to students to move onto the second half of the FRQ."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "e9b0e12f-2f60-42e7-86ee-90d906dda21f",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "0c1a754e-ed99-4041-88ce-64277cc1b11c",
      "position": 3,
      "properties": {
        "description": "The last step is to write your solution in Java. Using your pseudocode, write a solution in Java to the FRQ. You will have 15 minutes to complete this task.",
        "duration": "15",
        "name": "Step 3: Implement",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "0c1a754e-ed99-4041-88ce-64277cc1b11c",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "36dee62c-311c-495c-b193-19273dfd9b10",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to convert their pseudocode into Java code onto the FRQ Writing activity guide.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "As students work, you may choose to use a 15 minute timer to help students pace themselves. At this point, the classroom should be quiet so students can focus on writing their solution to the FRQ. If students finish early, suggest:\n* Trace their code to ensure it is correct.\n* Check their solution to ensure it aligns with their pseudocode solution."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "36dee62c-311c-495c-b193-19273dfd9b10",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "8378fa05-ed18-49f2-820c-d328789fdf07",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of the FRQ Scoring Guide.\n\n**Group:** Place students in groups of two.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Ask students to evaluate and score their work with their partners using the FRQ Scoring Guide.",
        "duration": "8",
        "name": "FRQ Scoring and Review"
      },
      "seeding_key": {
        "activity_section.key": "8378fa05-ed18-49f2-820c-d328789fdf07",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "9cceb07e-7a87-4da0-924c-cfb1719c7d44",
      "position": 6,
      "properties": {
        "description": "Congratulations on completing another FRQ! As with any problem we solve in Java, there are multiple approaches to solving an FRQ. Let’s explore some approaches to today’s FRQ.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "9cceb07e-7a87-4da0-924c-cfb1719c7d44",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "7a34a7dc-bde2-4a3f-8730-e8d7fc14493c",
      "position": 7,
      "properties": {
        "description": "**Do This:** Discuss possible solutions to the FRQ. For each solution, walk through each row of the FRQ Scoring Guide and point out how the solution met those requirements. \n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Implementation for `hasBeenCalled()` method (Part (a))\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Implementation of the `makeCall()` method (Part (b))\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Implementation of the `makeCall()` method (Part (b) continued)",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "When discussing the solution, remind students of examples and exercises where the concepts were applied in Unit 4: \n\nExamples related part A:\n* Offsetting the index by 1: In Pop the Balloons, the index of the `Die` object with a value of 1 is 0.\n* Returning the value directly from the array: This implementation applied the DRY Principle.\n\nExamples related to B:\n* Casting randomly generated values into integers: To simulate rolling 1 to 6, students wrote `(int) (Math.random() * 6) + 1 `\n* Conditional branching with an `if/else-if/else` statement: In Pop the Balloons, `updateBalloons()` used an `if/else-if/else` statement because there were more than two balloons, and therefore more than two conditions, that could have been clicked.\n* Using `boolean` method call in a conditional statement: In Pop the Balloons, `isValidMove()` is called to determine whether a balloon can be popped."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "7a34a7dc-bde2-4a3f-8730-e8d7fc14493c",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "2e67e06d-63dc-48fd-ae1a-766517c6aa15",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What were you confident about? Are there some things you left out that could have brought up your score?*\n\n**Discussion Goal:** Students identify what they achieved in their FRQ solution and areas of improvement."
      },
      "seeding_key": {
        "activity_section.key": "2e67e06d-63dc-48fd-ae1a-766517c6aa15",
        "lesson_activity.key": "04aa65d2-c9db-4288-ba82-ea205714ed03"
      }
    },
    {
      "key": "38e218b7-f873-4995-976a-a4653b90e0f6",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student one sticky note.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain each step of the Give One, Get One activity:\n* On a sticky note, write one strategy for approaching an FRQ question.\n* Afterwards, exchange your sticky note with a partner. \n* Read the FRQ strategy from your partner.",
        "name": "Give One, Get One",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "**Give One, Get One** is a processing activity where after thinking or journaling about a topic, students are asked to get up and find someone across the room with whom to share their thoughts or answers. Students are thus receiving an idea in exchange for giving one. The exchange can be verbal or on sticky notes."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "38e218b7-f873-4995-976a-a4653b90e0f6",
        "lesson_activity.key": "ca4a20f5-cf37-4dd7-a542-4186ba9e42c3"
      }
    },
    {
      "key": "4a9d1819-6997-4aea-b6fd-d97bebaf9630",
      "position": 1,
      "properties": {
        "description": "Congratulations, you have made it to the end of Unit 4! You learned a lot about using libraries and APIs, conditionals, and Boolean expressions to implement a block party game for The Neighborhood in The Park. Today, you will complete an assessment to put your skills to the test.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "4a9d1819-6997-4aea-b6fd-d97bebaf9630",
        "lesson_activity.key": "95288af4-e414-4d5f-82b9-36d7e0ca2b6a"
      }
    },
    {
      "key": "8637eed0-e452-40c9-be33-bf5ff508d995",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Administer the Unit 4 Assessment on Code Studio. Make sure to unlock the assessment following instructions [**here**](https://support.code.org/hc/en-us/articles/115001331951-Using-lock-settings-for-assessments-and-surveys). Allow five minutes for students to log in to Code Studio. ",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "**Topic Questions and Personal Progress Checks**\n\n\nFor more information, see the Code.org CSA Topic Coverage."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "8637eed0-e452-40c9-be33-bf5ff508d995",
        "lesson_activity.key": "95288af4-e414-4d5f-82b9-36d7e0ca2b6a"
      }
    },
    {
      "key": "e9e41699-8727-498f-aa69-f8ba48464fc0",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Review the answers to the assessment with the class.",
        "name": "Assessment Review",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Discuss any questions that come up and take note of topics where students may need extra review.\n\nAs you review answers with students, consider the following suggested strategies:\n* Students write down solutions to questions in their journals that they answered incorrectly.\n* Identify mostly missed questions and review as a class.\n* Review answers asynchronously and allow students to complete corrections.\n* Place students in pairs to review answers and share areas that need extra review.\n\nIf you do not have time to review answers with students, create a data chart that includes assessment results. For students who did not meet the learning expectations, follow up to ensure they learn from errors made on the assessment."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "e9e41699-8727-498f-aa69-f8ba48464fc0",
        "lesson_activity.key": "ea3f9736-ea5e-4616-a675-b30b68ada78b"
      }
    }
  ],
  "script_levels": [

  ],
  "levels_script_levels": [

  ],
  "resources": [
    {
      "name": "[KEY] Casting Exploration",
      "url": "https://docs.google.com/document/d/1ZIVUtV10cfpzV5TyXnwxt9V3kjLQtXOoG7vkXBL6TYw/edit#",
      "key": "_key_casting_exploration",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_casting_exploration"
      }
    },
    {
      "name": "[KEY] Comparing Objects",
      "url": "https://docs.google.com/document/d/1DX4-GghzBqTMk1-4YHeQkIrL-Qgc2neSJfznym2P0DI/edit?usp=sharing",
      "key": "_key_comparing_objects",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_comparing_objects"
      }
    },
    {
      "name": "[KEY] Exploring Operators",
      "url": "https://docs.google.com/document/d/1EeKzmo5fRWha8iCkOQMwjD7lelmax5rqTMdtVFeJ3Ic/edit?usp=sharing",
      "key": "_key_exploring_operators",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_exploring_operators"
      }
    },
    {
      "name": "[KEY] FRQ Writing",
      "url": "https://docs.google.com/document/d/1cjhvLYhYiFfUDPiKFZd7GTAc8aBrfjYx-r8s35CypAw/edit?usp=sharing",
      "key": "_key_frq_writing_2",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_frq_writing_2"
      }
    },
    {
      "name": "[KEY] Math Class Activity Guide",
      "url": "https://docs.google.com/document/d/144NcvwidgzxpHJUa7M6-fpqkkoFHWCukQfWwvkfVG-I/edit?usp=sharing",
      "key": "_key_math_class_activity_guide",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_math_class_activity_guide"
      }
    },
    {
      "name": "[KEY] Truth Tables",
      "url": "https://docs.google.com/document/d/1-a3CcJ0vKuDDFYWu52zzaOWOjsijtdmMNR3DhyLr5oI/edit?usp=sharing",
      "key": "_key_truth_tables",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_truth_tables"
      }
    },
    {
      "name": "[KEY] U4L10 Extra Practice",
      "url": "https://docs.google.com/document/d/1BvL6DI6Jb6WBynVmLMJuux3196GTPNBhRmNsADOWgHI/edit?usp=sharing",
      "key": "_key_u4l10_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l10_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L1 Extra Practice",
      "url": "https://docs.google.com/document/d/1d4c2QCa3D9cmlPEyTKBIHBQ5hUCjuWBj7DHdauSzpdw/edit?usp=sharing",
      "key": "_key_u4l1_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l1_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L2 Extra Practice",
      "url": "https://docs.google.com/document/d/1kjF5zAh_QwWcNuYknSxq7OGQGtIF2lSysRy-qod9XR4/edit?usp=sharing",
      "key": "_key_u4l2_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l2_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L3 Extra Practice",
      "url": "https://docs.google.com/document/d/1x4sYy9FICs5exxkiCjmCX6XP6ISU9W_oZrRoZBKVK88/edit?usp=sharing",
      "key": "_key_u4l3_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l3_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L4 Extra Practice",
      "url": "https://docs.google.com/document/d/1NT4dzln49Zq2yxlqs53c2aIKWPDqhzkmH7pm0xYLotk/edit?usp=sharing",
      "key": "_key_u4l4_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l4_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L5 Extra Practice",
      "url": "https://docs.google.com/document/d/1PV8nE8aYJ_qdQ1qKu-a6fB9n0cJo1YavimYg8D_7ZTY/edit?usp=sharing",
      "key": "_key_u4l5_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l5_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L6 Extra Practice",
      "url": "https://docs.google.com/document/d/1DX4-GghzBqTMk1-4YHeQkIrL-Qgc2neSJfznym2P0DI/edit?usp=sharing",
      "key": "_key_u4l6_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l6_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L7 Extra Practice",
      "url": "https://docs.google.com/document/d/18gj3DKgRPkcJ_5ZYMNlPDbaNme_D7v0syca_nbIszwo/edit?usp=sharing",
      "key": "_key_u4l7_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l7_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L8 Extra Practice",
      "url": "https://docs.google.com/document/d/19Cw6zoHDO4LkfWyMc-3cvPz1pdJPJnoS8Zn5Am6no88/edit?usp=sharing",
      "key": "_key_u4l8_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l8_extra_practice"
      }
    },
    {
      "name": "[KEY] U4L9 Extra Practice",
      "url": "https://docs.google.com/document/d/1iwKVDmmdfmH9axRsPKN0F0PXdc7nlVg-2Ie5XkSqExw/edit?usp=sharing",
      "key": "_key_u4l9_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u4l9_extra_practice"
      }
    },
    {
      "name": "Around the World Printouts",
      "url": "https://docs.google.com/document/d/1FMlneQD0SY65y9atWPYPz2fN63wboyhUiTx8csrU_Vw/edit?usp=sharing",
      "key": "around_the_world_printouts",
      "properties": {
        "type": "Resource",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "around_the_world_printouts"
      }
    },
    {
      "name": "Casting Exploration",
      "url": "https://docs.google.com/document/d/1IPYgSjg3JmKCD33csEdikwi4-egwQGrWwciFeaHLFUA/edit#",
      "key": "casting_exploration",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "casting_exploration"
      }
    },
    {
      "name": "Comparing Objects",
      "url": "https://docs.google.com/document/d/1eZuLlzoqKsNHUysCihhE82rRfelMdVRhnpkSgKRrnWU/edit?usp=sharing",
      "key": "comparing_objects",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "comparing_objects"
      }
    },
    {
      "name": "Exploring Operators",
      "url": "https://docs.google.com/document/d/1Oel7wKZ_3KAaDW_7R84z_AuhFixeYy6l8hgPU7R70SA/edit?usp=sharing",
      "key": "exploring_operators",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "exploring_operators"
      }
    },
    {
      "name": "FRQ Scoring Guide",
      "url": "https://docs.google.com/document/d/1dj5xv6_3-6yVytSqIesTffJY5FSa-qQ9PIEe0yPGbYE/edit?usp=sharing",
      "key": "frq_scoring_guide_2",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "frq_scoring_guide_2"
      }
    },
    {
      "name": "FRQ Writing",
      "url": "https://docs.google.com/document/d/1lBJAzXNmzZ_vdrt9zH3RanG_-logRxC6PxtuA46UkCc/edit?usp=sharing",
      "key": "frq_writing_2",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "frq_writing_2"
      }
    },
    {
      "name": "Math Class Activity Guide",
      "url": "https://docs.google.com/document/d/1NWyUTX0o8NfjphkP8FKqH-mY-0PRKw6apnLa-EDQSdw/edit?usp=sharing",
      "key": "math_class_activity_guide",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "math_class_activity_guide"
      }
    },
    {
      "name": "Neighborhood Block Party Project Planning Guide",
      "url": "https://docs.google.com/document/d/1KRhGaNFERthhN9yDlNMLkjXvRFWGaROKTDBdMJRKLCo/edit?usp=sharing",
      "key": "neighborhood_block_party_project_planning_guide",
      "properties": {
        "type": "Exemplar",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "neighborhood_block_party_project_planning_guide"
      }
    },
    {
      "name": "Neighborhood Block Party Project Planning Guide",
      "url": "https://docs.google.com/document/d/12qNF6CP52KogGwtvXVIOhiDofXJH8Ytvh7G2AEoVgNg/edit",
      "key": "neighborhood_block_party_project_planning_guide_1",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "neighborhood_block_party_project_planning_guide_1"
      }
    },
    {
      "name": "Object References Manipulatives",
      "url": "https://docs.google.com/presentation/d/1sQFdGkK3O6REikNhecpBtRRxMToUhrjsZ3GcwMrwBHk/edit?usp=sharing",
      "key": "object_references_manipulatives",
      "properties": {
        "type": "Resource",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "object_references_manipulatives"
      }
    },
    {
      "name": "Quiz, Quiz Trade",
      "url": "https://docs.google.com/document/u/2/d/1c9smHGRY2DNFQupRe7GS3RlU7u4Dd2J-y8dfpukljc4/edit",
      "key": "quiz_quiz_trade_1",
      "properties": {
        "type": "Resource",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "quiz_quiz_trade_1"
      }
    },
    {
      "name": "Truth Tables",
      "url": "https://docs.google.com/document/u/1/d/1ctKlgd7zP61hdc4JFVtSGr5TZ1tI_xZmBEaLIfRizb8/edit",
      "key": "truth_tables",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "truth_tables"
      }
    },
    {
      "name": "U4L10 Extra Practice",
      "url": "https://docs.google.com/document/d/1XyaSNf3CmwIYsIpKUVyH1Gu5p3H_Vsc3rATDq9TcIWI/edit?usp=sharing",
      "key": "u4l10_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l10_extra_practice"
      }
    },
    {
      "name": "U4L1 Extra Practice",
      "url": "https://docs.google.com/document/d/1ABN1VF8UND-BN653ldj6Qhz3PACNcKDrTF5n2Tqe6cU/edit?usp=sharing",
      "key": "u4l1_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l1_extra_practice"
      }
    },
    {
      "name": "U4L2 Extra Practice",
      "url": "https://docs.google.com/document/d/1yz0twZpG5rCWoi-9mtYgOAb05GpII7d7m_tRdddBiRM/edit?usp=sharing",
      "key": "u4l2_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l2_extra_practice"
      }
    },
    {
      "name": "U4L3 Extra Practice",
      "url": "https://docs.google.com/document/d/1BAKDgU8YD1hQjNyMzuhChHnkYTK6uKSXWRZ9_vLvDQY/edit?usp=sharing",
      "key": "u4l3_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l3_extra_practice"
      }
    },
    {
      "name": "U4L4 Extra Practice",
      "url": "https://docs.google.com/document/d/1UCI-265f20rEIljtpvstsYkNZLlP4jfaWZjrx7NLA4k/edit?usp=sharing",
      "key": "u4l4_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l4_extra_practice"
      }
    },
    {
      "name": "U4L5 Extra Practice",
      "url": "https://docs.google.com/document/d/1YyzGnv1oh7nvRvG3DaW5A1nvxns977fGp2c88Qh1jnQ/edit?usp=sharing",
      "key": "u4l5_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l5_extra_practice"
      }
    },
    {
      "name": "U4L6 Extra Practice",
      "url": "https://docs.google.com/document/d/1F0j-9xQ-VlRMlhP-OVpK6BTmUA4GHj17EaJsBdKGTco/edit?usp=sharing",
      "key": "u4l6_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l6_extra_practice"
      }
    },
    {
      "name": "U4L7 Extra Practice",
      "url": "https://docs.google.com/document/d/14Ssh6iBSp543H5A_LWHKV7HWXIalTBOdk8-Q1jTUsMM/edit?usp=sharing",
      "key": "u4l7_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l7_extra_practice"
      }
    },
    {
      "name": "U4L8 Extra Practice",
      "url": "https://docs.google.com/document/d/17XzT1L9FU9ghQXA3AaJ0XKSfuufGgtytYR7zO9OX8ao/edit?usp=sharing",
      "key": "u4l8_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l8_extra_practice"
      }
    },
    {
      "name": "U4L9 Extra Practice",
      "url": "https://docs.google.com/document/d/14IUvb3_k7FWW3rFku0TUC2izaGwDYrvLvgeGFzORDnA/edit?usp=sharing",
      "key": "u4l9_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u4l9_extra_practice"
      }
    },
    {
      "name": "Unit 4 Guide",
      "url": "https://docs.google.com/document/d/1YA_zYh2HlVntDUpFTKrFlO6He__qySBndCt1X-09BkA/edit?usp=sharing",
      "key": "unit_4_guide",
      "properties": {
        "type": "Resource",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "unit_4_guide"
      }
    },
    {
      "name": "Unit 4 Presentation Slides",
      "url": "https://docs.google.com/presentation/d/1M-LmKHk-ZbV-5Pi3FnqdcWOGavTBBq3_kZ-kib897tw/edit?usp=sharing",
      "key": "unit_4_presentation_slides",
      "properties": {
        "type": "Slides",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "name": "Vocabulary Don't-Say-It!",
      "url": "https://docs.google.com/document/d/1CzdHQqqMf6qAreGIWrlsvTSvnfhSJ9jUCUjiVTfrxr4/edit?usp=sharing",
      "key": "vocabulary_don_t-say-it_",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "vocabulary_don_t-say-it_"
      }
    }
  ],
  "lessons_resources": [
    {
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "resource.key": "_key_u4l5_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "resource.key": "quiz_quiz_trade_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "resource.key": "u4l5_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "_key_truth_tables"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "_key_u4l10_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "around_the_world_printouts"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "truth_tables"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "u4l10_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "unit_4_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "resource.key": "vocabulary_don_t-say-it_"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Assessment Day",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "resource.key": "_key_comparing_objects"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "resource.key": "_key_u4l6_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "resource.key": "comparing_objects"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "resource.key": "object_references_manipulatives"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "resource.key": "u4l6_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "resource.key": "_key_exploring_operators"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "resource.key": "_key_u4l4_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "resource.key": "exploring_operators"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "resource.key": "u4l4_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "_key_frq_writing_2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "frq_scoring_guide_2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "frq_writing_2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "resource.key": "neighborhood_block_party_project_planning_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "resource.key": "neighborhood_block_party_project_planning_guide_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "resource.key": "neighborhood_block_party_project_planning_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "resource.key": "neighborhood_block_party_project_planning_guide_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "resource.key": "neighborhood_block_party_project_planning_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "resource.key": "neighborhood_block_party_project_planning_guide_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "resource.key": "_key_u4l7_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "resource.key": "u4l7_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "resource.key": "_key_math_class_activity_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "resource.key": "_key_u4l2_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "resource.key": "math_class_activity_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "resource.key": "u4l2_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "resource.key": "_key_u4l8_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "resource.key": "u4l8_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "resource.key": "_key_casting_exploration"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "resource.key": "_key_u4l3_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "resource.key": "casting_exploration"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "resource.key": "u4l3_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "resource.key": "_key_u4l1_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "resource.key": "u4l1_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "resource.key": "unit_4_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "resource.key": "_key_u4l9_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "resource.key": "u4l9_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "resource.key": "unit_4_presentation_slides"
      }
    }
  ],
  "scripts_resources": [

  ],
  "scripts_student_resources": [

  ],
  "vocabularies": [
    {
      "key": "application_program_interface_api_",
      "word": "Application Program Interface (API)",
      "definition": "A set of tools, definitions, and methods that can be used in a program to access features of other applications and services",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "application_program_interface_api_"
      }
    },
    {
      "key": "library",
      "word": "Library",
      "definition": "A collection of existing code that can be used in a program",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "library"
      }
    },
    {
      "key": "package",
      "word": "Package",
      "definition": "A collection of similar classes",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "package"
      }
    },
    {
      "key": "math_class",
      "word": "Math Class",
      "definition": "A final class in Java that contains methods to perform mathematical operations",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "math_class"
      }
    },
    {
      "key": "final_class",
      "word": "final Class",
      "definition": "A class that cannot be extended",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "final_class"
      }
    },
    {
      "key": "static_method",
      "word": "Static Method",
      "definition": "A method that is called by the class instead of by an instance of the class",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "static_method"
      }
    },
    {
      "key": "truncate",
      "word": "Truncate",
      "definition": "Remove everything to the right of the decimal point",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "truncate"
      }
    },
    {
      "key": "cast",
      "word": "Cast",
      "definition": "To assign a value of one type to another",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "cast"
      }
    },
    {
      "key": "widen",
      "word": "Widen",
      "definition": "Automatically cast from a smaller type to a larger type",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "widen"
      }
    },
    {
      "key": "inclusive",
      "word": "Inclusive",
      "definition": "To include every value in a range",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "inclusive"
      }
    },
    {
      "key": "relational_operator",
      "word": "Relational Operator",
      "definition": "Used to compare numeric values or arithmetic expressions",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "relational_operator"
      }
    },
    {
      "key": "alias",
      "word": "Alias",
      "definition": "A reference variable that points to the same object as another reference variable",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "alias"
      }
    },
    {
      "key": "if_else_statement",
      "word": "if/else Statement",
      "definition": "Specifies a block of code to execute when the condition is true and a block of code to execute when the condition is false",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "if_else_statement"
      }
    },
    {
      "key": "two_way_selection",
      "word": "Two-Way Selection",
      "definition": "Used when two sets of statements are needed: one to execute when the condition is true and one to execute when the condition is false",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "two_way_selection"
      }
    },
    {
      "key": "multi_selection_statement",
      "word": "Multi-Selection Statement",
      "definition": "A statement that selects a single action from three or more conditional statements based on which boolean expression is true",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "multi_selection_statement"
      }
    },
    {
      "key": "nested_if_statement",
      "word": "Nested if Statement",
      "definition": "An if statement inside an if statement",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "nested_if_statement"
      }
    },
    {
      "key": "logical_operator",
      "word": "Logical Operator",
      "definition": "An operator that returns a Boolean result",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "logical_operator"
      }
    },
    {
      "key": "compound_boolean_expression",
      "word": "Compound Boolean Expression",
      "definition": "An expression involving logical operators that evaluates to a Boolean value",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "compound_boolean_expression"
      }
    },
    {
      "key": "de_morgan_s_laws",
      "word": "De Morgan's Laws",
      "definition": "A set of rules that describe how to handle complex Boolean expressions",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "de_morgan_s_laws"
      }
    },
    {
      "key": "truth_table",
      "word": "Truth Table",
      "definition": "A table used to determine the truth values of a Boolean expression",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "truth_table"
      }
    },
    {
      "key": "game_engine",
      "word": "Game Engine",
      "definition": "The core functionality of a game",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "game_engine"
      }
    },
    {
      "key": "agile_development",
      "word": "Agile Development",
      "definition": "An iterative and collaborative software development approach involving planning and analysis, design, development, and testing before delivering a product to an end-user",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "agile_development"
      }
    }
  ],
  "lessons_vocabularies": [
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "vocabulary.key": "application_program_interface_api_"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "vocabulary.key": "library"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "vocabulary.key": "package"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "vocabulary.key": "math_class"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "vocabulary.key": "final_class"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "vocabulary.key": "static_method"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "vocabulary.key": "truncate"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "vocabulary.key": "cast"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "vocabulary.key": "widen"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "vocabulary.key": "inclusive"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "vocabulary.key": "relational_operator"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "vocabulary.key": "alias"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "vocabulary.key": "if_else_statement"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "vocabulary.key": "two_way_selection"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "vocabulary.key": "multi_selection_statement"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "vocabulary.key": "nested_if_statement"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "vocabulary.key": "logical_operator"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "vocabulary.key": "compound_boolean_expression"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "vocabulary.key": "de_morgan_s_laws"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "vocabulary.key": "truth_table"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "vocabulary.key": "game_engine"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "vocabulary.key": "agile_development"
      }
    }
  ],
  "lessons_programming_expressions": [

  ],
  "objectives": [
    {
      "key": "e2ad1bb9-716b-40bb-9007-eb5a22c6a57d",
      "properties": {
        "description": "Explain the purpose and capabilities of APIs and libraries"
      },
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "objective.key": "e2ad1bb9-716b-40bb-9007-eb5a22c6a57d"
      }
    },
    {
      "key": "c43365d9-2e37-4217-9bb2-1d4aeb0f0b32",
      "properties": {
        "description": "Add new functionality to program code by importing an API"
      },
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "objective.key": "c43365d9-2e37-4217-9bb2-1d4aeb0f0b32"
      }
    },
    {
      "key": "b0fa2360-aa3a-48e8-b984-a49f9615e1cd",
      "properties": {
        "description": "Write code using Math class methods"
      },
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "objective.key": "b0fa2360-aa3a-48e8-b984-a49f9615e1cd"
      }
    },
    {
      "key": "306363b6-59ba-4f38-89f8-5dd5744c6f95",
      "properties": {
        "description": "Define a static method"
      },
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "objective.key": "306363b6-59ba-4f38-89f8-5dd5744c6f95"
      }
    },
    {
      "key": "882b961f-10ef-4aac-97ab-72ef063c5d16",
      "properties": {
        "description": "Define a final class"
      },
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "objective.key": "882b961f-10ef-4aac-97ab-72ef063c5d16"
      }
    },
    {
      "key": "d5d319d6-2d93-4de7-8e45-fef15c361220",
      "properties": {
        "description": "Identify the need for final classes and static methods"
      },
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "objective.key": "d5d319d6-2d93-4de7-8e45-fef15c361220"
      }
    },
    {
      "key": "8b2875d6-e082-4375-ab56-6576b042dad9",
      "properties": {
        "description": "Cast between ints and doubles"
      },
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "objective.key": "8b2875d6-e082-4375-ab56-6576b042dad9"
      }
    },
    {
      "key": "3f9d9d0b-650f-49d4-a2fd-1a1db3c3b5e0",
      "properties": {
        "description": "Round doubles to the nearest int"
      },
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "objective.key": "3f9d9d0b-650f-49d4-a2fd-1a1db3c3b5e0"
      }
    },
    {
      "key": "d6338564-68f4-44a9-8d09-e75b59922442",
      "properties": {
        "description": "Use Math.random() to generate random numbers"
      },
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "objective.key": "d6338564-68f4-44a9-8d09-e75b59922442"
      }
    },
    {
      "key": "36161629-0cf6-471f-86e4-b898e7b8c7e5",
      "properties": {
        "description": "Evaluate expressions using relational operators"
      },
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "objective.key": "36161629-0cf6-471f-86e4-b898e7b8c7e5"
      }
    },
    {
      "key": "d7ace489-a22b-4435-96b9-284be5248a42",
      "properties": {
        "description": "Construct if statements using relational operators"
      },
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "objective.key": "d7ace489-a22b-4435-96b9-284be5248a42"
      }
    },
    {
      "key": "90048963-fd48-45b3-8a29-711ea8c8f7d0",
      "properties": {
        "description": "Use Math.random() to generate random numbers"
      },
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "objective.key": "90048963-fd48-45b3-8a29-711ea8c8f7d0"
      }
    },
    {
      "key": "67012d61-ec6f-4d52-8407-762bb4dc24b0",
      "properties": {
        "description": "Use Math.random() to compute probabilities"
      },
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "objective.key": "67012d61-ec6f-4d52-8407-762bb4dc24b0"
      }
    },
    {
      "key": "0daf69f0-00b2-4de3-8812-6eec29e0e57e",
      "properties": {
        "description": "Write conditional statements to execute an action based on a random number"
      },
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "objective.key": "0daf69f0-00b2-4de3-8812-6eec29e0e57e"
      }
    },
    {
      "key": "7153f575-9e97-49ea-9f50-6ef9e041cca9",
      "properties": {
        "description": "Predict the outcome of a code segment using aliased reference variables"
      },
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "objective.key": "7153f575-9e97-49ea-9f50-6ef9e041cca9"
      }
    },
    {
      "key": "84c1bad9-13ac-4ce3-9089-3550ad2f8af2",
      "properties": {
        "description": "Explain the difference between == and equals()"
      },
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "objective.key": "84c1bad9-13ac-4ce3-9089-3550ad2f8af2"
      }
    },
    {
      "key": "d0680464-66e9-4adc-bb0d-3ce9c6d39775",
      "properties": {
        "description": "Write an equals() method to compare object data for equality"
      },
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "objective.key": "d0680464-66e9-4adc-bb0d-3ce9c6d39775"
      }
    },
    {
      "key": "f95ac53b-5dad-4071-8f55-0efdb81c38c4",
      "properties": {
        "description": "Write if/else statements to implement alternate outcomes"
      },
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "objective.key": "f95ac53b-5dad-4071-8f55-0efdb81c38c4"
      }
    },
    {
      "key": "d16751aa-f780-47d0-998f-fc6ce34ed2bf",
      "properties": {
        "description": "Access elements in an array based on the outcome of a Boolean expression"
      },
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "objective.key": "d16751aa-f780-47d0-998f-fc6ce34ed2bf"
      }
    },
    {
      "key": "3c8648b9-cb6d-47ba-a7a2-6abca55bc116",
      "properties": {
        "description": "Use Math.random() to select a random element from an array"
      },
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "objective.key": "3c8648b9-cb6d-47ba-a7a2-6abca55bc116"
      }
    },
    {
      "key": "292196d7-aa61-4224-bd5c-2ca10851145b",
      "properties": {
        "description": "Use if/else statements to check the validity of a move in the Pop the Balloons game"
      },
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "objective.key": "292196d7-aa61-4224-bd5c-2ca10851145b"
      }
    },
    {
      "key": "c8e8c7d5-af97-4bf1-b8b2-b0f74c3671a1",
      "properties": {
        "description": "Write if/else-if/else statements using relational operators"
      },
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "objective.key": "c8e8c7d5-af97-4bf1-b8b2-b0f74c3671a1"
      }
    },
    {
      "key": "480e566c-4086-44e8-a4e8-fde52115d163",
      "properties": {
        "description": "Evaluate multiple conditions to determine a specific outcome"
      },
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "objective.key": "480e566c-4086-44e8-a4e8-fde52115d163"
      }
    },
    {
      "key": "3623080b-1e1a-4bb4-9b3d-9f8609ae151e",
      "properties": {
        "description": "Access elements in an array based on the outcome of a Boolean expression"
      },
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "objective.key": "3623080b-1e1a-4bb4-9b3d-9f8609ae151e"
      }
    },
    {
      "key": "804c0c43-616b-4a43-a8ff-3b4ac29dde8e",
      "properties": {
        "description": "Construct nested if statements"
      },
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "objective.key": "804c0c43-616b-4a43-a8ff-3b4ac29dde8e"
      }
    },
    {
      "key": "fab8a281-eed5-433d-89e0-08c7f5545b3b",
      "properties": {
        "description": "Understand the effect of logical operators !(not), &&(and), and ||(or)"
      },
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "objective.key": "fab8a281-eed5-433d-89e0-08c7f5545b3b"
      }
    },
    {
      "key": "47164b20-6775-43c6-a761-d765be7b4d49",
      "properties": {
        "description": "Construct a conditional statement involving logical operators"
      },
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "objective.key": "47164b20-6775-43c6-a761-d765be7b4d49"
      }
    },
    {
      "key": "a3e45248-bc3b-473b-b4d6-51d887c5b001",
      "properties": {
        "description": "Use nested if statements and logical operators to check how many moves are left and to calculate the score of the Pop the Balloons game"
      },
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "objective.key": "a3e45248-bc3b-473b-b4d6-51d887c5b001"
      }
    },
    {
      "key": "79c09bf3-9e34-476f-b466-4c0ef53d3f20",
      "properties": {
        "description": "Construct truth tables to evaluate Boolean expressions"
      },
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "objective.key": "79c09bf3-9e34-476f-b466-4c0ef53d3f20"
      }
    },
    {
      "key": "1c5d0054-9cf6-488a-8d26-888802f64c50",
      "properties": {
        "description": "Use truth tables to prove De Morgan’s Laws"
      },
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "objective.key": "1c5d0054-9cf6-488a-8d26-888802f64c50"
      }
    },
    {
      "key": "dc621909-1306-4a64-86d2-2dae5520ecd9",
      "properties": {
        "description": "Evaluate compound Boolean expressions for equivalence"
      },
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "objective.key": "dc621909-1306-4a64-86d2-2dae5520ecd9"
      }
    },
    {
      "key": "49579e63-647d-4c97-9fcc-faf8408a3238",
      "properties": {
        "description": "Design a game engine to set up a game, check whether a move is valid, update the score, and check whether the game is over"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "objective.key": "49579e63-647d-4c97-9fcc-faf8408a3238"
      }
    },
    {
      "key": "8bd9e74e-a004-4e32-b298-d57651e47da6",
      "properties": {
        "description": "Implement conditional logic to make decisions based on user interaction"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 1",
        "objective.key": "8bd9e74e-a004-4e32-b298-d57651e47da6"
      }
    },
    {
      "key": "b6c806d6-4f38-4744-8883-6046f19bed4f",
      "properties": {
        "description": "Develop a game engine consisting of the core functions for a game"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "objective.key": "b6c806d6-4f38-4744-8883-6046f19bed4f"
      }
    },
    {
      "key": "a01d3bbb-f31b-4f0a-8296-7612eccc96fc",
      "properties": {
        "description": "Write methods that incorporate conditional logic and user choice"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 2",
        "objective.key": "a01d3bbb-f31b-4f0a-8296-7612eccc96fc"
      }
    },
    {
      "key": "236aebbf-53e6-4223-b636-d06a9e83fb2b",
      "properties": {
        "description": "Develop a game engine consisting of the core functions for a game"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "objective.key": "236aebbf-53e6-4223-b636-d06a9e83fb2b"
      }
    },
    {
      "key": "aa023430-f4d5-41e8-addd-8936c10577e9",
      "properties": {
        "description": "Write methods that incorporate conditional logic and user choice"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "objective.key": "aa023430-f4d5-41e8-addd-8936c10577e9"
      }
    },
    {
      "key": "3e8f7964-5aa6-4b9f-b569-d748bba3e81d",
      "properties": {
        "description": "Reflect on the development process"
      },
      "seeding_key": {
        "lesson.key": "Neighborhood Block Party Project - Day 3",
        "objective.key": "3e8f7964-5aa6-4b9f-b569-d748bba3e81d"
      }
    },
    {
      "key": "68c3d081-43e0-46e8-83fa-2f5d2f4ddf7c",
      "properties": {
        "description": "Implement methods based on a given set of specifications"
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "objective.key": "68c3d081-43e0-46e8-83fa-2f5d2f4ddf7c"
      }
    },
    {
      "key": "c9d358aa-ea62-46da-8c4d-79eaa74c71ba",
      "properties": {
        "description": "Plan an algorithm using pseudocode"
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "objective.key": "c9d358aa-ea62-46da-8c4d-79eaa74c71ba"
      }
    },
    {
      "key": "2c67da78-ed75-4a44-b9fd-e2716b3fa893",
      "properties": {
        "description": "Translate pseudocode into Java"
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "objective.key": "2c67da78-ed75-4a44-b9fd-e2716b3fa893"
      }
    }
  ],
  "lessons_standards": [
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.D.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.E.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.6"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.7"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.8"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Existing Libraries to Add Capabilities",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.9"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.D.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.D.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.D.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.H.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.G.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.G.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.G.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.G.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Solving Problems with the Math Class",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.G.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.C.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.C.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.C.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.C.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Treating Data as a Different Types",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.D.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.E.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.E.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Values to Make Decisions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.E.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.D.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Randomness to a Program",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.D.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.H.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.H.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.H.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.H.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.D.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.E.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Comparing Object References and Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.E.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Providing an Alternate Path of Execution",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-2.A.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Testing Multiple Conditions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-2.A.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.F.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.F.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Logical Operators",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-2.B.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.G.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.G.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Applying De Morgan's Laws to Boolean Expressions",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.G.3"
      }
    }
  ],
  "lessons_opportunity_standards": [

  ]
}