/**
 * Dynamic header generation and event bindings for header actions.
 */

if (!window.dashboard) {
  window.dashboard = {};
}

/**
 * @param stageData{{
 *   script_id: number,
 *   script_name: number,
 *   script_stages: id,
 *   title: string,
 *   finishLink: string,
 *   finishText: string,
 *   trophies: Object,
 *   levels: Array.<{
 *     id: number,
 *     position: number,
 *     title: string,
 *     kind: string
 *   }>
 * }}
 */
dashboard.buildHeader = function (stageData, progressData, currentLevelId) {
  stageData = stageData || {};
  progressData = progressData || {};
  levelProgress = progressData.levels || {};

  $('.header_text').first().text(stageData.title);
  if (stageData.finishLink) {
    $('.header_finished_link').show().append($('<a>').attr('href', stageData.finishLink).text(stageData.finishText));
  }
  if (stageData.script_stages > 1) {
    $('.header_popup_link').show();
    $('.freeplay_links').show();
  }
  if (progressData.trophies) {
    $('.header_trophy_link').show();
    $('.header_trophy_link .current_trophies').text(progressData.trophies.current);
    $('.header_trophy_link .max_trophies').text(progressData.trophies.of + ' ' + progressData.trophies.max);
  }
  if (progressData.linesOfCodeText) {
    $('.header_popup .header_text').text(progressData.linesOfCodeText);
  }
  var progressContainer = $('.progress_container');
  stageData.levels.forEach(function(level, index, levels) {
    var status = (levelProgress[level.id] || {}).status || 'not_tried';
    var defaultClass = level.kind == 'assessment' ? 'puzzle_outer_assessment' : 'puzzle_outer_level';
    var href = "/s/" + stageData.script_name + "/stage/" + stageData.position + "/puzzle/" + level.position;
    var link = $('<a>').attr('href', href).addClass('level_link').addClass(status).text(level.title);
    if (level.kind == 'unplugged') {
      link.addClass('unplugged_level');
    }
    var div = $('<div>').addClass(level.id === currentLevelId ? 'puzzle_outer_current' : defaultClass).append(link);
    if (index === levels.length - 1) {
      div.addClass('last');
    }
    progressContainer.append(div).append('\n');
  });
  $('.level_free_play').qtip({
    content: {
      attr: 'title'
    },
    position: {
      my: 'top center',
      at: 'bottom center'
    }
  });

  function showHeaderPopup(target) {
    $('.header_popup').show();
    $('.header_popup_link_glyph').html('&#x25B2;');
    $('.header_popup_link_text').text('<%= I18n.t(:less) %>');
    $(document).on('click', hideHeaderPopup);
    lazyLoadPopup($(target).closest('.header_trophy_link').length > 0);
  }
  function hideHeaderPopup() {
    $('.header_popup').hide();
    $('.header_popup_link_glyph').html('&#x25BC;');
    $('.header_popup_link_text').text('<%= I18n.t(:more) %>');
    $(document).off('click', hideHeaderPopup);
  }
  $('.header_popup_link, .header_trophy_link').click(function (e) {
    e.stopPropagation();
    $('.header_popup').is(':visible') ? hideHeaderPopup() : showHeaderPopup(e.target);
  });
  $('.header_popup').click(function (e) {
    e.stopPropagation(); // Clicks inside the popup shouldn't close it
  });

  var popupLoaded = false;
  function lazyLoadPopup(trophiesClicked) {
    if (!popupLoaded) {
      popupLoaded = true;
      $.ajax({
        url: "/popup/stats",
        data: {
          script_id: stageData.script_id,
          script_level_id: currentLevelId
        }, success: function (result) {
          $('.header_popup_body').html(result);
          if (trophiesClicked) {
            jumpToTrophies();
          }
        }
      });
    } else if (trophiesClicked) {
      jumpToTrophies();
    }
  }
  function jumpToTrophies() {
    window.scrollTo(0, +$('#trophies').offset().top);
  }
};

dashboard.showProjectHeader = function () {
  function projectNameShow() {
    $('.project_name').replaceWith($('<div class="project_name header_text">').text(dashboard.currentApp.name));
    dashboard.updateTimestamp();
    $('.project_save').replaceWith($('<div class="project_edit header_button">').text('<%= I18n.t('project.rename') %>'));
  }

  function projectNameEdit() {
    $('.project_updated_at').hide();
    $('.project_name').replaceWith($('<input type="text" class="project_name header_input" maxlength="100">').val(dashboard.currentApp.name));
    $('.project_edit').replaceWith($('<div class="project_save header_button">').text('<%= I18n.t('project.save') %>'));
  }

  var moreButton = '<%= I18n.t('project.more') %> '
      + '<span class="project_more_glyph">&#x25BC;</span>'
      + '<div class="project_more_popup" style="position: absolute;">'
      + '<a href="#" class="project_delete"><%= I18n.t('project.delete') %></a><br>'
      + '<a href="#" class="project_new"><%= I18n.t('project.new') %></a></div>';

  var nameAndUpdated = $('<div class="project_name_wrapper header_text">') // content will be added by projectNameShow
      .append($('<div class="project_name header_text">'))
      .append($('<div class="project_updated_at header_text">'));

  $('.project_info').append(nameAndUpdated)
      .append($('<div class="project_edit header_button">').text('<%= I18n.t('project.rename') %>'))
      .append($('<div class="project_share header_button">').text('<%= I18n.t('project.share') %>'))
      .append($('<div class="project_more header_button" style="position: relative;">').html(moreButton));

  projectNameShow();
  $('.freeplay_links').empty().before($('<div class="project_list header_button">').text('<%= I18n.t('project.my_projects') %>'));

  $(document).on('click', '.project_edit', projectNameEdit);

  $(document).on('input', '.project_name', function () {
    if ($(this).val().trim().length === 0) {
      $('.project_save').attr('disabled', true);
    } else {
      $('.project_save').removeAttr('disabled');
    }
  });

  $(document).on('click', '.project_save', function () {
    if ($(this).attr('disabled')) {
      return;
    }
    $(this).attr('disabled', true);
    dashboard.currentApp.name = $('.project_name').val().trim().substr(0, 100);
    dashboard.saveProject(function () {
      projectNameShow();
    });
  });

  $('.project_share').click(function () {
    dashboard.saveProject(function () {
      var dialog = new Dialog({body: '<div id="project-share" class="modal-content">'
          + '<p class="dialog-title"><%= I18n.t('project.share_title') %></p>'
          + '<p><%= I18n.t('project.share_copy_link') %></p>'
          + '<div><input type="text" id="sharing-input" value="' + location.href.split(/\/edit$/)[0] + '" style="cursor: copy; width: 400px;" readonly></div>'
          + '<button id="continue-button"><%= I18n.t('project.ok') %></button></div>'
      });
      $('#sharing-input').click(function () {
        this.select();
      })
      dialog.show();
      $('#project-share #continue-button').click(function() {
        dialog.hide();
      });
    });
  });

  var $projectMorePopup = $('.project_more_popup');
  function hideProjectMore() {
    $projectMorePopup.hide();
    $('.project_more_glyph').html('&#x25BC;');
    $(document).off('click', hideProjectMore);
  }
  $('.project_more').click(function (e) {
    if ($projectMorePopup.is(':hidden')) {
      e.stopPropagation();
      $projectMorePopup.show();
      $('.project_more_glyph').html('&#x25B2;');
      $(document).on('click', hideProjectMore);
    }
  });
  $projectMorePopup.click(function (e) {
    e.stopPropagation(); // Clicks inside the popup shouldn't close it.
  });

  $('.project_delete').click(function (e) {
    e.preventDefault(); // Don't change the hash.
    var dialog = new Dialog({body: '<div id="confirm-delete" class="modal-content">'
        + '<p class="dialog-title"><%= I18n.t('project.delete_confirm_title') %></p>'
        + "<p><%= I18n.t('project.delete_confirm_text') %></p>"
        + '<button id="again-button"><%= I18n.t('project.cancel') %></button><button id="continue-button" style="float: right"><%= I18n.t('project.delete') %></button></div>'
    });
    dialog.show();
    $('#confirm-delete #continue-button').click(function () {
      dashboard.deleteProject(function () {
        location.href = location.pathname;
      });
    });
    $('#confirm-delete #again-button').click(function () {
      dialog.hide();
    });
  });

  $('.project_new').click(function (e) {
    e.preventDefault(); // Don't change the hash.
    // Save the project if one exists (i.e. isn't just the default one) then navigate.
    if (dashboard.currentApp.id) {
      dashboard.saveProject(function () {
        location.href = location.pathname;
      });
    } else {
      location.href = location.pathname;
    }
  });

  $(document).on('click', '.project_list', function () {
    location.href = '/p'; <%# TODO: Can't call project_list_path because it's not in scope %>
  });
};
