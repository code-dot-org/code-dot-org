require 'cdo/aws/s3'
require 'image_lib'
require 'digest/md5'

# A bitmap image generated by a specific LevelSource
class LevelSourceImage < ActiveRecord::Base
  belongs_to :level_source
  
  def save_to_s3(image)
    return false if CDO.disable_s3_image_uploads

    return false if image.blank?

    # also create the framed image
    if level_source.level.skin == 'anna' || level_source.level.skin == 'elsa'
      image_filename = "app/assets/images/blank_sharing_drawing_#{level_source.level.skin}.png"
    else
      image_filename = "app/assets/images/blank_sharing_drawing.png"
    end

    begin
      framed_image = ImageLib::overlay_image(:background_url => Rails.root.join(image_filename),
                                             :foreground_blob => image).to_blob
    rescue Magick::ImageMagickError # something wrong with the image
      return false
    end

    # upload both the original and framed images
    unless AWS::S3.upload_to_bucket('cdo-art', s3_filename, image, no_random: true)
      return false
    end

    unless AWS::S3.upload_to_bucket('cdo-art', s3_framed_filename, framed_image, no_random: true)
      return false
    end

    # remember that this image is in S3 (for images that are not in S3, image is the actual image blob)
    self.image = 'S3'
    self.save
  end

  def s3?
    image == 'S3'
  end

  def LevelSourceImage.hashify_filename(plain)
    [Digest::MD5.hexdigest(plain), plain].join('=')
  end

  def s3_filename
    LevelSourceImage.hashify_filename "#{Rails.env}/#{level_source.id}.png"
  end

  def s3_framed_filename
    LevelSourceImage.hashify_filename "#{Rails.env}/#{level_source.id}_framed.png"
  end

  # TODO: make this url work for https
  #  S3_URL = "http://cdo-art.s3-website-us-east-1.amazonaws.com/"
  # below is for cloudfront
  S3_URL = "http://d3p74s6bwmy6t9.cloudfront.net/"

  def s3_url
    return "http://code.org/images/logo.png" if CDO.disable_s3_image_uploads
    S3_URL + s3_filename
  end

  def s3_framed_url
    return "http://code.org/images/logo.png" if CDO.disable_s3_image_uploads
    S3_URL + s3_framed_filename
  end
end
