- @page_title = t('activerecord.attributes.user.edit_header')

%h2= @page_title

= form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => { :method => :put }) do |f|
  = devise_error_messages!
  - if f.object.can_edit_email?
    = f.hidden_field :hashed_email
  %div
  .field
    = f.label :name
    - if !f.object.teacher_managed_account?
      = f.text_field :name, autofocus: true, maxlength: 255
    - else
      = f.object.name
  - if !f.object.teacher_managed_account?
    .field
      = f.label :email
      - if f.object.can_edit_email?
        = f.email_field :email, placeholder: '***encrypted***', autocomplete: 'off', maxlength: 255
      -else
        = f.object.email.present? ? f.object.email : '***encrypted***'
  - if resource.username.present?
    .field
      = f.label :username
      = f.object.username
  - if f.object.can_edit_password?
    %div
      = f.label :password, maxlength: 255
      %em= t('user.new_password_hint')
      %br/
      = f.password_field :password, autocomplete: 'off', maxlength: 255
    %div
      = f.label :password_confirmation
      = f.password_field :password_confirmation, autocomplete: 'off', maxlength: 255
  - else
    .field
      = f.label :password
      - if f.object.oauth?
        = t('user.no_password_because_oauth')
      - else
        = t('user.no_password_because_sponsored')
  - if f.object.encrypted_password.present?
    %div
      = f.label :current_password
      %em= t('user.current_password_hint')
      %br/
      = f.password_field :current_password, maxlength: 255
  - if !resource.teacher?
    .field
      = f.label t('signup_form.gender')
      = f.select :gender, gender_options
    .field
      = f.label t('signup_form.age')
      = f.select :age, User::AGE_DROPDOWN_OPTIONS
  - if resource.teacher?
    .field
      = f.label :school
      = f.text_field :school, class: 'input-xlarge', maxlength: 255
    .field
      = f.label :full_address
      = f.text_area :full_address, class: 'input-xxlarge', rows: 4, maxlength: 1024
    = f.hidden_field :age, value: "21"
  -#
    Don't allow editing user type unless we can also edit email, because
    changing from a student (encrypted email) to a teacher (plaintext email)
    requires entering an email address.
    Don't allow editing user type for teachers with sections, as our validations
    require sections to be owned by teachers.
  - if f.object.can_edit_email? && (f.object.student? || Section.where(user_id: f.object.id).empty?)
    .field
      = f.label t('signup_form.user_type')
      = f.select :user_type, user_type_options

  %div= f.submit t('crud.update'), class: 'btn btn-default'
- if !current_user.teacher_managed_account?
  %h3= t('user.delete')
  %p
    = t('user.delete_text')
    - if current_user.teacher?
      = t('user.delete_text_teacher_note')
    - data_hash = { confirm: t('user.delete_confirm') }
    = button_to t('user.delete'), registration_path(resource_name), data: data_hash, method: :delete, class: 'btn btn-danger'
= link_to t('crud.back'), :back

:javascript
  $( ".edit_user" ).on("submit", function(e){
    if ($('#user_email').length) {
      window.dashboard.hashEmail({ email_selector: '#user_email',
        hashed_email_selector: '#user_hashed_email',
        age_selector: '#user_age'});
    }
  });
