- content_for :og do
  = tag 'meta', property: 'og:title', content: t('share.title')
  = tag 'meta', property: 'og:image', content: CDO.studio_url(CDO.shared_image_url('share/girl_cropped.jpg'), 'https:')
  = tag 'meta', property: 'og:description', content: t('share.description')

- if current_user && current_user.teacher? && !current_user.accepted_latest_terms?
  = render partial: 'layouts/terms_interstitial'
- if (current_user && current_user.show_race_interstitial?) || @force_race_interstitial
  = render partial: 'layouts/race_interstitial'
- if (current_user && current_user.show_school_info_interstitial?) || @force_school_info_interstitial
  = render partial: 'layouts/school_info_interstitial', locals: {show_header: false, user: current_user, form_name: "user[school_info_attributes]"}

= render partial: 'home/survey_nps' if show_nps_survey? SurveyResult::NET_PROMOTER_SCORE_2017
= render partial: 'home/survey_diversity' if show_diversity_survey? SurveyResult::DIVERSITY_2017

- if request.cookies['pm'] == 'new_header'

  - if current_user
    = render partial: 'home/homepage'

  - else
    #landingpage
      = render partial: 'home/studio_banner'
      = render partial: 'home/all_courses'

- else
  #landingpage
    .row
      .span12
        - unless current_user
          .row
            .sign_in.show_only_on_mobile
              %a{href: CDO.studio_url('/users/sign_in')}
                %button.primary= t('nav.user.signin')
          = render partial: 'home/studio_banner'

    .clear

    - if current_user
      - if current_user.teacher?
        #teacher_announcement
          - unless current_user.accepted_latest_terms?
            = render template: 'api/accept_terms_reminder'
          = render template: 'api/teacher_announcement'

      #user_hero
        = render template: 'api/user_hero'
      - if Gatekeeper.allows('logged_in_studio_homepage', default: true)
        - current_user.in_progress_and_completed_scripts.each_slice(2) do |course_pair|
          .row
            - course_pair.each do |user_script|
              = render partial: 'shared/course_progress_block', locals: { script: user_script.script }

    = render partial: 'home/all_courses'
    = render partial: 'home/gallery_preview'

    - if current_user && !current_user.teacher? && Gatekeeper.allows('logged_in_studio_homepage', default: true)
      .row#edit_teachers
        .span12
          .padtopbottom
            - current_user_sections_as_student = current_user.sections_as_student
            - if current_user_sections_as_student.empty?
              = form_for([Follower.new], html: {class: 'form-inline'}) do |f|
                %label= t('add_teacher_form.code.label')
                = text_field_tag :section_code, nil, class: 'form-control', placeholder: t('add_teacher_form.code.placeholder'), :required => true
                = hidden_field_tag :redirect, root_path
                %button.btn.btn-default{type: 'submit', style: 'margin-top:0'}= t('add_teacher_form.submit')

            - else
              = t('section.your_section', count: current_user_sections_as_student.length)
              - if current_user.encrypted_password?
                = raw current_user_sections_as_student.map {|section| t('section.code_with_teacher', section_code: section.code, teacher_name: section.teacher.try(:name) || I18n.t('user.deleted_user')) + ' ' + link_to(t('section.remove'), remove_follower_path(section_code: section[:code], student_user_id: current_user.id), confirm: t('section.confirm.remove'), method: :post)}.join(', ')
              - else
                = raw current_user_sections_as_student.map {|section| t('section.code_with_teacher', section_code: section.code, teacher_name: section.teacher.try(:name) || I18n.t('user.deleted_user'))}.join(', ')
    - if current_user
      %br/
      %br/
      %br/
      = render partial: 'home/projects'
      - if Gatekeeper.allows('logged_in_studio_homepage', default: true) && !@gallery_activities.empty?
        = render partial: 'home/gallery'

%br/
%br/
%br/

= render partial: 'home/admin'
= render partial: 'home/levelbuilder'

:javascript
  $("#section_code").placeholder();

:javascript
  $(document).ready(function() {

    // Set up gallery pagination.
    $('#gallery').on('click', '.pagination a', function() {
        $.ajax({url: $(this).attr('href'),
                data: { },
                success: function(result) {
                  $('#gallery').animate({opacity: '25%'},
                    500,
                    function() {
                      $('#gallery').html(result);
                    });
                }
        });
        return false;
    });

    // Show teacher announcements for US or non-US depending on location.
    $.getJSON( "/v2/client-location", function (data) {
      country_code = data['country_code'];
      if (country_code === 'US' || country_code === 'RD') {
        $('#us-announcement').show();
      } else {
        $('#non-us-announcement').show();
      }
    });
    $(".track-link").each(function () {
      $(this).click(function () {
        trackEvent('teacher_announcement','click', $(this).data('id'));
      });
    });

  });
