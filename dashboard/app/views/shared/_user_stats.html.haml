- script = @script || (user && user.primary_script) || Script.twenty_hour_script
- script_levels = user ? user.levels_from_script(script) : script.script_levels
-# concept_progress = user ? user.concept_progress : nil

.user-stats-block
  - levels = script_levels.group_by(&:stage_or_game)
  - levels.each_pair do |stage_or_game, sl_group|
    - should_show_lesson_plan = script.has_lesson_plan? && current_user && current_user.teacher?
    .game-group
      .stage
        %span
          = stage_title(script, stage_or_game)
        - if should_show_lesson_plan
          .stage-lesson-plan-link
            = link_to t('view_lesson_plan'), lesson_plan_html_url(stage_or_game)

      .games
        - sl_group = sl_group.sort_by {|sl| sl.stage_or_game_position}
        - sl_group.each do |sl|
          .level
            - css_class, link = level_info(user, sl)
            - if params[:script_level_id] && params[:script_level_id] == sl.level_id.to_s
              - puzzle_outer_class = 'puzzle_outer_current'
            - elsif sl.assessment
              - puzzle_outer_class = 'puzzle_outer_assessment'
            - else
              - puzzle_outer_class = 'puzzle_outer_level'
            %span{class: puzzle_outer_class}
              %a.level_link{ href: link, class: css_class}
                - unplugged = sl.level.unplugged?
                - if unplugged
                  %span.puzzle-named
                    =sl.level_display_text
                - elsif css_class == 'passed'
                  = check_mark_html
                - elsif css_class == 'perfect'
                  = check_mark_html
                - else 
                  %span.puzzle-number
                    =sl.level_display_text
  = render partial: 'shared/user_stats_key'
-#-if script.trophies?
-#  %div{style:"clear:both"}
-#  #trophies
-#    =render partial: 'shared/concept_trophy_block', locals: { concept_progress: concept_progress, user: user, added_style: 'padding:10px;' }



