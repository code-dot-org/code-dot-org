:css
  #hoc_features input[type=radio] { display: block; margin: 10px; }
  #hoc_features td {vertical-align: top}
  #hoc_features h3 {margin: 0px; padding: 0px; font-family: Arial; font-weight: normal}
  #hoc_features h3.selected {margin: 0px; padding: 0px; font-weight: bold}

  #hoc_features tr.normal:hover {
    background-color: #f5fff5
  }
  #hoc_features tr.scale:hover {
    background-color: #fffff5
  }
  #hoc_features tr.emergency:hover {
    background-color: #fff5f5
  }
  #hoc_features .heading {
    text-align: left;
  }
  .true_flag {
    font-size: 150%;
    color: green
  }
  .false_flag {
    font-size: 150%;
    color: red
  }
  #feature_grid {
    margin-top: 20px;
  }
  #feature_grid table, #feature_grid tr, #feature_grid td {
    border-collapse: collapse;
    border: solid 1px silver;
    text-align: center;
  }
  #feature_grid td {
    min-width: 6em;
  }
  #feature_grid tr:nth-child(odd) {
    background-color: #eee;
  }

%h1 Tutorial feature mode

%div#hoc_features

  = form_tag(action: 'update') do
    %table{cellpadding: '4'}
      - FeatureModeManager::MODES.each do |mode|
        %tr{class: mode}
          %td
            = radio_button_tag 'mode', mode, mode == @mode, {id: mode,
                onclick: "$('#submit').prop('disabled', false)"}
          %td
            %label{for: mode}
              %h3{class: @mode == mode ? 'selected' : ''}
                = mode.capitalize
              - case mode
                - when 'normal'
                  %p Enable all features on all tutorials.
                - when 'scale'
                  %p Save progress only on low-scale or sharable tutorial levels.
                  %p Disable puzzle rating and hints for all tutorials.
                  %p Sampled hoc_activity logging (10%).
                  %p Extend cache lifetimes for HOC pages.
                - when 'emergency'
                  %p Same as scale, plus all progress tracking and sharing disabled.
                - else
                  raise "Unexpected mode #{mode}; view needs to be updated."
      %tr
        %td
        %td
          = submit_tag('Update', :id => 'submit', :disabled => 'true')

      - unless @hide_feature_grid
        %tr
          %td
          %td
            %div#feature_grid
              %table{border: 1, cellpadding: 5}
                %tr
                  %td
                  %td
                    DEFAULT
                  - for script_name in Gatekeeper.script_names
                    %td
                      = script_name
                - for feature in Gatekeeper.feature_names
                  %tr
                    %td.heading
                      = feature
                    %td
                      = boolean_checkmark Gatekeeper.allows(feature)
                    - for script in Gatekeeper.script_names
                      %td
                        = boolean_checkmark Gatekeeper.allows(feature, where: {script_name: script})
