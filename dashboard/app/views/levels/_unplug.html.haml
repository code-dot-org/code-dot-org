- unplugged = @level.type == 'Unplugged' ? @level.name : @game.name
- video_key = @level.video_key || try_t("data.unplugged.#{unplugged}.video")
- pdfs = try_t("data.unplugged.#{unplugged}.pdfs")
- has_pegasus_lesson_plan = @script_level && @script_level.script.has_lesson_plan?
- has_pegasus_lesson_pdf = @script_level && @script_level.script.has_lesson_pdf?
- video =  video_key ? Video.find_by_key(video_key) : nil
- page_width = 800
- is_student = current_user && current_user.student?
- show_lesson_plans = !is_student
- no_lesson_plans = !pdfs && !has_pegasus_lesson_plan

= stylesheet_link_tag '/blockly/video-js/video-js', media: 'all'

.unplugged
  %h1 #{try_t("data.unplugged.#{unplugged}.title")}

  %p #{try_t("data.unplugged.#{unplugged}.desc")}

  .video-section
    %a.btn.btn-primary.next-stage
      = t('next_stage')

    - if video && video.download
      %a.video-download.btn.pull-right{href: video.download}
        = t('video.download')

    - if show_lesson_plans
      - if pdfs
        - pdfs.each_with_index do |pdf, i|
          %a.btn.pull-right.pdf-button{href: asset_url('/unplugged/' + pdf + '.pdf'),
                                   target: '_blank'}
            = t('download_pdf', :pdf => i + 1)
      - elsif no_lesson_plans
        %a.btn.pull-right.pdf-button{disabled: 'disabled'}
          = t('download_coming_soon')

    - if video
      .clear
      .video-container

  .clear

  - if show_lesson_plans && has_pegasus_lesson_plan
    .lesson-plan
      %h2
        = t('lesson_plan')
      %a.btn.pdf-button{href: @script_level.stage.lesson_plan_html_url, target: '_blank'}
        = t('view_lesson_plan')
      - if has_pegasus_lesson_pdf
        %a.btn.pdf-button{href: @script_level.stage.lesson_plan_pdf_url, target: '_blank'}
          = t('pdf_download')

:javascript
  $('a.next-stage').click(function() {
    var finishedButton = $(this);

    if (finishedButton.hasClass("disabled")) {
      return;
    }

    finishedButton.addClass("disabled");
    window.dashboard.reporting.sendReport({
      fallbackResponse: '#{@fallback_response.to_json}',
      callback: '#{@callback}',
      app: 'unplug',
      level: '#{escape_javascript(@level.level_num)}',
      result: true,
      pass: true,
      testResult: 100,
      onComplete: function() {
        var lastServerResponse = window.dashboard.reporting.getLastServerResponse();
        if (lastServerResponse.videoInfo) {
          showVideoDialog(lastServerResponse.videoInfo);
          finishedButton.removeClass("disabled");
        } else if (lastServerResponse.nextRedirect) {
          window.location.href = lastServerResponse.nextRedirect;
        }
      }
    });
  });

- if video
  :javascript
    var videoOptions = #{video.summarize(false).to_json};
    var videoHeight = #{page_width} / (16 / 9);
    window.dashboard.videos.createVideoWithFallback($('.video-container'), videoOptions, #{page_width}, videoHeight);
