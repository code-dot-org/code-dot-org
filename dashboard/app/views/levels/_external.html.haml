- level ||= @level
- last_attempt = @last_attempt unless local_assigns.has_key? :last_attempt
- in_level_group ||= false
- video_key = @level.video_key
- video =  video_key ? Video.current_locale.find_by_key(video_key) : nil
- use_large_video_player = level.properties["use_large_video_player"]
- small_video_page_width = 800

= stylesheet_link_tag '/blockly/video-js/video-js', media: 'all'

- content_for(:head) do
  %script{src: webpack_asset_path('js/levels/_external.js'), data: {external: { in_level_group: in_level_group }.to_json}}
  :javascript
    var options = #{level.properties['options'].to_json}

.external
  - postcontent = capture_haml do
    - unless in_level_group || @level.has_submit_button?
      - if @script.try(:professional_learning_course?) && @script_level
        = link_to @script_level.end_of_stage? ? t('done_with_module') : t('next_resource'), @script_level.next_level_or_redirect_path_for_user(current_user), class: 'btn btn-large pull-right btn-primary submitButton'
      - elsif !(video && use_large_video_player)
        %a.btn.btn-large.btn-primary.next-stage.submitButton.pull-right= t('continue')

  = render partial: 'levels/content', locals: {app: 'external', data: level.properties, content_class: level.properties['options'].try(:[], 'css'), postcontent: postcontent, source_level: level}
  = render partial: 'levels/teacher_markdown', locals: {data: level.properties}

- if in_level_group
  -# This partial will take care of milestone posts in the contexts of levelgroups,
  -# otherwise it's handled by external.js
  = render partial: 'levels/dialog', locals: {app: 'external'}

- if video && use_large_video_player
  .clear
  .video-container.external-video-container
  %a.btn.btn-large.btn-primary.next-stage.submitButton.pull-right= t('continue')

.clear

- if video
  :javascript
    var videoOptions = #{video.summarize(false).to_json};
    var videoHeight = #{small_video_page_width} / (16 / 9);

    window.dashboard.videos.createVideoWithFallback($('.video-container'), videoOptions, #{small_video_page_width}, videoHeight);
