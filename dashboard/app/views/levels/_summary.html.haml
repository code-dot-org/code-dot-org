:ruby
  level ||= if @level.contained_levels.empty?
    @level
  else
    @level.contained_levels.first
  end
  last_attempt = @last_attempt unless local_assigns.has_key? :last_attempt
  left_align = local_assigns[:left_align]
  responses = UserLevel.where(level: level, user: @section&.students)
    .map do |response|
      {
        user_id: response.user_id,
        text: response.level_source.data,
      }
    end

  teacher_markdown = if level.respond_to?(:solution) && level.solution.present? && Policies::InlineAnswer.visible_for_script_level?(current_user, @script_level)
    level.solution
  end

  js_data = {
    level: {
      properties: level.properties,
      height: level.respond_to?(:height) ? level.height : nil,
      type: level.type,
      id: level.id,
    },
    last_attempt: last_attempt,
    left_align: left_align,
    responses: responses,
    teacher_markdown: teacher_markdown,
  }


#check-for-understanding

- content_for(:head) do
  %script{src: webpack_asset_path('js/levels/_summary.js'), data: {summary: js_data.to_json}}
