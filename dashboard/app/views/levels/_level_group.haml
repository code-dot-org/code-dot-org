- app = 'level_group'
- data = @level.properties

- content_for(:head) do
  =javascript_include_tag 'js/levels/levelGroup'

:javascript
  window.levelData = #{data.to_json};

= render partial: 'levels/common_audio'

-#
  If we are looking at the level independent of a script, then let's just
  show all pages of the LevelGroup at once.  Otherwise we'll show the actual
  page.  The controller takes care of that for us.

- current_page = params[:puzzle_page] || 1

- @pages.each do |page|

  - unless data["title"].blank?
    %h2= t('heading_x_of_y', heading: data["title"], x: page.page_number, y: @level.pages.length)
    %br/

  - parsed = JSON.parse(@last_attempt || '{}')
  - page.levels.each_with_index do |level, index|

    -# Show any text from an external level.

    - if data["texts"]
      - data["texts"].select {|text| text["index"] == page.offset + index}.each do |text_level_info|
        - text_level = Level.find_by_name(text_level_info["level_name"])
        = render partial: 'levels/external', locals: {in_level_group: true, level: text_level}

    -# Embed the multi/match/free_response level.

    - last_attempt = parsed[level.id.to_s].try(:[], 'result')
    - level_class = level.class.to_s.underscore

    .level-group-number= "#{page.offset + index + 1}. "
    .level-group-content
      - if level_class == "multi"
        -# For students (or teachers doing PD), mark all answers incorrect, so we don't give anything away.
        - unless current_user.try(:authorized_teacher?) && !@script.try(:pd?)
          - level.properties['answers'].each { |answer| answer['correct'] = false }
        = render partial: 'levels/single_multi', locals: {standalone: false, level: level, last_attempt: last_attempt, tight_layout: true}
      - elsif level_class == "text_match"
        -# For students (or teachers doing PD), clear out all answers.
        - unless current_user.try(:authorized_teacher?) && !@script.try(:pd?)
          - level.properties['answers'] = nil
        = render partial: 'levels/single_text_match', locals: {standalone: false, level: level, last_attempt: last_attempt }
      - elsif level_class == "free_response"
        = render partial: 'levels/free_response', locals: {in_level_group: true, level: level, last_attempt: last_attempt}

  - unless @script_level.nil?
    = render partial: 'levels/dialog', locals: {app: app, data: data, previous_button: page.page_number > 1, next_button: page.page_number < @total_page_count}

- unless @script_level.nil?
  :javascript
    var levelCount = #{@total_level_count};
    var page = #{current_page || -1};

    var fallbackResponse = #{@fallback_response.to_json};
    var callback = "#{@callback}";
    var app = "#{app}";
    var level = appOptions.levelPosition;

    var lastAttempt = #{@last_attempt || {}};

    $(document).ready(function() {
      initLevelGroup(
        levelCount,
        page,
        fallbackResponse,
        callback,
        app,
        level,
        lastAttempt
      );
    });
