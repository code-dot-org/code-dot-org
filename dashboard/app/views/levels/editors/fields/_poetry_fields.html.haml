%h1.control-legend{data: {toggle: "collapse", target: "#poetry_fields"}}
  Poetry Fields

#poetry_fields
  .field
    = f.label :standalone_app_name, 'Level Subtype'
    %p Poetry HOC levels have a poem dropdown above the playspace and auto-animate the poem.
    - if local_assigns[:warning]
      %p= "WARNING: #{warning}"
    = f.select :standalone_app_name, options_for_select(@level.class.standalone_app_names, @level.standalone_app_name), {}, onchange: 'toggleFields(this.value);'

  #defaultPoem{class: ('collapse' if @level.standalone_app_name == 'poetry')}
    = f.label :default_poem, 'Default Poem'
    = f.select :default_poem, options_for_select(@level.class.poems_for_subtype(@level.standalone_app_name), @level.default_poem)


  #dropdownPoems{class: ('collapse' if @level.standalone_app_name == 'poetry')}
    = f.label :dropdown_poems, 'Available Poems'
    %p If you would like to customize the available poems in the level, select poems here. Otherwise, all poems will be available.
    %p
      Select
      %a.select_all{href: '#'} all
      \/
      %a.select_none{href: '#'} none
      (shift-click or cmd-click to select multiple).
    = f.select :dropdown_poems, (@level.class.poems_for_subtype(@level.standalone_app_name)), {}, {multiple: true}

:javascript
  function toggleFields(val) {
    const defaultPoem = document.getElementById('defaultPoem');
    if (val.toLowerCase() === 'poetry_hoc') {
      defaultPoem.classList.remove('collapse');
    } else {
      defaultPoem.classList.add('collapse');
    }
  }
