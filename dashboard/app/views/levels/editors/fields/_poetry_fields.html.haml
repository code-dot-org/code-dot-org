%h1.control-legend{data: {toggle: "collapse", target: "#poetry_fields"}}
  Poetry Fields

#poetry_fields
  .field
    = f.label :standalone_app_name, 'Level Subtype'
    %p Poetry HOC and Time Capsule levels have a poem dropdown above the playspace and auto-animate the poem.
    - if local_assigns[:warning]
      %p= "WARNING: #{warning}"
    = f.select :standalone_app_name, options_for_select(@level.class.standalone_app_names, @level.standalone_app_name), {}, onchange: 'toggleFields(this.value);'

  #defaultPoemHoc{class: ('collapse' if @level.standalone_app_name != 'poetry_hoc')}
    = f.label :default_poem, 'Default Poem'
    = f.select :default_poem, options_for_select(@level.class.hoc_poems, @level.default_poem)

  #defaultPoemTimeCapsule{class: ('collapse' if @level.standalone_app_name != 'time_capsule')}
    = f.label :default_poem, 'Default Poem'
    = f.select :default_poem, options_for_select(@level.class.time_capsule_poems, @level.default_poem)

:javascript
  function toggleFields(val) {
    const defaultPoemHoc = document.getElementById('defaultPoemHoc');
    const defaultPoemTimeCapsule = document.getElementById('defaultPoemTimeCapsule');
    if (val.toLowerCase() === 'poetry') {
      defaultPoemHoc.classList.add('collapse');
      defaultPoemTimeCapsule.classList.add('collapse');
    } else if (val.toLowerCase() === 'poetry_hoc') {
      defaultPoemTimeCapsule.classList.add('collapse');
      defaultPoemHoc.classList.remove('collapse');
    } else if (val.toLowerCase() === 'time_capsule') {
      defaultPoemTimeCapsule.classList.remove('collapse');
      defaultPoemHoc.classList.add('collapse');
    }
  }
