- content_for(:head) do
  = stylesheet_link_tag 'css/levelbuilder', media: 'all'
  = stylesheet_link_tag 'jquery.handsontable.full', media: 'all'
  = javascript_include_tag 'js/levelbuilder'
  = javascript_include_tag 'jquery.handsontable.full'

- unless @level.is_a? DSLDefined
  .field
    = f.label 'notes'
    %p
      Notes for yourself or other Levelbuilders. Viewable here and here alone.
    = f.text_area :notes, rows: 6, class: "input-block-level"

.field
  = f.label 'concepts'
  %p
    Select
    %a.select_all{href: '#'} all
    \/
    %a.select_none{href: '#'} none
    (shift-click or cmd-click to select multiple).
  = f.collection_select :concept_ids, Concept.cached, :id, :name, { :selected => @level.concept_ids }, { :multiple => true, :name => 'level[concept_ids][]', :size => Concept.cached.length }

.field
  = f.label :video_key, 'Level Video'
  %p Ask an engineer to add new videos to the videos.csv and data.en.yml files.
  = f.select :video_key, options_for_select(video_key_choices, @level.video_key), {include_blank: true}, {class: 'video-dropdown'}
  .video-preview{style: 'display: block'}

- video_infos = {}
- Video.all.each { |video| video_infos[video.key] = video.summarize(false) }

#callout_editor.field
  .json_editor
    .json_template
      .callout_space
        %label Callout
        %table
          %tr
            %td.required Element ID
            %td.required Localization Key
            %td.required Callout text
          %tr
            %td
              %input.element_id{type: 'text', placeholder: '#runButton'}
            %td
              %input.localization_key{type: 'text', placeholder: 'level_name_callout1'}
            %td{colspan: 4}
              %input.callout_text{type: 'text', placeholder: 'Text of callout', style: 'width: 100%'}
          %tr
            %td Qtip on callout
            %td Qtip points to Element
            %td Show when
            %td X distance
            %td Y distance
            %td Classes
          %tr
            %td
              %select.my
                %option{value: 'top left'} Top left
                %option{value: 'top center'} Top center
                %option{value: 'top right'} Top right
                %option{value: 'right top'} Right top
                %option{value: 'right center'} Right center
                %option{value: 'right bottom'} Right bottom
                %option{value: 'bottom right'} Bottom right
                %option{value: 'bottom center'} Bottom center
                %option{value: 'bottom left'} Bottom left
                %option{value: 'left bottom'} Left bottom
                %option{value: 'left center'} Left center
                %option{value: 'left top'} Left top
            %td
              %select.at
                %option{value: 'top left'} Top left
                %option{value: 'top center'} Top center
                %option{value: 'top right'} Top right
                %option{value: 'right top'} Right top
                %option{value: 'right center'} Right center
                %option{value: 'right bottom'} Right bottom
                %option{value: 'bottom right'} Bottom right
                %option{value: 'bottom center'} Bottom center
                %option{value: 'bottom left'} Bottom left
                %option{value: 'left bottom'} Left bottom
                %option{value: 'left center'} Left center
                %option{value: 'left top'} Left top
            %td
              %input.on{type: 'text', placeholder: 'function_editor_opened'}
            %td
              %input.x{type: 'number', style: 'width: 80px;'}
            %td
              %input.y{type: 'number', style: 'width: 80px;'}
            %td
              %input.classes{type: 'text', placeholder: 'no-tip', style: 'width: 60px;'}
        %button.remove_callout{type: 'button'}
          %i.icon-trash
        %hr
    #all_callouts_editor
    %button#add_callout{type: 'button'} Add a callout

  .field
    = f.label :callout_json
    %div{style: '-webkit-user-select: text'}
    = f.text_area :callout_json, rows: 4

- content_for :body_scripts do
  :javascript
    $(document).ready(function() {
      levelbuilder.jsonEditor("#callout_editor", {
        json_textarea: '#level_callout_json',
        add_button: '#add_callout',
        remove_button: ".remove_callout",
        value_space: ".callout_space",
        template: ".json_template",
        form_container: "#all_callouts_editor",
        wrapper: ".json_editor",
        model: {
          localization_key: "",
          callout_text: "",
          element_id: "",
          on: "",
          qtip_config: {
            style: {classes: ""},
            position: {
              my: "",
              at: "",
              adjust: {x: 0, y: 0}
            }
          }
        }
      });

      function make_selection_handler(flag) {
        return function (e) {
          e.preventDefault();
          $(this).parent().siblings('select').children('option')[flag ? 'attr' : 'removeAttr']('selected', true);
        }
      }

      $('.select_all').click(make_selection_handler(true));
      $('.select_none').click(make_selection_handler(false));

      var videoInfos = #{video_infos.to_json};

      function updateVideoPreview() {
        var selectionValue = $('.video-dropdown')[0].value;
        if (selectionValue) {
          var videoInfo = videoInfos[selectionValue];
          $('.video-preview').html(createVideoWithFallback(null, videoInfo, 400, 400));
          $('.video-preview').show();
        } else {
          $('.video-preview').hide();
        }
      }
      $('.video-dropdown').change(updateVideoPreview);
      updateVideoPreview();
    });
