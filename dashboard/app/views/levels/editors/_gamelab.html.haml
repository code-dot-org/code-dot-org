-# Gamelab-only fields for level edit page on levelbuilder
- content_for(:head) do
  :css
    #level-start-animations-validation {
      padding: 0.2em;
      font-weight: bold;
    }
  %script{src: minifiable_asset_path('js/levelbuilder_gamelab.js')}

= render partial: 'levels/editors/encrypted_examples', locals: {f: f, level_type: 'gamelab'}

%legend.control-legend{data: {toggle: "collapse", target: "#dataTab"}}
  Data Tab

#dataTab.collapse
  .field
    = f.label 'Key-Value Data'
    This data can be accessed via the getKeyValue and setKeyValue blocks in Game Lab.
    %pre
    = preserve do
      :escaped
        Example:
        {
          "click_count": 5,
          "button_color": "blue"
        }
    ~ f.text_area 'data_properties', placeholder: 'Insert JSON Key-Value Data', rows: 4, value: @level.data_properties or ''
    :javascript
      levelbuilder.initializeCodeMirror('level_data_properties', 'javascript');

  .field.aligned-input-group
    = boolean_check_box f, :hide_view_data_button
    = f.label 'Hide View Data Button'

= render partial: 'levels/editors/control_buttons', locals: {f: f}

= render partial: 'levels/editors/helper_libraries', locals: {f: f}

= render partial: 'levels/editors/submittable', locals: {f: f}

= render partial: 'levels/editors/validation_code', locals: {f: f}

= render partial: 'levels/editors/debugger', locals: {f: f}

= render partial: 'levels/editors/animation', locals: {f: f}

:javascript
  window.toggleBlock = function (elementId) {
    var element = document.getElementById(elementId);
    if (element) {
      element.style.display = element.style.display === 'none' ? 'block' : 'none';
    }
  };
