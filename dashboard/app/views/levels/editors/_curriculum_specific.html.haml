.field
  = render partial: 'levels/editors/checkboxes', locals: {f: f, field_name: :never_autoplay_video, description: "Never autoplay video"}

.field
  = f.label :thumbnail_url, 'Optional thumbnail URL (overrides default thumbnail)'
  = f.text_field :thumbnail_url

.field
  = f.label :project_template_level_name, 'Project Template Level Name'
  %p What this does:
  %ul
    %li if start_blocks are defined in the project template level, use those instead of the start blocks for this level
    %li if toolbox_blocks are defined in the project template level, use those instead of the toolbox blocks for this level
    %li autocreate a project that is shared with all levels with the same project template level
  %p
    (Leave blank if you do not want all of this)
  %p
    To learn how to make and use project templates
    =link_to 'here', 'https://github.com/code-dot-org/code-dot-org/wiki/%5BLevelbuilder%5D-Making-and-Using-Templates', target: '_blank'
  = f.text_field :project_template_level_name, placeholder: 'name of level you want to use as the project template'

.field
  = f.label :contained_level_names, 'Contained Level Names'
  %p The text area to add contained levels to create predict levels. Each level name referenced here will be embedded in the Instructions Pane (click the plus sign to add a contained level)
  %p
    Learn how to create predict levels
    =link_to 'here', 'https://github.com/code-dot-org/code-dot-org/wiki/%5BLevelbuilder%5D-Making-a-Predict-Level', target: '_blank'
  - @level.contained_level_names = [''] unless @level.contained_level_names.try(:present?)
  - @level.contained_level_names.each do |level_name|
    = text_field_tag 'level[contained_level_names][]', level_name, placeholder: 'name of contained level'
  #plusAnswerContainedLevel
    %i.fa.fa-plus-circle

= render partial: 'levels/editors/hide_share_and_remix', locals: {f: f}

.field
  = f.label :failure_message_override, 'Failure Message Override'
  %p If specified this error message will be used to replace ALL error messages in the puzzle. Be certain this is what you want before using.
  = f.text_field :failure_message_override, style: 'width: 600px;', placeholder: 'Type Override Failure Message Here'

.field
  = f.label :preload_asset_list, 'Preload asset list'
  %p A list of assets to be preloaded at page load time. The extension must be mp3, ogg, png, gif, jpg, jpeg, mov, or mp4. (click the plus sign to add an asset)
  - @level.preload_asset_list = [''] unless @level.preload_asset_list.try(:present?)
  - @level.preload_asset_list.each do |url|
    = text_field_tag 'level[preload_asset_list][]', url, placeholder: 'Asset URL', style: 'width: 100%; box-sizing: border-box; min-height: 28px;'
  #plusPreloadAssetList
    %i.fa.fa-plus-circle
