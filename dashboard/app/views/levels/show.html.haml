- @page_title = level_title

= render partial: 'shared/check_admin'
= render partial: 'shared/sharing_meta_tags'

#notes-content{style: 'display: none;'}
  %ul
    %li
      %a{href: '#video'}
        = I18n.t('video.tab')
        %span.video-name
    %li
      %a{href: '#notes-outer'}= I18n.t('video.notes')

- if @game.unplugged?
  :javascript
    var appOptions = #{app_options.to_json};
  = render partial: 'levels/unplug', locals: {app: @game.app}
- elsif (@level.is_a?(Applab) || @level.is_a?(Gamelab)) && app_options['readonlyWorkspace'] && !app_options['channel']
  -# A teacher is trying to view a student's progress on a level they have not started.
  = render partial: 'levels/not_started'
- elsif @level.is_a?(Blockly) && @level.embed == 'true' && !@edit_blocks && !@level.is_a?(Applab) && !@level.is_a?(Gamelab)
  #title
    - if @level.properties['instructions'].present?
      %h4{style: 'margin-left: auto; margin-right: auto; max-width: 800px;'}!= @level.properties['instructions']
  -# Pass special parameters to Blockly partial for embedded level type.
  = render partial: 'levels/blockly'
- elsif @level.is_a?(DSLDefined) || @level.is_a?(Widget) || @level.is_a?(FreeResponse) || @level.is_a?(ScriptCompletion) || @level.is_a?(StandaloneVideo)
  %script{src: asset_path('js/initApp/initApp.js')}
  :javascript
    var appOptions = #{app_options.to_json};
    dashboard.createCallouts(appOptions.callouts);
  - if @level.is_a?(Widget)
    = render partial: 'levels/widget'
  - else
    = render partial: "levels/#{@level.class.to_s.underscore}"
  - unless @level.is_a?(StandaloneVideo)
    = render partial: 'levels/reference_area'
- else
  = render partial: 'levels/blockly'

- if @peer_reviews.present?
  = render partial: 'peer_reviews/viewer'

- if tracking_pixel_enabled && @script.try(:hoc?) && (@script_level.try(:chapter) == 1 || @script_level.try(:position) == 1)
  -# special tracking image to make sure a cookie is set when hoc starts (/hoc/1)
  = image_tag(tracking_pixel_url(@script))

= render partial: 'levels/admin'

-#
  HACK: The respond_to? test below is to workaround a bug where a server
  instance will sometimes fail to define that method.
- if @script && current_user.try(:teacher?) && (!@script.respond_to?('pd?') || !@script.pd?)
  = render partial: 'levels/teacher'
