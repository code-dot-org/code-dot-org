- @page_title = level_title

- if @script && @script.name == Script::HOC2015_NAME && Gatekeeper.allows('requires_hoc_secret', where: {script_name: @script.name})
  :javascript
    //<![CDATA[
    if (CryptoJS.MD5(localStorage.getItem('hoc_secret')).toString() !=
        '#{Digest::MD5.hexdigest(DCDO.get("hoc_secret", nil))}') {
      document.location = '/';
    }
    //]]>
= render partial: 'shared/sharing_meta_tags'

- if params[:share] && @game.share_mobile_fullscreen? && browser.safari?
  :javascript
    if (!window.navigator.standalone) {
      window.addEventListener("load", function() {
        addToHome.show(true);
      }, false);
    }

#notes-content{style: 'display: none;'}
  %ul
    %li
      %a{href: '#video'}
        = I18n.t('video.tab')
        %span.video-name
    %li
      %a{href: '#notes-outer'}= I18n.t('video.notes')

- if @game.unplugged?
  :javascript
    var appOptions = #{app_options.to_json};
  = render partial: 'levels/unplug', locals: {app: @game.app}
- elsif @level.is_a?(Blockly) && @level.embed == 'true' && !@edit_blocks
  #title
    - if @level.properties['instructions'].present?
      %h4{style: 'margin-left: auto; margin-right: auto; max-width: 800px;'}!= @level.properties['instructions']
  - # Pass special parameters to Blockly partial for embedded level type.
  = render partial: 'levels/blockly'
- elsif @level.is_a?(DSLDefined) || @level.is_a?(Widget)
  %script{src: minifiable_asset_path('shared.js')}
  :javascript
    var appOptions = #{app_options.to_json};
    dashboard.createCallouts(appOptions.callouts);
  - if @level.is_a?(Widget)
    = render partial: 'levels/widget'
  - else
    = render partial: "levels/#{@level.class.to_s.underscore}"
  = render partial: 'levels/reference_area'
- else
  = render partial: 'levels/blockly'

- if tracking_pixel_enabled && @script.try(:hoc?) && (@script_level.try(:chapter) == 1 || @script_level.try(:position) == 1)
  -# special tracking image to make sure a cookie is set when hoc starts (/hoc/1)
  = image_tag(tracking_pixel_url(@script))

= render partial: 'levels/admin'

- # HACKHACK: The respond_to? test below is to workaround a bug where  a server instance
- # will sometimes fail to define that method.
- if @script && current_user.try(:teacher?) && (!@script.respond_to?('pd?') || !@script.pd?)
  = render partial: 'levels/teacher'
