- video = @level.specified_autoplay_video
- video_data = {videoOptions: video.summarize(false).to_json,
                videoHeight: 480,
                videoWidth: 853}

- content_for(:head) do
  %script{src: minifiable_asset_path('js/levels/_standalone_video.js'), data: video_data}

.standalone-video
  - @slides = get_slides_by_video_key(@level.video_key)

  %h1= "Video: #{video.localized_name}"
  %div= render(inline: @level.long_instructions, type: :md) if @level.long_instructions

  .video-content
  - if @slides
    .notes-content{style: "display: none"}
      #notes= render template: 'notes/index'

  %br/

  .video-link= link_to t('video.download'), video.download

  - if @slides
    .slides-link
      |
      %a.show-notes{href: ''}= t('video.show_notes')
      %a.show-video{href: '', style: "display: none"}= t('video.show_video')

  #fallback-player-caption-dialog-link

  %br/
  %br/

  .buttons
    %a.btn.btn-large.btn-primary.next-stage.submitButton
      =t('continue')

  = render partial: 'levels/teacher_markdown', locals: {data: {'teacher_markdown' => @level.teacher_markdown}}
