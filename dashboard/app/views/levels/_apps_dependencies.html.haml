-#
  Expected locals: app, use_blockly, use_droplet, use_p5, use_applab, hide_source, static_asset_base_path
  Provide default values for some of these
- use_blockly ||= false
- use_droplet ||= false
- use_p5 ||= false
- use_applab ||= false
- use_gamelab ||= false
- use_weblab ||= false
- hide_source ||= false
- use_phaser ||= false
- app_options[:locale] = js_locale

-# Common style dependencies
%link{href: asset_path('css/common.css'), rel: 'stylesheet', type: 'text/css'}
%link{href: asset_path("css/#{app}.css"), rel: 'stylesheet', type: 'text/css'}

- if use_p5
  %script{src: webpack_asset_path('js/p5-dependencies.js')}

-# Droplet style dependencies (only when editor present)
- if use_droplet && !hide_source
  %link{href: asset_path('css/droplet/droplet.min.css'), rel: 'stylesheet', type: 'text/css'}
  %link{href: asset_path('css/tooltipster/tooltipster.min.css'), rel: 'stylesheet', type: 'text/css'}

-# Gamelab script dependencies
- if use_gamelab
  %script{src: webpack_asset_path('js/p5play/p5.js')}
  %script{src: webpack_asset_path('js/p5play/p5.play.js')}

-# Droplet script dependencies (only when editor present)
- if use_droplet && !hide_source

  -# ace lazy-loads some of its files via relative url path, which doesn't play
  -# nicely with asset paths containing digests. rather than having initial
  -# assets use digests and lazy-loaded assets not use digests, just load all
  -# ace assets without digests to avoid subtle bugs where failing to lazy-load.
  -#
  -# Although we do not use the .min.js filename, ace js contents is minified
  -# whenever our js is built in production mode. See Gruntfile.js for details.

  %script{src: "#{static_asset_base_path}js/ace/ace.js"}
  %script{src: "#{static_asset_base_path}js/ace/mode-javascript.js"}
  %script{src: "#{static_asset_base_path}js/ace/ext-language_tools.js"}
  %script{src: webpack_asset_path('js/droplet/droplet-full.js')}
  %script{src: webpack_asset_path('js/tooltipster/jquery.tooltipster.js')}
-# Asset uploader script dependencies (not in share mode)
- if (use_applab || use_gamelab || use_weblab) && !hide_source
  %script{src: webpack_asset_path('js/fileupload/jquery.iframe-transport.js')}
  %script{src: webpack_asset_path('js/fileupload/jquery.fileupload.js')}

- if use_phaser
  %script{src: webpack_asset_path('js/phaser/phaser.js')}

-# Blockly script dependencies
- if use_blockly
  %script{src: webpack_asset_path('js/blockly.js')}
  %script{src: webpack_asset_path("js/#{js_locale}/blockly_locale.js")}

-# Common script dependencies
%script{src: webpack_asset_path('js/marked/marked.js')}
%script{src: webpack_asset_path('js/common.js')}
-# common_locale is included in application.html.haml
%script{src: webpack_asset_path("js/#{js_locale}/#{app}_locale.js")}
%script{src: webpack_asset_path("js/#{app}.js"),
        data: {appoptions: app_options.to_json}}

-# Applab external script dependencies
- if use_applab
  %script{src: 'https://www.google.com/jsapi'}

-# Preload asset list
- if preload_asset_list
  - preload_asset_list.each do |asset|
    - case Addressable::URI.parse(asset).extname.downcase
      - when ".mp3", ".ogg"
        %link{rel: 'preload', as: "fetch", crossorigin: "anonymous", href: asset}
      - when ".png", ".gif", ".jpg", ".jpeg"
        %link{rel: 'preload', as: "image", crossorigin: "anonymous", href: asset}
      - when ".mov", ".mp4"
        %link{rel: 'preload', as: "video", crossorigin: "anonymous", href: asset}
