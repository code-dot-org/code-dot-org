- if current_user.try(:teacher?) && @script_level

  .teacher-panel{class: params[:user_id] || params[:section_id] || params[:solution] ? '' : 'hidden'}
    .hide-handle
      %i.fa.fa-chevron-right{onclick: '$(".teacher-panel").toggleClass("hidden"); return false;'}
    .show-handle
      %i.fa.fa-chevron-left{onclick: '$(".teacher-panel").toggleClass("hidden"); return false;'}

    %h3
      = t('teacher.panel.answer_viewer')
    .content
      .non-scrollable-wrapper
        - if @user
          .students
            %h4= t('teacher.panel.student')
            = link_to @user.name, teacher_dashboard_student_progress_url(@section, @user)
        - if @user_level
          .user_level
            .level
              - status = activity_css_class(@user_level)
              .level_link{class: status}
                - if @level.unplugged?
                  %span.puzzle-named
                    Unplugged
                - elsif status == 'passed' || status == 'perfect'
                  = check_mark_html
                - else
                  %span.puzzle-number
                    = @script_level.position
              - if @user_level.driver_user_levels.present? || @user_level.navigator_user_levels.present?
                #worked_with
                  %h4
                    %i.fa.fa-users
                    = t('teacher.panel.worked_with')
                  - @user_level.driver_user_levels.each do |driver_user_level|
                    %div
                      = link_to driver_user_level.user.name, build_script_level_path(@script_level, user_id: driver_user_level.user_id, section_id: @section.id)
                      %i= t('nav.user.driver')
                  - @user_level.navigator_user_levels.each do |navigator_user_level|
                    %div
                      = navigator_user_level.user.name
                      %i= t('nav.user.navigator')
              - if @user_level.submitted?
                #submitted
                  %div= t('teacher.panel.submitted_on')
                  .timestamp= @user_level.updated_at.iso8601
                  %button.btn.btn-info#unsubmit{"data-user-level-url" => url_for(@user_level)}
                    = t('teacher.panel.unsubmit')
        - if @level && @level.contained_levels.any?
          - contained_level = @level.contained_levels.first
          -# if we have a student user, show their level. otherwise show teacher's
          - user = @user || current_user
          - if user.last_attempt(contained_level).try(:level_source).try(:data)
            - contained_user_level = user.user_level_for(@script_level, contained_level)
            .level
              %button.btn.btn-info#clear-response{"data-user-level-url" => url_for(contained_user_level)}
                = t('teacher.panel.clear_response')
        .level
          - if @level && @level.ideal_level_source_id && @script # 'solutions' for blockly-type levels
            - if @ideal_level_source
              %h4= t('teacher.panel.viewing_solution')
            - else
              = link_to build_script_level_path(@script_level, {solution: true}.merge(@section ? {section_id: @section.id} : {})) do
                %button.btn.btn-info= t('reference_area.teacher')
          - if @level.try(:examples).present? && current_user.try(:authorized_teacher?) # 'solutions' for applab-type levels
            - @level.examples.each_with_index do |example, index|
              - example_link = send("#{@level.game.app}_project_view_projects_url".to_sym, channel_id: example, host: 'studio.code.org', port: 443, protocol: :https)
              = link_to example_link, target: "_blank" do
                %button.btn.btn-info
                  - if @level.examples.many?
                    = t('teacher.panel.example_with_number', solution_number: index + 1)
                  - else
                    = t('teacher.panel.example')
          = link_to build_script_level_path(@script_level, @section? {section_id: @section.id} : {}) do
            %button.btn.btn-info= t('teacher.panel.try_it_yourself')
        - if current_user.sections.any?
          #check-mark-container{style: "display: none"}
            = check_mark_html
          -# This is rendered into by react
          #teacher-panel-sections
          - if @section && @script_level.stage.lockable?
            %div{:style => "margin: 10px"}
              #stage-locked-text
              %div
              = link_to t('teacher.panel.update_lock_settings'), script_path(@script_level.script)
      - students_info = get_students_info(@script_level)
      #students_info{data: { students_info: students_info.to_json}}
      -# teacher.js renders into this empty div
      #react-students-list
  :javascript
    $(document).ready(window.dashboard.teacher.onReady);
