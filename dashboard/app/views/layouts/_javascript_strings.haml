-# A set of strings taken from dashboard's I18n that are used by our JS. We
-# can't just do this in .erb files in the assets directory, since those get
-# precompiled and end up English only.
-# A better longer term solution may be to use something like the i18n-js gem

:ruby
  def escape_t(key)
    escape_javascript(I18n.t(key))
  end

:javascript
  window.dashboard = window.dashboard || {};
  (function () {
    // subset of the string table used in JS. not this only supports strings
    // that don't use params
    var strs = {
      less: "#{escape_t('less')}",
      more: "#{escape_t('more')}",
      beta: "#{escape_t('beta')}",
      project: {
        share_title: "#{escape_t('project.share_title')}",
        share_copy_link: "#{escape_t('project.share_copy_link')}",
        close: "#{escape_t('project.close')}",
        click_to_remix: "#{escape_t('project.click_to_remix')}",
        remix: "#{escape_t('project.remix')}",
        share: "#{escape_t('project.share')}",
        rename: "#{escape_t('project.rename')}",
        save: "#{escape_t('project.save')}",
        my_projects: "#{escape_t('project.my_projects')}",
        more: "#{escape_t('project.more')}",
        delete: "#{escape_t('project.delete')}",
        new: "#{escape_t('project.new')}",
        cancel: "#{escape_t('project.cancel')}",
        delete_confirm_title: "#{escape_t('project.delete_confirm_title')}",
        delete_confirm_text: "#{escape_t('project.delete_confirm_text')}",
        edit_project: "#{escape_t('project.edit_project')}",
        abuse: {
          tos: "#{escape_t('project.abuse.tos')}",
          contact_us: "#{escape_t('project.abuse.contact_us')}",
          go_to_code_studio: "#{escape_t('project.abuse.go_to_code_studio')}"
        }
      }
    };

    window.dashboard.i18n = {
      /**
       * Mimics dashboard's I18n.t, getting a string from the hierarchy
       * @param {string} selector Selector the desired string, i.e. "project.abuse.tos"
       */
      t: function (selector) {
        var hierarchy = selector.split('.');
        var current = strs;
        hierarchy.forEach(function(item) {
          current = current[item];
          if (!current) {
            throw new Error('i18n failed to find string: ' + selector);
          }
        });
        if (typeof(current) !== 'string') {
          throw new Error('i18n not a leaf: ' + selector);
        }
        return current;
      }
    };
  })();
