:ruby

  script = local_assigns[:script] || Script.twenty_hour_script
  script_level = local_assigns[:script_level]
  level = local_assigns[:level]
  full_width = local_assigns[:full_width]

  show_bug_links = script_level || (level && level.try(:is_project_level))

  user_type = nil

  header_class = 'header-wrapper'
  header_class = header_class + (show_bug_links ? ' feedback-bug-links' : '')
  header_class = header_class + (script_level || level ? ' hide_on_mobile' : '')

  if current_user
    if current_user.teacher?
      user_type = "teacher"
    elsif current_user.student?
      user_type = "student"
    end
  end

  if !current_user
    cookie_key = environment_specific_cookie_name('_user_type')
    user_type = request.cookies[cookie_key]
    user_type = "student" if user_type == "student_y"
  end

  hamburger_options = {}
  hamburger_options[:level] = level
  hamburger_options[:script_level] = script_level
  hamburger_options[:user_type] = user_type
  hamburger_options[:language] = request.language
  hamburger_options[:show_gallery] = true
  hamburger_options[:loc_prefix] = "nav.header."
  hamburger_options[:page_mode] = request.cookies['pm']

  header_contents_options = {}
  header_contents_options[:user_type] = user_type
  header_contents_options[:language] = request.language
  header_contents_options[:loc_prefix] = "nav.header."
  header_contents_options[:page_mode] = request.cookies['pm']

  should_show_progress = script_level || @stage_extras

  sign_in_user = current_user || user_type && OpenStruct.new(
    id: nil,
    short_name: I18n.t("nav.user.#{user_type}"),
    can_pair?: false
  )
  show_pairing_dialog = !!session.delete(:show_pairing_dialog)

  user_header_options = {}
  user_header_options[:current_user] = sign_in_user
  user_header_options[:show_pairing_dialog] = show_pairing_dialog
  user_header_options[:session_pairings] = session[:pairings]
  user_header_options[:loc_prefix] = 'nav.user.'
  user_header_options[:level] = level

  require 'cdo/hamburger'

= console if @use_web_console

= render partial: 'layouts/unsupported_browser'

%link{:href=>'/shared/css/hamburger.css', :rel=>'stylesheet'}

%div{class: header_class}
  .navbar-static-top.header{dir: "ltr"}
    .container{style: "width: 100%; display: flex; justify-content: space-between; height: 50px;"}
      .header_left
        .header_logo
          - if current_user
            = link_to(image_tag('logo.svg'), '/home', {id: "logo_home_link"})
          - else
            = link_to(image_tag('logo.svg'), CDO.code_org_url, {id: "logo_home_link"})

      .header_middle{dir: locale_dir}
        - if should_show_progress || level
          -# React will attach to this.
          .header_level
        - else
          .headerlinks.hide_on_tablet
            - Hamburger.get_header_contents(header_contents_options).each do |entry|
              %a.headerlink{id: entry[:id], href: entry[:url]}= entry[:title]

      .header_right
        - if !@hide_sign_in_option && signin_button_enabled
          #sign_in_or_user
            = render inline: File.read(Rails.root.join('..', 'shared', 'haml', 'user_header.haml')), type: :haml, locals: user_header_options
        = render inline: File.read(Rails.root.join('..', 'shared', 'haml', 'help_button.haml')), type: :haml, locals: hamburger_options
        = render inline: File.read(Rails.root.join('..', 'shared', 'haml', 'hamburger.haml')), type: :haml, locals: hamburger_options
  }

:ruby
  if should_show_progress
    view_as = @user || current_user
    user_progress = current_user == nil ? 'null' : summarize_user_progress(script, view_as, view_as == current_user && @public_caching).to_json

    if view_as
      lesson_extras_enabled = view_as.lesson_extras_enabled?(script)
    end

    puzzle_page = params[:puzzle_page] ? params[:puzzle_page] : ApplicationHelper::PUZZLE_PAGE_NONE

    script_data = script.summarize_header
    lesson_group_data = script.lesson_groups.map(&:summarize)
    stage_data = (@stage || script_level.lesson).summarize
    # If caching, we don't know the sign in state, and should be nil
    signed_in = @public_caching ? 'null' : !brakeman_no_warn(current_user).nil?

    # Pass script name through to header
    if @stage_extras
      text = @stage.localized_title
    else
      stage = @stage || @script_level.lesson
      text = @script.professional_learning_course? ? stage.localized_name : stage.localized_title
    end

    # Pass along section_id param so that when teacher moves between lesson
    # page and course overview they maintain their section.
    section_id = request.query_parameters[:section_id]

    user_id = request.query_parameters[:user_id]

    small_text = false

    script_name_data = {
      name: text,
      href: script_path(@script, section_id: section_id, user_id: user_id),
      smallText: small_text
    }
  end

- if should_show_progress
  :javascript
    //<![CDATA[
    dashboard.header.build(
      #{script_data.to_json},
      #{lesson_group_data.to_json},
      #{stage_data.to_json},
      #{user_progress},
      "#{script_level&.level_id || -1}",
      #{puzzle_page},
      #{signed_in},
      #{lesson_extras_enabled || 'null'},
      #{script_name_data.to_json},
      #{!script_level}
    )
    //]]>

- elsif level
  :javascript
    dashboard.header.buildProjectInfoOnly()
