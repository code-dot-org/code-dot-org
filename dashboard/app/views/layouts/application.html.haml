!!! 5
%html{dir: locale_dir}
  %head
    - appname = Rails.env.production? ? t(:appname) : "#{t(:appname)} [#{Rails.env}]"
    - title = @page_title ? "#{appname} - #{@page_title}" : appname
    %title= title
    = ::NewRelic::Agent.browser_timing_header rescue ''
    - if view_options[:responsive_content]
      = tag :meta, name: 'viewport', content: 'width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no'
    - else
      = tag :meta, name: 'viewport', content: 'minimal-ui'
    /[if IE 9]
      %meta{'http-equiv' => 'X-UA-Compatible', content: 'IE=Edge'}
    = stylesheet_link_tag    'css/code-studio', media: 'all'
    = stylesheet_link_tag    'application', media: 'all'
    = render partial: 'layouts/analytics'
    // essential.js is ordered above application.js to filter new relic errors
    %script{src: minifiable_asset_path('js/essential.js')}
    = render file: Rails.root.join('..', 'shared', 'haml', 'answerdash.haml') if view_options[:answerdash]
    = javascript_include_tag 'application'
    = javascript_include_tag "js/#{js_locale}/common_locale"
    = javascript_include_tag '//cdn.optimizely.com/js/12977480133.js' if Rails.env.production?
    %script{src: minifiable_asset_path('js/code-studio-common.js')}
    = csrf_meta_tags
    = yield :head
    - if content_for? :og
      = yield :og
    - else
      = tag 'meta', property: 'og:title', content: title
      = tag 'meta', property: 'og:image', content: CDO.studio_url(CDO.shared_image_url('share/girl_cropped.jpg'), 'https:')
      = tag 'meta', property: 'og:description', content: t('share.description')
    = render partial: 'layouts/javascript_strings'
  %body
    - unless Rails.env.production?
      = render partial: 'layouts/environment_tag'
    - if current_user && current_user.age.nil?
      = render partial: 'layouts/age_interstitial'

    - cookie_key = environment_specific_cookie_name('_user_type')
    - user_type = request.cookies[cookie_key]

    - gdpr_data = {}
    - if current_user
      - already_accepted = current_user.data_transfer_agreement_accepted == true
      - force_eu = request.params['force_in_eu'].present?
      - gdpr_data[:show_gdpr_dialog] = (request.gdpr? || force_eu) && !already_accepted
      - gdpr_data[:current_user_id] = current_user.id

    #gdpr-dialog

    %script{src: minifiable_asset_path('js/code-studio.js'), data: {gdpr: gdpr_data.to_json, usertype: user_type.to_json}}

    .wrapper{style: ('background-color: #ffffff' if view_options[:white_background])}
      - unless view_options[:no_header]
        = render partial: 'layouts/header', locals: {script: @script, script_level: @script_level, level: @level, full_width: view_options[:full_width]}
      - if view_options[:code_studio_logo]
        = render partial: 'layouts/logo'
      - page = yield
      - if view_options[:full_width]
        - if view_options[:responsive_content]
          .responsive_full_container
            = page
        - else
          .full_container
            = page
      - else
        .container.main
          = show_flashes.html_safe
          = page

      - if view_options[:responsive_content]
        .responsive-content-desktop-footer
          .push
      - else
        - unless view_options[:no_footer] || view_options[:small_footer]
          .push

      - if view_options[:small_footer]
        = render partial: 'layouts/small_footer'

      - if view_options[:responsive_content]
        .responsive-content-mobile-footer
          = render partial: 'layouts/small_footer', locals: {full_width: true}

    - unless view_options[:no_footer]
      - if view_options[:responsive_content]
        .responsive-content-desktop-footer
          = render partial: 'layouts/footer', locals: {full_width: view_options[:full_width]}
      - elsif !view_options[:small_footer]
        = render partial: 'layouts/footer', locals: {full_width: view_options[:full_width]}
      = render partial: 'shared/maybe_set_hoc_secret'

    = render file: Rails.root.join('..', 'shared', 'haml', 'cookie_banner.haml'), locals: {dashboard: true}

    = yield :body_scripts
