- content_for(:head) do
  = stylesheet_link_tag 'css/pd', media: 'all'

%h1 View Regional Partner

#application-container
  = show_flashes.html_safe
  - if flash[:upload_error]
    = content_tag(:div, flash[:upload_error], {class: 'alert alert-danger'}, false)
    - flash[:upload_error] = nil
%p
  %strong ID:
  = @regional_partner.id
%p
  %strong Name:
  = @regional_partner.name
%p
  %strong Group:
  = @regional_partner.group
%p
  %strong Urban:
  = @regional_partner.urban? ? 'Yes' : 'No'
%p
  %strong Apps open date for teachers:
  = @regional_partner.apps_open_date_teacher
%p
  %strong Apps close date for teachers:
  = @regional_partner.apps_close_date_teacher
%p
  %strong Program information:
  = @regional_partner.cost_scholarship_information
%p
  %strong Additional Partner information:
  = @regional_partner.additional_program_information
%p
  %strong Link to Partner's Application:
  = @regional_partner.link_to_partner_application
%p
  %strong PL Programs Offered:
  = @regional_partner.pl_programs_offered
%p
  %strong Contact Email:
  = @regional_partner.contact_email
%p
  %strong Contact Name:
  = @regional_partner.contact_name
%p
  %strong Ship Phone Number:
  = @regional_partner.phone_number
%p
  %strong Created At:
  = @regional_partner.created_at.strftime('%F')
%p
  %strong Updated At:
  = @regional_partner.updated_at.strftime('%F')
- if can? :update, @regional_partner
  = link_to 'Edit', edit_regional_partner_path(@regional_partner)
\|
= link_to 'Back', regional_partners_path
%br
%h2 Regions
%p
  Region mapping for this partner can be replaced by uploading a CSV file that includes the header
  %b Region,
  where a region is a zip code or 2 letter state abbreviation. Example file text:
  %br
  Region
  %br
  12345
  %br
  WA
= form_tag({action: 'replace_mappings'}, multipart: true) do
  = file_field_tag('regions', accept: 'text/csv', style: 'line-height: initial;', onchange: 'validateRegionFile(this);')
  = submit_tag('Replace Region Mapping',
   data: {confirm: 'This will delete the current mapping and replace it with the contents of the CSV file. Are you sure you want to continue?'},
   id: "submitReplaceMappings",
   disabled: true)
= form_tag(action: 'add_mapping') do
  %table.table.table-hover.table-condensed.table-auto-width{:id => 'mappings-table'}
    %thead
      %th Action
      %th Region
    %tbody
      - @regional_partner.mappings.each do |mapping|
        %tr
          %td= link_to 'Remove', action: :remove_mapping, mapping_id: mapping.id
          %td= mapping.state? ? mapping.state : mapping.zip_code
          %td
      %tr
        %td
          .actions
            = submit_tag('Add', id: 'submitAddMapping')
        %td
          .field
            Enter a state or zip code:
            = text_field_tag :region, '', class: 'form-control'
        %td
%br
%h2 Program Managers
%table.table.table-hover.table-condensed.table-auto-width{:id => 'program-managers-table'}
  %thead
    %th Action
    %th ID
    %th Name
    %th Email
    %th Recent Sign In
    %th Sign In Count
    %th Registered Account At
  %tbody
    - @regional_partner.program_managers.each do |program_manager|
      %tr
        %td= link_to 'Remove', action: :remove_program_manager, program_manager_id: program_manager.id
        %td= program_manager.id
        %td= program_manager.name
        %td= program_manager.email
        %td= program_manager.current_sign_in_at.try(:strftime, '%F')
        %td= program_manager.sign_in_count
        %td= program_manager.created_at.strftime('%F')
%p Enter an Email to Assign a Program Manager
= form_tag url_for(action: 'assign_program_manager'), method: 'post', class: 'form-inline', enforce_utf8: false do
  = text_field_tag :email, nil, class: 'form-control'
  %button.btn{type: 'submit'}
    %i.fa.fa-search

:javascript
  function validateRegionFile(inputFile) {
    if (inputFile.files && inputFile.files.length === 1) {
      const file = inputFile.files[0];
      // limit csv to 500 kb
      const limit = 500000;
      if (file.size > limit) {
        window.alert('File must be less than 500 kb.')
        updateReplaceMappingSubmitButton(true);
      } else {
        updateReplaceMappingSubmitButton(false);
      }
    } else {
      updateReplaceMappingSubmitButton(true);
    }
  }

  function updateReplaceMappingSubmitButton(isDisabled) {
    $("#submitReplaceMappings").prop("disabled", isDisabled);
  }

