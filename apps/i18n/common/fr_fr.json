{
  "and": "et",
  "backToPreviousLevel": "Retour au niveau précédent",
  "blocklyMessage": "Blockly",
  "blocks": "blocs",
  "booleanFalse": "faux",
  "booleanTrue": "vrai",
  "catActions": "Actions",
  "catColour": "Couleur",
  "catLists": "Listes",
  "catLogic": "Logique",
  "catLoops": "Boucles",
  "catMath": "Calculs",
  "catProcedures": "Fonctions",
  "catText": "texte",
  "catVariables": "Variables",
  "clearPuzzle": "Recommencer",
  "clearPuzzleConfirm": "Cela va réinitialiser le puzzle à son état de départ et supprimer tous les blocs que tu as ajouté ou changé.",
  "clearPuzzleConfirmHeader": "Est-tu certain(e) de vouloir recommencer ?",
  "codeMode": "Code",
  "codeTooltip": "Voir le code JavaScript généré.",
  "continue": "Continuer",
  "defaultTwitterText": "Découvre ce que j'ai fait",
  "designMode": "Design",
  "designModeHeader": "Mode création",
  "dialogCancel": "Annuler",
  "dialogOK": "OK",
  "directionEastLetter": "E",
  "directionNorthLetter": "N",
  "directionSouthLetter": "S",
  "directionWestLetter": "O",
  "dropletBlock_addOperator_description": "Ajouter deux nombres",
  "dropletBlock_addOperator_signatureOverride": "Ajouter un opérateur",
  "dropletBlock_andOperator_description": "Retourner vrai seulement quand les deux expressions sont vraies et faux sinon",
  "dropletBlock_andOperator_signatureOverride": "opérateur booléen ET",
  "dropletBlock_appendItem_description": "Ajouter l'élément à la fin du tableau",
  "dropletBlock_appendItem_param0": "liste",
  "dropletBlock_appendItem_param0_description": "Le tableau à modifier.",
  "dropletBlock_appendItem_param1": "élément",
  "dropletBlock_appendItem_param1_description": "L'élément à ajouter à la fin du tableau.",
  "dropletBlock_arcLeft_description": "Déplace la tortue vers l'avant et la gauche en suivant doucement un arc circulaire",
  "dropletBlock_arcLeft_param0": "angle",
  "dropletBlock_arcLeft_param0_description": "L'angle le long du cercle à déplacer.",
  "dropletBlock_arcLeft_param1": "Rayon",
  "dropletBlock_arcLeft_param1_description": "Le rayon du cercle qui est placée à gauche de la tortue. Doit être >= 0.",
  "dropletBlock_arcRight_description": "Déplacer la tortue vers l'avant et la droite en suivant doucement un arc circulaire",
  "dropletBlock_arcRight_param0": "angle",
  "dropletBlock_arcRight_param0_description": "L'angle le long du cercle à déplacer.",
  "dropletBlock_arcRight_param1": "Rayon",
  "dropletBlock_arcRight_param1_description": "Le rayon du cercle qui est placé à droite de la tortue. Doit être >= 0.",
  "dropletBlock_assign_x_description": "Assigne un valeur à une variable existante. Par exemple, x = 0;",
  "dropletBlock_assign_x_param0": "x",
  "dropletBlock_assign_x_param0_description": "Le nom assigné à la variable",
  "dropletBlock_assign_x_param1": "value",
  "dropletBlock_assign_x_param1_description": "La valeur attribuée à la variable.",
  "dropletBlock_assign_x_signatureOverride": "Assigner une variable",
  "dropletBlock_button_description": "Crée un bouton sur lequel vous pouvez cliquer. Le bouton affichera le texte fourni et peut être référencé par l'identifiant indiqué",
  "dropletBlock_button_param0": "identifiantBouton",
  "dropletBlock_button_param0_description": "Un identifiant unique pour le bouton. L'ID est utilisé pour référencer le bouton créé. Par exemple, pour assigner des gestionnaires d'événements.",
  "dropletBlock_button_param1": "texte",
  "dropletBlock_button_param1_description": "Le texte affiché dans le bouton.",
  "dropletBlock_callMyFunction_description": "Appelle une fonction nommée qui ne prend aucun paramètre",
  "dropletBlock_callMyFunction_n_description": "Appelle une fonction nommée qui prend un ou des paramètres",
  "dropletBlock_callMyFunction_n_signatureOverride": "Appeler une fonction avec des paramètres",
  "dropletBlock_callMyFunction_signatureOverride": "Appeler une fonction",
  "dropletBlock_changeScore_description": "Ajouter ou enlever un point au score.",
  "dropletBlock_checkbox_description": "Créer une case à cocher et lui assigner un identifiant d'élément",
  "dropletBlock_checkbox_param0": "identifiantCase",
  "dropletBlock_checkbox_param1": "cochée",
  "dropletBlock_circle_description": "Dessiner un cercle sur le canevas actif avec les coordonnées spécifiées pour le centre (x, y) et le rayon",
  "dropletBlock_circle_param0": "CentreX",
  "dropletBlock_circle_param0_description": "La position x, en pixels, du centre du cercle.",
  "dropletBlock_circle_param1": "CentreY",
  "dropletBlock_circle_param1_description": "La position y, en pixels, du centre du cercle.",
  "dropletBlock_circle_param2": "Rayon",
  "dropletBlock_circle_param2_description": "Le rayon du cercle, en pixels.",
  "dropletBlock_clearCanvas_description": "Réinitialiser la zone de dessin active",
  "dropletBlock_clearInterval_description": "Réinitialiser une minuterie existante en lui passant la valeur retournée par definirIntervalle()",
  "dropletBlock_clearInterval_param0": "intervalle",
  "dropletBlock_clearInterval_param0_description": "The value returned by the setInterval function to clear.",
  "dropletBlock_clearTimeout_description": "Réinitialiser une minuterie existante en lui passant la valeur retournée par definirEcheance()",
  "dropletBlock_clearTimeout_param0": "échéance",
  "dropletBlock_clearTimeout_param0_description": "The value returned by the setTimeout function to cancel.",
  "dropletBlock_console.log_description": "Afficher la chaîne de caractères ou variable dans la console",
  "dropletBlock_console.log_param0": "message",
  "dropletBlock_console.log_param0_description": "The message string to display in the console.",
  "dropletBlock_container_description": "Créer un conteneur de division avec l'identifiant d'élément spécifié et, optionnellement, définir son contenu HTML",
  "dropletBlock_createCanvas_description": "Créer un canevas avec l'identifiant d'élément spécifié et, optionnellement, définir sa largeur et hauteur",
  "dropletBlock_createCanvas_param0": "identifiantCanevas",
  "dropletBlock_createCanvas_param0_description": "The id of the new canvas element.",
  "dropletBlock_createCanvas_param1": "largeur",
  "dropletBlock_createCanvas_param1_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_createCanvas_param2": "hauteur",
  "dropletBlock_createCanvas_param2_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_createRecord_description": "Creates a new record in the specified table.",
  "dropletBlock_createRecord_param0": "nomTableau",
  "dropletBlock_createRecord_param0_description": "The name of the table the record should be added to. `tableName` gets created if it doesn't exist.",
  "dropletBlock_createRecord_param1": "entrée",
  "dropletBlock_createRecord_param2": "fonction",
  "dropletBlock_declareAssign_list_abde_description": "Declare a variable and assigns an array to it with the given initial values",
  "dropletBlock_declareAssign_list_abde_signatureOverride": "Déclarer et assigner un tableau à une variable",
  "dropletBlock_declareAssign_str_hello_world_description": "Declare a variable and assign a string to it",
  "dropletBlock_declareAssign_str_hello_world_signatureOverride": "Declare and assign a string to a variable",
  "dropletBlock_declareAssign_x_array_1_4_description": "Create a variable and initialize it as an array",
  "dropletBlock_declareAssign_x_array_1_4_param0": "x",
  "dropletBlock_declareAssign_x_array_1_4_param0_description": "The name you will use in the program to reference the variable",
  "dropletBlock_declareAssign_x_array_1_4_param1": "1,2,3,4",
  "dropletBlock_declareAssign_x_array_1_4_param1_description": "Les valeurs initiales du tableau",
  "dropletBlock_declareAssign_x_array_1_4_signatureOverride": "Declare a variable assigned to an array",
  "dropletBlock_declareAssign_x_description": "Créer une variable pour la première fois",
  "dropletBlock_declareAssign_x_param0": "x",
  "dropletBlock_declareAssign_x_param0_description": "The name you will use in the program to reference the variable",
  "dropletBlock_declareAssign_x_param1": "0",
  "dropletBlock_declareAssign_x_param1_description": "The initial value of the variable",
  "dropletBlock_declareAssign_x_prompt_description": "Déclare que le code va maintenant utiliser une variable et lui assigne une valeur initiale fournie par l'utilisateur",
  "dropletBlock_declareAssign_x_prompt_param0": "x",
  "dropletBlock_declareAssign_x_prompt_param0_description": "The name you will use in the program to reference the variable",
  "dropletBlock_declareAssign_x_prompt_param1": "« Entrer la valeur »",
  "dropletBlock_declareAssign_x_prompt_param1_description": "The string the user will see in the pop up when asked to enter a value",
  "dropletBlock_declareAssign_x_prompt_signatureOverride": "Demander une valeur à l'utilisateur et l'enregistrer",
  "dropletBlock_declareAssign_x_signatureOverride": "Déclarer une variable",
  "dropletBlock_deleteElement_description": "Effacer les éléments contenant un id spécifique",
  "dropletBlock_deleteElement_param0": "identifiant",
  "dropletBlock_deleteElement_param0_description": "The id of the element to delete.",
  "dropletBlock_deleteRecord_description": "Deletes a record, identified by record.id.",
  "dropletBlock_deleteRecord_param0": "nomTableau",
  "dropletBlock_deleteRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_deleteRecord_param1": "entrée",
  "dropletBlock_deleteRecord_param2": "fonction",
  "dropletBlock_deleteRecord_param2_description": "A function that is asynchronously called when the call to deleteRecord() is finished.",
  "dropletBlock_divideOperator_description": "Diviser deux nombres",
  "dropletBlock_divideOperator_signatureOverride": "Divide operator",
  "dropletBlock_dot_description": "Draw a dot in the turtle's location with the specified radius",
  "dropletBlock_dot_param0": "Rayon",
  "dropletBlock_dot_param0_description": "The radius of the dot to draw",
  "dropletBlock_drawImage_description": "Draw an image on the active  canvas with the specified image element and x, y as the top left coordinates",
  "dropletBlock_drawImage_param0": "identifiant",
  "dropletBlock_drawImage_param0_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param1": "x",
  "dropletBlock_drawImage_param1_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param2": "y",
  "dropletBlock_drawImage_param2_description": "The y position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param3": "largeur",
  "dropletBlock_drawImage_param4": "hauteur",
  "dropletBlock_dropdown_description": "Create a dropdown, assign it an element id, and populate it with a list of items",
  "dropletBlock_dropdown_signatureOverride": "dropdown(dropdownID, option1, option2, ..., optionX)",
  "dropletBlock_equalityOperator_description": "Test for equality",
  "dropletBlock_equalityOperator_param0": "x",
  "dropletBlock_equalityOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_equalityOperator_param1": "y",
  "dropletBlock_equalityOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_equalityOperator_signatureOverride": "Equality operator",
  "dropletBlock_forLoop_i_0_4_description": "Do something multiple times",
  "dropletBlock_forLoop_i_0_4_signatureOverride": "for loop",
  "dropletBlock_functionParams_n_description": "Create a function with an argument",
  "dropletBlock_functionParams_n_signatureOverride": "Function with a Parameter",
  "dropletBlock_functionParams_none_description": "Create a function without an argument",
  "dropletBlock_functionParams_none_signatureOverride": "Function Definition",
  "dropletBlock_getAlpha_description": "Récupère l'alpha",
  "dropletBlock_getAlpha_param0": "imageData",
  "dropletBlock_getAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getAlpha_param1": "x",
  "dropletBlock_getAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param2": "y",
  "dropletBlock_getAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAttribute_description": "Gets the given attribute",
  "dropletBlock_getBlue_description": "Gets the given blue value",
  "dropletBlock_getBlue_param0": "imageData",
  "dropletBlock_getBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getBlue_param1": "x",
  "dropletBlock_getBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param2": "y",
  "dropletBlock_getBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getChecked_description": "Get the state of a checkbox or radio button",
  "dropletBlock_getChecked_param0": "identifiant",
  "dropletBlock_getDirection_description": "Get the turtle's direction (0 degrees is pointing up)",
  "dropletBlock_getGreen_description": "Gets the given green value",
  "dropletBlock_getGreen_param0": "imageData",
  "dropletBlock_getGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getGreen_param1": "x",
  "dropletBlock_getGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param2": "y",
  "dropletBlock_getGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getImageData_description": "Get the ImageData for a rectangle (x, y, width, height) within the active  canvas",
  "dropletBlock_getImageData_param0": "startX",
  "dropletBlock_getImageData_param0_description": "The x position in pixels starting from the upper left corner of image to start the capture.",
  "dropletBlock_getImageData_param1": "startY",
  "dropletBlock_getImageData_param1_description": "The y position in pixels starting from the upper left corner of image to start the capture.",
  "dropletBlock_getImageData_param2": "endX",
  "dropletBlock_getImageData_param2_description": "The x position in pixels starting from the upper left corner of image to end the capture.",
  "dropletBlock_getImageData_param3": "endY",
  "dropletBlock_getImageData_param3_description": "The y position in pixels starting from the upper left corner of image to end the capture.",
  "dropletBlock_getImageURL_description": "Get the URL associated with an image or image upload button",
  "dropletBlock_getImageURL_param0": "imageID",
  "dropletBlock_getImageURL_param0_description": "The id of the image element.",
  "dropletBlock_getKeyValue_description": "Reads the value associated with the key from the remote data store.",
  "dropletBlock_getKeyValue_param0": "key",
  "dropletBlock_getKeyValue_param0_description": "The name of the key to be retrieved.",
  "dropletBlock_getKeyValue_param1": "fonction",
  "dropletBlock_getRed_description": "Gets the given red value",
  "dropletBlock_getRed_param0": "imageData",
  "dropletBlock_getRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getRed_param1": "x",
  "dropletBlock_getRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param2": "y",
  "dropletBlock_getRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getText_description": "Get the text from the specified element",
  "dropletBlock_getText_param0": "identifiant",
  "dropletBlock_getTime_description": "Get the current time in milliseconds",
  "dropletBlock_getUserId_description": "Gets a unique identifier for the current user of this app.",
  "dropletBlock_getXPosition_description": "Récupère la position de l'élément sur l'axe des X",
  "dropletBlock_getXPosition_param0": "identifiant",
  "dropletBlock_getX_description": "Get the turtle's x position",
  "dropletBlock_getYPosition_description": "Récupère la position de l'élément sur l'axe des Y",
  "dropletBlock_getYPosition_param0": "identifiant",
  "dropletBlock_getY_description": "Get the turtle's y position",
  "dropletBlock_greaterThanOperator_description": "Compare deux nombres",
  "dropletBlock_greaterThanOperator_param0": "x",
  "dropletBlock_greaterThanOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_greaterThanOperator_param1": "y",
  "dropletBlock_greaterThanOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_greaterThanOperator_signatureOverride": "Greater than operator",
  "dropletBlock_hideElement_description": "Hide the element with the specified id",
  "dropletBlock_hideElement_param0": "identifiant",
  "dropletBlock_hideElement_param0_description": "The id of the element to hide.",
  "dropletBlock_hide_description": "Hide the turtle image",
  "dropletBlock_ifBlock_description": "Do something only if a condition is true",
  "dropletBlock_ifBlock_signatureOverride": "if statement",
  "dropletBlock_ifElseBlock_description": "Do something if a condition is true, otherwise do something else",
  "dropletBlock_ifElseBlock_signatureOverride": "if/else statement",
  "dropletBlock_imageUploadButton_description": "Create an image upload button and assign it an element id",
  "dropletBlock_image_description": "Create an image and assign it an element id",
  "dropletBlock_image_param0": "identifiant",
  "dropletBlock_image_param0_description": "The id of the image element.",
  "dropletBlock_image_param1": "url",
  "dropletBlock_image_param1_description": "The source URL of the image to be displayed on screen.",
  "dropletBlock_indexOf_description": "Returns the position of the first occurrence of searchValue within the string",
  "dropletBlock_indexOf_param0": "searchValue",
  "dropletBlock_indexOf_param0_description": "The string to search for.",
  "dropletBlock_indexOf_signatureOverride": "[string].indexOf(searchValue)",
  "dropletBlock_inequalityOperator_description": "Test for inequality",
  "dropletBlock_inequalityOperator_param0": "x",
  "dropletBlock_inequalityOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_inequalityOperator_param1": "y",
  "dropletBlock_inequalityOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_inequalityOperator_signatureOverride": "Inequality operator",
  "dropletBlock_innerHTML_description": "Set the inner HTML for the element with the specified id",
  "dropletBlock_insertItem_description": "Insert the item into the array at the specified position",
  "dropletBlock_insertItem_param0": "liste",
  "dropletBlock_insertItem_param0_description": "Le tableau à modifier.",
  "dropletBlock_insertItem_param1": "index",
  "dropletBlock_insertItem_param1_description": "The position to insert the item into the array.",
  "dropletBlock_insertItem_param2": "élément",
  "dropletBlock_insertItem_param2_description": "The item to insert into the array.",
  "dropletBlock_length_description": "The length of the string",
  "dropletBlock_length_signatureOverride": "[string].length",
  "dropletBlock_lessThanOperator_description": "Compare deux nombres",
  "dropletBlock_lessThanOperator_param0": "x",
  "dropletBlock_lessThanOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_lessThanOperator_param1": "y",
  "dropletBlock_lessThanOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_lessThanOperator_signatureOverride": "Less than operator",
  "dropletBlock_line_description": "Draw a line on the active canvas from x1, y1 to x2, y2",
  "dropletBlock_line_param0": "x1",
  "dropletBlock_line_param0_description": "The x position in pixels of the beginning of the line.",
  "dropletBlock_line_param1": "y1",
  "dropletBlock_line_param1_description": "The y position in pixels of the beginning of the line.",
  "dropletBlock_line_param2": "x2",
  "dropletBlock_line_param2_description": "The x position in pixels of the end of the line.",
  "dropletBlock_line_param3": "y2",
  "dropletBlock_line_param3_description": "The y position in pixels of the end of the line.",
  "dropletBlock_listLength_description": "The length of the array",
  "dropletBlock_listLength_signatureOverride": "[list].length",
  "dropletBlock_mathAbs_description": "Absolute value",
  "dropletBlock_mathAbs_param0": "x",
  "dropletBlock_mathAbs_param0_description": "An arbitrary number.",
  "dropletBlock_mathAbs_signatureOverride": "Math.abs(x)",
  "dropletBlock_mathMax_description": "Maximum value",
  "dropletBlock_mathMax_param0": "n1, n2,..., nX",
  "dropletBlock_mathMax_param0_description": "One or more numbers to compare.",
  "dropletBlock_mathMax_signatureOverride": "Math.max(n1, n2, ..., nX)",
  "dropletBlock_mathMin_description": "Minimum value",
  "dropletBlock_mathMin_param0": "n1, n2,..., nX",
  "dropletBlock_mathMin_param0_description": "One or more numbers to compare.",
  "dropletBlock_mathMin_signatureOverride": "Math.min(n1, n2, ..., nX)",
  "dropletBlock_mathRound_description": "Round to the nearest integer",
  "dropletBlock_mathRound_param0": "x",
  "dropletBlock_mathRound_param0_description": "An arbitrary number.",
  "dropletBlock_mathRound_signatureOverride": "Math.round(x)",
  "dropletBlock_moveBackward_description": "Move the turtle backward the specified distance",
  "dropletBlock_moveBackward_param0": "pixels",
  "dropletBlock_moveBackward_param0_description": "The number of pixels to move the turtle back in its current direction. If not provided, the turtle will move back 25 pixels",
  "dropletBlock_moveForward_description": "Move the turtle forward the specified distance",
  "dropletBlock_moveForward_param0": "pixels",
  "dropletBlock_moveForward_param0_description": "The number of pixels to move the turtle forward in its current direction. If not provided, the turtle will move forward 25 pixels",
  "dropletBlock_moveTo_description": "Move the turtle to the specified x and y coordinates",
  "dropletBlock_moveTo_param0": "x",
  "dropletBlock_moveTo_param0_description": "The x coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_param1": "y",
  "dropletBlock_moveTo_param1_description": "The y coordinate on the screen to move the turtle.",
  "dropletBlock_move_description": "Move the turtle by the specified x and y coordinates",
  "dropletBlock_move_param0": "x",
  "dropletBlock_move_param0_description": "The number of pixels to move the turtle right.",
  "dropletBlock_move_param1": "y",
  "dropletBlock_move_param1_description": "The number of pixels to move the turtle down.",
  "dropletBlock_multiplyOperator_description": "Multiplie deux nombres",
  "dropletBlock_multiplyOperator_signatureOverride": "Multiply operator",
  "dropletBlock_notOperator_description": "Logical NOT of a boolean",
  "dropletBlock_notOperator_signatureOverride": "AND boolean operator",
  "dropletBlock_onEvent_description": "Exécute du code en réponse à l'événement spécifié.",
  "dropletBlock_onEvent_param0": "identifiant",
  "dropletBlock_onEvent_param0_description": "The ID of the UI control to which this function applies.",
  "dropletBlock_onEvent_param1": "événement",
  "dropletBlock_onEvent_param1_description": "The type of event to respond to.",
  "dropletBlock_onEvent_param2": "fonction",
  "dropletBlock_onEvent_param2_description": "A function to execute.",
  "dropletBlock_orOperator_description": "Logical OR of two booleans",
  "dropletBlock_orOperator_signatureOverride": "OR boolean operator",
  "dropletBlock_penColor_description": "Set the turtle to the specified pen color",
  "dropletBlock_penColor_param0": "color",
  "dropletBlock_penColor_param0_description": "The color of the line left behind the turtle as it moves",
  "dropletBlock_penColour_description": "Set the turtle to the specified pen color",
  "dropletBlock_penColour_param0": "color",
  "dropletBlock_penDown_description": "Set down the turtle's pen",
  "dropletBlock_penRGB_description": "Sets the color of the line drawn behind the turtle as it moves to the specified RGB values",
  "dropletBlock_penRGB_param0": "rouge",
  "dropletBlock_penRGB_param0_description": "The amount of red (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penRGB_param1": "vert",
  "dropletBlock_penRGB_param1_description": "The amount of green (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penRGB_param2": "bleu",
  "dropletBlock_penRGB_param2_description": "The amount of blue (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penUp_description": "Pick up the turtle's pen",
  "dropletBlock_penWidth_description": "Set the turtle to the specified pen width",
  "dropletBlock_penWidth_param0": "largeur",
  "dropletBlock_penWidth_param0_description": "The diameter of the circles drawn behind the turtle as it moves",
  "dropletBlock_playSound_description": "Play the MP3, OGG, or WAV sound file from the specified URL",
  "dropletBlock_playSound_param0": "url",
  "dropletBlock_putImageData_description": "Set the ImageData for a rectangle within the active  canvas with x, y as the top left coordinates",
  "dropletBlock_putImageData_param0": "imageData",
  "dropletBlock_putImageData_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_putImageData_param1": "startX",
  "dropletBlock_putImageData_param1_description": "The x position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param2": "startY",
  "dropletBlock_putImageData_param2_description": "The y position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_radioButton_description": "Create a radio button and assign it an element id",
  "dropletBlock_radioButton_param0": "identifiant",
  "dropletBlock_radioButton_param0_description": "A unique identifier for the radio button. The id is used for referencing the radioButton control. For example, to assign event handlers.",
  "dropletBlock_radioButton_param1": "cochée",
  "dropletBlock_radioButton_param1_description": "Whether the radio button is initially checked.",
  "dropletBlock_radioButton_param2": "group",
  "dropletBlock_radioButton_param2_description": "The group that the radio button is associated with. Only one button in a group can be checked at a time.",
  "dropletBlock_randomNumber_max_description": "Get a random number between 0 and the specified maximum value",
  "dropletBlock_randomNumber_max_param0": "max",
  "dropletBlock_randomNumber_max_param0_description": "The maximum number returned",
  "dropletBlock_randomNumber_max_signatureOverride": "randomNumber(max)",
  "dropletBlock_randomNumber_min_max_description": "Get a random number between the specified minimum and maximum values",
  "dropletBlock_randomNumber_min_max_param0": "min",
  "dropletBlock_randomNumber_min_max_param0_description": "The minimum number returned",
  "dropletBlock_randomNumber_min_max_param1": "max",
  "dropletBlock_randomNumber_min_max_param1_description": "The maximum number returned",
  "dropletBlock_randomNumber_min_max_signatureOverride": "randomNumber(min, max)",
  "dropletBlock_readRecords_description": "Reads all records whose properties match those on the searchParams object.",
  "dropletBlock_readRecords_param0": "nomTableau",
  "dropletBlock_readRecords_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_readRecords_param1": "searchParams",
  "dropletBlock_readRecords_param2": "fonction",
  "dropletBlock_rect_description": "Draw a rectangle on the active  canvas with x, y, width, and height coordinates",
  "dropletBlock_rect_param0": "upperLeftX",
  "dropletBlock_rect_param0_description": "The x position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param1": "upperLeftY",
  "dropletBlock_rect_param1_description": "The y position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param2": "largeur",
  "dropletBlock_rect_param2_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_rect_param3": "hauteur",
  "dropletBlock_rect_param3_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_removeItem_description": "Remove the item at the specified position from the array",
  "dropletBlock_removeItem_param0": "liste",
  "dropletBlock_removeItem_param0_description": "Le tableau à modifier.",
  "dropletBlock_removeItem_param1": "index",
  "dropletBlock_removeItem_param1_description": "The position of the item to remove from the array.",
  "dropletBlock_return_description": "Return a value from a function",
  "dropletBlock_return_signatureOverride": "retour",
  "dropletBlock_setActiveCanvas_description": "Set the canvas id for subsequent canvas commands (only needed when there are multiple canvas elements)",
  "dropletBlock_setActiveCanvas_param0": "identifiantCanevas",
  "dropletBlock_setActiveCanvas_param0_description": "The id of the canvas element to activate.",
  "dropletBlock_setAlpha_description": "Sets the given value",
  "dropletBlock_setAlpha_param0": "imageData",
  "dropletBlock_setAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setAlpha_param1": "x",
  "dropletBlock_setAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param2": "y",
  "dropletBlock_setAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param3": "alphaValue",
  "dropletBlock_setAlpha_param3_description": "The amount of alpha (opacity) (from 0 to 255) to set in the pixel.",
  "dropletBlock_setAttribute_description": "Sets the given value",
  "dropletBlock_setBackground_description": "Définit l'image d'arrière-plan",
  "dropletBlock_setBlue_description": "Sets the given value",
  "dropletBlock_setBlue_param0": "imageData",
  "dropletBlock_setBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setBlue_param1": "x",
  "dropletBlock_setBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param2": "y",
  "dropletBlock_setBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param3": "blueValue",
  "dropletBlock_setBlue_param3_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setChecked_description": "Set the state of a checkbox or radio button",
  "dropletBlock_setChecked_param0": "identifiant",
  "dropletBlock_setChecked_param1": "cochée",
  "dropletBlock_setFillColor_description": "Set the fill color for the active  canvas",
  "dropletBlock_setFillColor_param0": "color",
  "dropletBlock_setFillColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setGreen_description": "Sets the given value",
  "dropletBlock_setGreen_param0": "imageData",
  "dropletBlock_setGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setGreen_param1": "x",
  "dropletBlock_setGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param2": "y",
  "dropletBlock_setGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param3": "greenValue",
  "dropletBlock_setGreen_param3_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setImageURL_description": "Set the URL for the specified image element id",
  "dropletBlock_setImageURL_param0": "identifiant",
  "dropletBlock_setImageURL_param0_description": "The id of the image element.",
  "dropletBlock_setImageURL_param1": "url",
  "dropletBlock_setImageURL_param1_description": "TThe source URL of the image to be displayed on screen.",
  "dropletBlock_setInterval_description": "Continue to execute code each time the specified number of milliseconds has elapsed",
  "dropletBlock_setInterval_param0": "fonction",
  "dropletBlock_setInterval_param0_description": "A function to execute.",
  "dropletBlock_setInterval_param1": "milliseconds",
  "dropletBlock_setInterval_param1_description": "The number of milliseconds between each execution of the function.",
  "dropletBlock_setKeyValue_description": "Saves the value associated with the key to the remote data store.",
  "dropletBlock_setKeyValue_param0": "key",
  "dropletBlock_setKeyValue_param0_description": "The name of the key to be stored.",
  "dropletBlock_setKeyValue_param1": "value",
  "dropletBlock_setKeyValue_param1_description": "The data to be stored.",
  "dropletBlock_setKeyValue_param2": "fonction",
  "dropletBlock_setKeyValue_param2_description": "A function that is asynchronously called when the call to setKeyValue is finished.",
  "dropletBlock_setParent_description": "Set an element to become a child of a parent element",
  "dropletBlock_setPosition_description": "Position an element with x, y, width, and height coordinates",
  "dropletBlock_setPosition_param0": "identifiant",
  "dropletBlock_setPosition_param1": "x",
  "dropletBlock_setPosition_param2": "y",
  "dropletBlock_setPosition_param3": "largeur",
  "dropletBlock_setPosition_param4": "hauteur",
  "dropletBlock_setRGB_description": "Sets the RGB color values (ranging from 0 to 255) of the pixel located at the given x and y position in the given image data to the input red, green, blue amounts",
  "dropletBlock_setRGB_param0": "imageData",
  "dropletBlock_setRGB_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setRGB_param1": "x",
  "dropletBlock_setRGB_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param2": "y",
  "dropletBlock_setRGB_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param3": "rouge",
  "dropletBlock_setRGB_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param4": "vert",
  "dropletBlock_setRGB_param4_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param5": "bleu",
  "dropletBlock_setRGB_param5_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param6": "alpha",
  "dropletBlock_setRGB_param6_description": "Optional. The amount of opacity (from 0 to 255) to set in the pixel. Defaults to 255 (full opacity).",
  "dropletBlock_setRed_description": "Sets the given value",
  "dropletBlock_setRed_param0": "imageData",
  "dropletBlock_setRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setRed_param1": "x",
  "dropletBlock_setRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param2": "y",
  "dropletBlock_setRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param3": "redValue",
  "dropletBlock_setRed_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setSpriteEmotion_description": "Définit l'humeur de l'acteur",
  "dropletBlock_setSpritePosition_description": "Déplace instantanément un acteur à l'emplacement spécifié.",
  "dropletBlock_setSpriteSpeed_description": "Définit la vitesse d'un acteur",
  "dropletBlock_setSprite_description": "Définit l'image de l'acteur",
  "dropletBlock_setStrokeColor_description": "Set the stroke color for the active  canvas",
  "dropletBlock_setStrokeColor_param0": "color",
  "dropletBlock_setStrokeColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setStrokeWidth_description": "Set the line width for the active  canvas",
  "dropletBlock_setStrokeWidth_param0": "largeur",
  "dropletBlock_setStrokeWidth_param0_description": "The width in pixels with which to draw lines, circles, and rectangles.",
  "dropletBlock_setStyle_description": "Add CSS style text to an element",
  "dropletBlock_setText_description": "Set the text for the specified element",
  "dropletBlock_setText_param0": "identifiant",
  "dropletBlock_setText_param1": "texte",
  "dropletBlock_setTimeout_description": "Set a timer and execute code when that number of milliseconds has elapsed",
  "dropletBlock_setTimeout_param0": "fonction",
  "dropletBlock_setTimeout_param0_description": "A function to execute.",
  "dropletBlock_setTimeout_param1": "milliseconds",
  "dropletBlock_setTimeout_param1_description": "The number of milliseconds to wait before executing the function.",
  "dropletBlock_showElement_description": "Show the element with the specified id",
  "dropletBlock_showElement_param0": "identifiant",
  "dropletBlock_showElement_param0_description": "The id of the element to hide.",
  "dropletBlock_show_description": "Show the turtle image at its current location",
  "dropletBlock_speed_description": "Change the execution speed of the program to the specified percentage value",
  "dropletBlock_speed_param0": "value",
  "dropletBlock_speed_param0_description": "The speed of the app's execution in the range of (1-100)",
  "dropletBlock_startWebRequest_description": "Request data from the internet and execute code when the request is complete",
  "dropletBlock_startWebRequest_param0": "url",
  "dropletBlock_startWebRequest_param0_description": "The web address of a service that returns data.",
  "dropletBlock_startWebRequest_param1": "fonction",
  "dropletBlock_startWebRequest_param1_description": "A function to execute.",
  "dropletBlock_subtractOperator_description": "Subtract two numbers",
  "dropletBlock_subtractOperator_signatureOverride": "Subtract operator",
  "dropletBlock_substring_description": "Returns a string extracted between the start and end positions of the original string",
  "dropletBlock_substring_param0": "start",
  "dropletBlock_substring_param0_description": "The position to start the extraction.",
  "dropletBlock_substring_param1": "fin",
  "dropletBlock_substring_param1_description": "The position (up to, but not including) to stop the extraction.",
  "dropletBlock_substring_signatureOverride": "[string].substring(start, end)",
  "dropletBlock_textInput_description": "Create a text input and assign it an element id",
  "dropletBlock_textInput_param0": "inputId",
  "dropletBlock_textInput_param1": "texte",
  "dropletBlock_textLabel_description": "Create a text label, assign it an element id, and bind it to an associated element",
  "dropletBlock_textLabel_param0": "labelId",
  "dropletBlock_textLabel_param0_description": "A unique identifier for the label control. The id is used for referencing the created label. For example, to assign event handlers.",
  "dropletBlock_textLabel_param1": "texte",
  "dropletBlock_textLabel_param1_description": "The value to display for the label.",
  "dropletBlock_textLabel_param2": "forId",
  "dropletBlock_textLabel_param2_description": "The id to associate the label with. Clicking the label is the same as clicking on the control.",
  "dropletBlock_throw_description": "Lance un projectile depuis l'acteur spécifié.",
  "dropletBlock_toLowerCase_description": "Converts the original string to use all lowercase letters and returns it as a new string",
  "dropletBlock_toLowerCase_signatureOverride": "[string].toLowerCase()",
  "dropletBlock_toUpperCase_description": "Converts the original string to use all uppercase letters and returns it as a new string",
  "dropletBlock_toUpperCase_signatureOverride": "[string].toUpperCase()",
  "dropletBlock_turnLeft_description": "Turn the turtle counterclockwise by the specified number of degrees",
  "dropletBlock_turnLeft_param0": "angle",
  "dropletBlock_turnLeft_param0_description": "The angle to turn left.",
  "dropletBlock_turnRight_description": "Turn the turtle clockwise by the specified number of degrees",
  "dropletBlock_turnRight_param0": "angle",
  "dropletBlock_turnRight_param0_description": "The angle to turn right.",
  "dropletBlock_turnTo_description": "Turn the turtle to the specified direction (0 degrees is pointing up)",
  "dropletBlock_turnTo_param0": "angle",
  "dropletBlock_turnTo_param0_description": "The new angle to set the turtle's direction to.",
  "dropletBlock_updateRecord_description": "Updates a record, identified by record.id.",
  "dropletBlock_updateRecord_param0": "nomTableau",
  "dropletBlock_updateRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_updateRecord_param1": "entrée",
  "dropletBlock_updateRecord_param2": "fonction",
  "dropletBlock_vanish_description": "Fait disparaître l'acteur.",
  "dropletBlock_whileBlock_description": "Repeat something while a condition is true",
  "dropletBlock_whileBlock_signatureOverride": "while loop",
  "dropletBlock_write_description": "Create a block of text",
  "dropletBlock_write_param0": "texte",
  "dropletBlock_write_param0_description": "The text or HTML you want appended to the bottom of your application",
  "emptyBlocksErrorMsg": "Le bloc « Répéter » ou « si » doit contenir d'autres blocs pour fonctionner. Assurez-vous que le bloc interne s'insère correctement à l'intérieur du bloc conteneur.",
  "emptyFunctionBlocksErrorMsg": "Le bloc « Fonction » doit contenir d'autres blocs pour fonctionner.",
  "emptyFunctionalBlock": "Un de vos blocs ne contient pas d'entrée.",
  "end": "fin",
  "errorEmptyFunctionBlockModal": "Il faut des blocs dans votre définition de fonction. Cliquez sur \"modifier\" puis faites glisser les blocs dans le bloc vert.",
  "errorIncompleteBlockInFunction": "Cliquez sur \"modifier\" pour vous assurer qu'il ne manque pas de blocs dans votre définition de fonction.",
  "errorParamInputUnattached": "N'oubliez pas de joindre un bloc à l'entrée de chaque paramètre sur le bloc de fonction dans votre espace de travail.",
  "errorQuestionMarksInNumberField": "Essayez de remplacer \"???\" avec un nombre.",
  "errorRequiredParamsMissing": "Créez un paramètre pour votre fonction en cliquant sur « modifier » et en ajoutant les paramètres nécessaires. Faites glisser les nouveaux blocs de paramètres dans votre définition de fonction.",
  "errorUnusedFunction": "Vous avez créé une fonction mais ne l'avez pas ajoutée à votre espace de travail ! Cliquez « Fonctions » dans la boîte à outils et assurez-vous d'utiliser votre fonction dans votre programme.",
  "errorUnusedParam": "Vous avez ajouté un bloc de paramètres, mais il n'a pas été utilisé dans la définition. Assurez-vous d'utiliser votre paramètre en cliquant sur « modifier » et de placer le bloc de paramètres dans le bloc vert.",
  "extraTopBlocks": "Vous avez des blocs non attachés. Est-ce que vous vouliez les attacher au bloc \"lors du lancement\" ?",
  "extraTopBlocksWhenRun": "You have unattached blocks. Did you mean to attach these to the \"when run\" block?",
  "finalStage": "Félicitations ! Tu as terminé l'étape finale.",
  "finalStageTrophies": "Félicitations ! Tu as terminé l'étape finale et gagné {numTrophies, plural, one {un trophée} other {# trophées}}.",
  "finish": "Terminer",
  "generatedCodeInfo": "Même les plus grandes univesités enseignent la programmation basée sur les blocs. (ex., {berkeleyLink}, {harvardLink}). Mais sous le capot, les blocs que vous avez assemblés peuvent aussi être affichés en Javascript, le langage de programmation le plus utilisé au monde:",
  "genericFeedback": "Observez le résultat et essayez de corriger les erreurs.",
  "hashError": "Désolé, '%1' ne correspond à aucun programme enregistré.",
  "help": "Aide",
  "hideToolbox": "(Hide)",
  "hintHeader": "Voici une astuce :",
  "hintRequest": "Voir l'astuce",
  "hintTitle": "Indice :",
  "infinity": "Infini",
  "jump": "sauter",
  "keepPlaying": "Continuer à jouer",
  "levelIncompleteError": "Vous utilisez tous les types nécessaires de blocs, mais pas de la bonne manière.",
  "listVariable": "liste",
  "makeYourOwnFlappy": "Réalisez votre propre Flappy Bird",
  "missingBlocksErrorMsg": "Essayez un ou plusieurs des blocs ci-dessous pour résoudre ce puzzle.",
  "nextLevel": "Félicitations ! Tu as terminé le Puzzle {puzzleNumber}.",
  "nextLevelTrophies": "Félicitations ! Tu as terminé le Puzzle {puzzleNumber} et gagné {numTrophies, plural, one {un trophée} other {# trophées}}.",
  "nextPuzzle": "Next Puzzle",
  "nextStage": "Félicitations ! Vous avez terminé {stageName}.",
  "nextStageTrophies": "Félicitations ! Vous avez terminé {stageName} et gagné {numTrophies, plural, one {un trophée} other {# trophées}}.",
  "numBlocksNeeded": "Félicitations !  Vous avez terminé le Puzzle {puzzleNumber}. (Toutefois, vous auriez pu utiliser seulement {numBlocks, plural, one {1 bloc} other {# blocs}}.)",
  "numLinesOfCodeWritten": "Tu viens d'écrire {numLines, plural, one {1 ligne} other {# lignes}} de code !",
  "openWorkspace": "Comment ça marche",
  "orientationLock": "Désactivez le verrouillage de l'orientation dans les réglages de votre appareil.",
  "play": "jouer",
  "print": "Imprimer",
  "puzzleTitle": "Puzzle {puzzle_number} sur {stage_total}",
  "repeat": "répéter",
  "resetProgram": "Réinitialiser",
  "rotateText": "Tournez votre appareil.",
  "runProgram": "Démarrer",
  "runTooltip": "Exécuter le programme défini par les blocs dans l'espace de travail.",
  "saveToGallery": "Sauvegarder dans la galerie",
  "savedToGallery": "Enregistré dans la galerie !",
  "score": "score",
  "shareFailure": "Désolé, nous ne pouvons pas partager ce programme.",
  "showBlocksHeader": "Afficher les blocs",
  "showCodeHeader": "Afficher le code",
  "showGeneratedCode": "Afficher le code",
  "showToolbox": "Show Toolbox",
  "signup": "Inscrivez-vous au cours d'introduction",
  "stringEquals": "Texte = ?",
  "subtitle": "un environnement de programmation visuelle",
  "textVariable": "texte",
  "toggleBlocksErrorMsg": "Vous devez corriger une erreur dans votre programme avant qu'il ne puisse être présenté sous forme de blocs.",
  "tooFewBlocksMsg": "Vous utilisez tous les types des blocs nécessaires, mais essayez d'utiliser plus de ces types de blocs pour compléter ce puzzle.",
  "tooManyBlocksMsg": "Ce puzzle peut être résolu avec <x id ='START_SPAN'/><x id='END_SPAN'/> blocs.",
  "tooMuchWork": "Vous m'avez fait faire beaucoup de travail !  Pourriez-vous essayer en répétant moins de fois ?",
  "toolboxHeader": "blocs",
  "toolboxHeaderDroplet": "Toolbox",
  "totalNumLinesOfCodeWritten": "Production totale : {numLines, plural, one {1 ligne} other {# lignes}} de code.",
  "tryAgain": "Réessayer",
  "tryHOC": "Essayez l'Heure de Code",
  "wantToLearn": "Vous souhaitez apprendre à coder ?",
  "watchVideo": "Voir la vidéo",
  "when": "lorsque",
  "whenRun": "lors du lancement",
  "workspaceHeaderShort": "Espace de travail :"
}