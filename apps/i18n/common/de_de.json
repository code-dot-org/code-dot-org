{
  "and": "und",
  "backToPreviousLevel": "Zurück zum vorherigen Level",
  "blocklyMessage": "Blockly",
  "blocks": "Blöcke",
  "booleanFalse": "falsch",
  "booleanTrue": "wahr",
  "catActions": "Aktionen",
  "catColour": "Farbe",
  "catLists": "Listen",
  "catLogic": "Logik",
  "catLoops": "Schleifen",
  "catMath": "Mathematik",
  "catProcedures": "Funktionen",
  "catText": "Text",
  "catVariables": "Variablen",
  "clearPuzzle": "Neu starten",
  "clearPuzzleConfirm": "Diese Aktion wird die Aufgabe in den Ausgangszustand versetzen und alle Bausteine, die du hinzugefügt oder verändert hast, löschen.",
  "clearPuzzleConfirmHeader": "Bist du dir sicher das du neu anfangen möchtest?",
  "codeMode": "Code",
  "codeTooltip": "Erzeugten JavaScript-Code ansehen.",
  "continue": "Weiter",
  "defaultTwitterText": "Schau dir an was ich gemacht habe",
  "designMode": "Entwurf",
  "designModeHeader": "Entwurfsmodus",
  "dialogCancel": "Abbrechen",
  "dialogOK": "OK",
  "directionEastLetter": "O",
  "directionNorthLetter": "N",
  "directionSouthLetter": "S",
  "directionWestLetter": "W",
  "dropletBlock_addOperator_description": "Füge 2 Nummern hinzu",
  "dropletBlock_addOperator_signatureOverride": "Füge einen Operator hinzu",
  "dropletBlock_andOperator_description": "Es wird nur true zurückgegeben, wenn beide Ausdrücke true sind. Ansonsten wird false zurückgegeben",
  "dropletBlock_andOperator_signatureOverride": "AND boolean operator",
  "dropletBlock_appendItem_description": "Füge das Element am Ende des Arrays ein",
  "dropletBlock_appendItem_param0": "Liste",
  "dropletBlock_appendItem_param0_description": "The array to be modified.",
  "dropletBlock_appendItem_param1": "Element",
  "dropletBlock_appendItem_param1_description": "The item to add to the end of the array.",
  "dropletBlock_arcLeft_description": "Move the turtle in a counterclockwise arc using the specified number of degrees and radius",
  "dropletBlock_arcLeft_param0": "Winkel",
  "dropletBlock_arcLeft_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcLeft_param1": "Radius",
  "dropletBlock_arcLeft_param1_description": "The radius of the circle that is placed left of the turtle. Must be >= 0.",
  "dropletBlock_arcRight_description": "Move the turtle in a clockwise arc using the specified number of degrees and radius",
  "dropletBlock_arcRight_param0": "Winkel",
  "dropletBlock_arcRight_param0_description": "The angle along the circle to move.",
  "dropletBlock_arcRight_param1": "Radius",
  "dropletBlock_arcRight_param1_description": "The radius of the circle that is placed right of the turtle. Must be >= 0.",
  "dropletBlock_assign_x_description": "Reassign a variable",
  "dropletBlock_assign_x_param0": "x",
  "dropletBlock_assign_x_param0_description": "The variable name being assigned to",
  "dropletBlock_assign_x_param1": "Wert",
  "dropletBlock_assign_x_param1_description": "The value the variable is being assigned to.",
  "dropletBlock_assign_x_signatureOverride": "Assign a variable",
  "dropletBlock_button_description": "Create a button and assign it an element id",
  "dropletBlock_button_param0": "buttonId",
  "dropletBlock_button_param0_description": "A unique identifier for the button. The id is used for referencing the created button. For example, to assign event handlers.",
  "dropletBlock_button_param1": "Text",
  "dropletBlock_button_param1_description": "The text displayed within the button.",
  "dropletBlock_callMyFunction_description": "Verwenden Sie eine Funktion ohne Argument",
  "dropletBlock_callMyFunction_n_description": "Verwenden Sie eine Funktion mit Argument",
  "dropletBlock_callMyFunction_n_signatureOverride": "Eine Funktion mit Parametern aufrufen",
  "dropletBlock_callMyFunction_signatureOverride": "Eine Funktion aufrufen",
  "dropletBlock_changeScore_description": "Addiere oder subtrahiere einen Punkt von der Punktzahl.",
  "dropletBlock_checkbox_description": "Create a checkbox and assign it an element id",
  "dropletBlock_checkbox_param0": "checkboxId",
  "dropletBlock_checkbox_param1": "checked",
  "dropletBlock_circle_description": "Draw a circle on the active  canvas with the specified coordinates for center (x, y) and radius",
  "dropletBlock_circle_param0": "centerX",
  "dropletBlock_circle_param0_description": "The x position in pixels of the center of the circle.",
  "dropletBlock_circle_param1": "centerY",
  "dropletBlock_circle_param1_description": "The y position in pixels of the center of the circle.",
  "dropletBlock_circle_param2": "Radius",
  "dropletBlock_circle_param2_description": "The radius of the circle, in pixels.",
  "dropletBlock_clearCanvas_description": "Clear all data on the active canvas",
  "dropletBlock_clearInterval_description": "Clear an existing interval timer by passing in the value returned from setInterval()",
  "dropletBlock_clearInterval_param0": "Intervall",
  "dropletBlock_clearInterval_param0_description": "The value returned by the setInterval function to clear.",
  "dropletBlock_clearTimeout_description": "Clear an existing timer by passing in the value returned from setTimeout()",
  "dropletBlock_clearTimeout_param0": "Zeitüberschreitung",
  "dropletBlock_clearTimeout_param0_description": "The value returned by the setTimeout function to cancel.",
  "dropletBlock_console.log_description": "Log a message or variable to the output window",
  "dropletBlock_console.log_param0": "Nachricht",
  "dropletBlock_console.log_param0_description": "The message string to display in the console.",
  "dropletBlock_container_description": "Create a division container with the specified element id, and optionally set its inner HTML",
  "dropletBlock_createCanvas_description": "Create a canvas with the specified id, and optionally set width and height dimensions",
  "dropletBlock_createCanvas_param0": "canvasId",
  "dropletBlock_createCanvas_param0_description": "The id of the new canvas element.",
  "dropletBlock_createCanvas_param1": "Breite",
  "dropletBlock_createCanvas_param1_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_createCanvas_param2": "Höhe",
  "dropletBlock_createCanvas_param2_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_createRecord_description": "Creates a new record in the specified table.",
  "dropletBlock_createRecord_param0": "table",
  "dropletBlock_createRecord_param0_description": "The name of the table the record should be added to. `tableName` gets created if it doesn't exist.",
  "dropletBlock_createRecord_param1": "record",
  "dropletBlock_createRecord_param2": "onSuccess",
  "dropletBlock_declareAssign_list_abde_description": "Declare a variable and assigns an array to it with the given initial values",
  "dropletBlock_declareAssign_list_abde_signatureOverride": "Declare and assign an array to a variable",
  "dropletBlock_declareAssign_str_hello_world_description": "Declare a variable and assign a string to it",
  "dropletBlock_declareAssign_str_hello_world_signatureOverride": "Declare and assign a string to a variable",
  "dropletBlock_declareAssign_x_array_1_4_description": "Create a variable and initialize it as an array",
  "dropletBlock_declareAssign_x_array_1_4_param0": "x",
  "dropletBlock_declareAssign_x_array_1_4_param0_description": "The name you will use in the program to reference the variable",
  "dropletBlock_declareAssign_x_array_1_4_param1": "1,2,3,4",
  "dropletBlock_declareAssign_x_array_1_4_param1_description": "The initial values to the array",
  "dropletBlock_declareAssign_x_array_1_4_signatureOverride": "Declare a variable assigned to an array",
  "dropletBlock_declareAssign_x_description": "Create a variable for the first time",
  "dropletBlock_declareAssign_x_param0": "x",
  "dropletBlock_declareAssign_x_param0_description": "The name you will use in the program to reference the variable",
  "dropletBlock_declareAssign_x_param1": "0",
  "dropletBlock_declareAssign_x_param1_description": "The initial value of the variable",
  "dropletBlock_declareAssign_x_prompt_description": "Create a variable and assign it a value by displaying a prompt",
  "dropletBlock_declareAssign_x_prompt_param0": "x",
  "dropletBlock_declareAssign_x_prompt_param0_description": "The name you will use in the program to reference the variable",
  "dropletBlock_declareAssign_x_prompt_param1": "\"Wert eingeben\"",
  "dropletBlock_declareAssign_x_prompt_param1_description": "The string the user will see in the pop up when asked to enter a value",
  "dropletBlock_declareAssign_x_prompt_signatureOverride": "Prompt the user for a value and store it",
  "dropletBlock_declareAssign_x_signatureOverride": "Declare a variable",
  "dropletBlock_deleteElement_description": "Delete the element with the specified id",
  "dropletBlock_deleteElement_param0": "id",
  "dropletBlock_deleteElement_param0_description": "The id of the element to delete.",
  "dropletBlock_deleteRecord_description": "Deletes a record, identified by record.id.",
  "dropletBlock_deleteRecord_param0": "table",
  "dropletBlock_deleteRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_deleteRecord_param1": "record",
  "dropletBlock_deleteRecord_param2": "onSuccess",
  "dropletBlock_deleteRecord_param2_description": "A function that is asynchronously called when the call to deleteRecord() is finished.",
  "dropletBlock_divideOperator_description": "Zwei Zahlen teilen",
  "dropletBlock_divideOperator_signatureOverride": "Divide operator",
  "dropletBlock_dot_description": "Draw a dot in the turtle's location with the specified radius",
  "dropletBlock_dot_param0": "Radius",
  "dropletBlock_dot_param0_description": "The radius of the dot to draw",
  "dropletBlock_drawImage_description": "Draw an image on the active  canvas with the specified image element and x, y as the top left coordinates",
  "dropletBlock_drawImage_param0": "id",
  "dropletBlock_drawImage_param0_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param1": "x",
  "dropletBlock_drawImage_param1_description": "The x position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param2": "y",
  "dropletBlock_drawImage_param2_description": "The y position in pixels of the upper left corner of the image to draw.",
  "dropletBlock_drawImage_param3": "Breite",
  "dropletBlock_drawImage_param4": "Höhe",
  "dropletBlock_dropdown_description": "Create a dropdown, assign it an element id, and populate it with a list of items",
  "dropletBlock_dropdown_signatureOverride": "dropdown(dropdownID, option1, option2, ..., optionX)",
  "dropletBlock_equalityOperator_description": "Test for equality",
  "dropletBlock_equalityOperator_param0": "x",
  "dropletBlock_equalityOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_equalityOperator_param1": "y",
  "dropletBlock_equalityOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_equalityOperator_signatureOverride": "Equality operator",
  "dropletBlock_forLoop_i_0_4_description": "Do something multiple times",
  "dropletBlock_forLoop_i_0_4_signatureOverride": "for loop",
  "dropletBlock_functionParams_n_description": "Create a function with an argument",
  "dropletBlock_functionParams_n_signatureOverride": "Function with a Parameter",
  "dropletBlock_functionParams_none_description": "Create a function without an argument",
  "dropletBlock_functionParams_none_signatureOverride": "Function Definition",
  "dropletBlock_getAlpha_description": "Gets the alpha",
  "dropletBlock_getAlpha_param0": "imageData",
  "dropletBlock_getAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getAlpha_param1": "x",
  "dropletBlock_getAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAlpha_param2": "y",
  "dropletBlock_getAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getAttribute_description": "Gets the given attribute",
  "dropletBlock_getBlue_description": "Gets the given blue value",
  "dropletBlock_getBlue_param0": "imageData",
  "dropletBlock_getBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getBlue_param1": "x",
  "dropletBlock_getBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getBlue_param2": "y",
  "dropletBlock_getBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getChecked_description": "Get the state of a checkbox or radio button",
  "dropletBlock_getChecked_param0": "id",
  "dropletBlock_getDirection_description": "Get the turtle's direction (0 degrees is pointing up)",
  "dropletBlock_getGreen_description": "Gets the given green value",
  "dropletBlock_getGreen_param0": "imageData",
  "dropletBlock_getGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getGreen_param1": "x",
  "dropletBlock_getGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getGreen_param2": "y",
  "dropletBlock_getGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getImageData_description": "Get the ImageData for a rectangle (x, y, width, height) within the active  canvas",
  "dropletBlock_getImageData_param0": "startX",
  "dropletBlock_getImageData_param0_description": "The x position in pixels starting from the upper left corner of image to start the capture.",
  "dropletBlock_getImageData_param1": "startY",
  "dropletBlock_getImageData_param1_description": "The y position in pixels starting from the upper left corner of image to start the capture.",
  "dropletBlock_getImageData_param2": "endX",
  "dropletBlock_getImageData_param2_description": "The x position in pixels starting from the upper left corner of image to end the capture.",
  "dropletBlock_getImageData_param3": "endY",
  "dropletBlock_getImageData_param3_description": "The y position in pixels starting from the upper left corner of image to end the capture.",
  "dropletBlock_getImageURL_description": "Get the URL associated with an image or image upload button",
  "dropletBlock_getImageURL_param0": "imageID",
  "dropletBlock_getImageURL_param0_description": "The id of the image element.",
  "dropletBlock_getKeyValue_description": "Reads the value associated with the key from the remote data store.",
  "dropletBlock_getKeyValue_param0": "Schlüssel",
  "dropletBlock_getKeyValue_param0_description": "The name of the key to be retrieved.",
  "dropletBlock_getKeyValue_param1": "callbackFunction",
  "dropletBlock_getRed_description": "Gets the given red value",
  "dropletBlock_getRed_param0": "imageData",
  "dropletBlock_getRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_getRed_param1": "x",
  "dropletBlock_getRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_getRed_param2": "y",
  "dropletBlock_getRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_getText_description": "Get the text from the specified element",
  "dropletBlock_getText_param0": "id",
  "dropletBlock_getTime_description": "Get the current time in milliseconds",
  "dropletBlock_getUserId_description": "Gets a unique identifier for the current user of this app.",
  "dropletBlock_getXPosition_description": "Get the element's x position",
  "dropletBlock_getXPosition_param0": "id",
  "dropletBlock_getX_description": "Get the turtle's x position",
  "dropletBlock_getYPosition_description": "Get the element's y position",
  "dropletBlock_getYPosition_param0": "id",
  "dropletBlock_getY_description": "Get the turtle's y position",
  "dropletBlock_greaterThanOperator_description": "Compare two numbers",
  "dropletBlock_greaterThanOperator_param0": "x",
  "dropletBlock_greaterThanOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_greaterThanOperator_param1": "y",
  "dropletBlock_greaterThanOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_greaterThanOperator_signatureOverride": "Greater than operator",
  "dropletBlock_hideElement_description": "Hide the element with the specified id",
  "dropletBlock_hideElement_param0": "id",
  "dropletBlock_hideElement_param0_description": "The id of the element to hide.",
  "dropletBlock_hide_description": "Hide the turtle image",
  "dropletBlock_ifBlock_description": "Do something only if a condition is true",
  "dropletBlock_ifBlock_signatureOverride": "if statement",
  "dropletBlock_ifElseBlock_description": "Do something if a condition is true, otherwise do something else",
  "dropletBlock_ifElseBlock_signatureOverride": "if/else statement",
  "dropletBlock_imageUploadButton_description": "Create an image upload button and assign it an element id",
  "dropletBlock_image_description": "Create an image and assign it an element id",
  "dropletBlock_image_param0": "id",
  "dropletBlock_image_param0_description": "The id of the image element.",
  "dropletBlock_image_param1": "URL",
  "dropletBlock_image_param1_description": "The source URL of the image to be displayed on screen.",
  "dropletBlock_indexOf_description": "Returns the position of the first occurrence of searchValue within the string",
  "dropletBlock_indexOf_param0": "searchValue",
  "dropletBlock_indexOf_param0_description": "The string to search for.",
  "dropletBlock_indexOf_signatureOverride": "[string].indexOf(searchValue)",
  "dropletBlock_inequalityOperator_description": "Test for inequality",
  "dropletBlock_inequalityOperator_param0": "x",
  "dropletBlock_inequalityOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_inequalityOperator_param1": "y",
  "dropletBlock_inequalityOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_inequalityOperator_signatureOverride": "Inequality operator",
  "dropletBlock_innerHTML_description": "Set the inner HTML for the element with the specified id",
  "dropletBlock_insertItem_description": "Insert the item into the array at the specified position",
  "dropletBlock_insertItem_param0": "Liste",
  "dropletBlock_insertItem_param0_description": "The array to be modified.",
  "dropletBlock_insertItem_param1": "index",
  "dropletBlock_insertItem_param1_description": "The position to insert the item into the array.",
  "dropletBlock_insertItem_param2": "Element",
  "dropletBlock_insertItem_param2_description": "The item to insert into the array.",
  "dropletBlock_length_description": "The length of the string",
  "dropletBlock_length_signatureOverride": "[string].length",
  "dropletBlock_lessThanOperator_description": "Compare two numbers",
  "dropletBlock_lessThanOperator_param0": "x",
  "dropletBlock_lessThanOperator_param0_description": "The first value to use for comparison.",
  "dropletBlock_lessThanOperator_param1": "y",
  "dropletBlock_lessThanOperator_param1_description": "The second value to use for comparison.",
  "dropletBlock_lessThanOperator_signatureOverride": "Less than operator",
  "dropletBlock_line_description": "Draw a line on the active canvas from x1, y1 to x2, y2",
  "dropletBlock_line_param0": "x1",
  "dropletBlock_line_param0_description": "The x position in pixels of the beginning of the line.",
  "dropletBlock_line_param1": "y1",
  "dropletBlock_line_param1_description": "The y position in pixels of the beginning of the line.",
  "dropletBlock_line_param2": "x2",
  "dropletBlock_line_param2_description": "The x position in pixels of the end of the line.",
  "dropletBlock_line_param3": "y2",
  "dropletBlock_line_param3_description": "The y position in pixels of the end of the line.",
  "dropletBlock_listLength_description": "The length of the array",
  "dropletBlock_listLength_signatureOverride": "[list].length",
  "dropletBlock_mathAbs_description": "Absolute value",
  "dropletBlock_mathAbs_param0": "x",
  "dropletBlock_mathAbs_param0_description": "An arbitrary number.",
  "dropletBlock_mathAbs_signatureOverride": "Math.abs(x)",
  "dropletBlock_mathMax_description": "Maximum value",
  "dropletBlock_mathMax_param0": "n1, n2,..., nX",
  "dropletBlock_mathMax_param0_description": "One or more numbers to compare.",
  "dropletBlock_mathMax_signatureOverride": "Math.max(n1, n2, ..., nX)",
  "dropletBlock_mathMin_description": "Minimum value",
  "dropletBlock_mathMin_param0": "n1, n2,..., nX",
  "dropletBlock_mathMin_param0_description": "One or more numbers to compare.",
  "dropletBlock_mathMin_signatureOverride": "Math.min(n1, n2, ..., nX)",
  "dropletBlock_mathRound_description": "Round to the nearest integer",
  "dropletBlock_mathRound_param0": "x",
  "dropletBlock_mathRound_param0_description": "An arbitrary number.",
  "dropletBlock_mathRound_signatureOverride": "Math.round(x)",
  "dropletBlock_moveBackward_description": "Move the turtle backward the specified distance",
  "dropletBlock_moveBackward_param0": "Pixel",
  "dropletBlock_moveBackward_param0_description": "The number of pixels to move the turtle back in its current direction. If not provided, the turtle will move back 25 pixels",
  "dropletBlock_moveForward_description": "Move the turtle forward the specified distance",
  "dropletBlock_moveForward_param0": "Pixel",
  "dropletBlock_moveForward_param0_description": "The number of pixels to move the turtle forward in its current direction. If not provided, the turtle will move forward 25 pixels",
  "dropletBlock_moveTo_description": "Move the turtle to the specified x and y coordinates",
  "dropletBlock_moveTo_param0": "x",
  "dropletBlock_moveTo_param0_description": "The x coordinate on the screen to move the turtle.",
  "dropletBlock_moveTo_param1": "y",
  "dropletBlock_moveTo_param1_description": "The y coordinate on the screen to move the turtle.",
  "dropletBlock_move_description": "Move the turtle by the specified x and y coordinates",
  "dropletBlock_move_param0": "x",
  "dropletBlock_move_param0_description": "The number of pixels to move the turtle right.",
  "dropletBlock_move_param1": "y",
  "dropletBlock_move_param1_description": "The number of pixels to move the turtle down.",
  "dropletBlock_multiplyOperator_description": "Multiply two numbers",
  "dropletBlock_multiplyOperator_signatureOverride": "Multiply operator",
  "dropletBlock_notOperator_description": "Logical NOT of a boolean",
  "dropletBlock_notOperator_signatureOverride": "AND boolean operator",
  "dropletBlock_onEvent_description": "Führe den Code als Reaktion zu einem bestimmten Ereignis aus.",
  "dropletBlock_onEvent_param0": "id",
  "dropletBlock_onEvent_param0_description": "The ID of the UI control to which this function applies.",
  "dropletBlock_onEvent_param1": "Typ",
  "dropletBlock_onEvent_param1_description": "The type of event to respond to.",
  "dropletBlock_onEvent_param2": "function",
  "dropletBlock_onEvent_param2_description": "A function to execute.",
  "dropletBlock_orOperator_description": "Logical OR of two booleans",
  "dropletBlock_orOperator_signatureOverride": "OR boolean operator",
  "dropletBlock_penColor_description": "Set the turtle to the specified pen color",
  "dropletBlock_penColor_param0": "Farbe",
  "dropletBlock_penColor_param0_description": "The color of the line left behind the turtle as it moves",
  "dropletBlock_penColour_description": "Set the turtle to the specified pen color",
  "dropletBlock_penColour_param0": "Farbe",
  "dropletBlock_penDown_description": "Set down the turtle's pen",
  "dropletBlock_penRGB_description": "Sets the color of the line drawn behind the turtle as it moves to the specified RGB values",
  "dropletBlock_penRGB_param0": "rot",
  "dropletBlock_penRGB_param0_description": "The amount of red (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penRGB_param1": "grün",
  "dropletBlock_penRGB_param1_description": "The amount of green (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penRGB_param2": "blau",
  "dropletBlock_penRGB_param2_description": "The amount of blue (ranging from 0 to 255) to set for the pen color",
  "dropletBlock_penUp_description": "Pick up the turtle's pen",
  "dropletBlock_penWidth_description": "Set the turtle to the specified pen width",
  "dropletBlock_penWidth_param0": "Breite",
  "dropletBlock_penWidth_param0_description": "The diameter of the circles drawn behind the turtle as it moves",
  "dropletBlock_playSound_description": "Play the MP3, OGG, or WAV sound file from the specified URL",
  "dropletBlock_playSound_param0": "URL",
  "dropletBlock_putImageData_description": "Set the ImageData for a rectangle within the active  canvas with x, y as the top left coordinates",
  "dropletBlock_putImageData_param0": "imageData",
  "dropletBlock_putImageData_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_putImageData_param1": "startX",
  "dropletBlock_putImageData_param1_description": "The x position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_putImageData_param2": "startY",
  "dropletBlock_putImageData_param2_description": "The y position in pixels starting from the upper left corner of image to place the data on the canvas.",
  "dropletBlock_radioButton_description": "Create a radio button and assign it an element id",
  "dropletBlock_radioButton_param0": "id",
  "dropletBlock_radioButton_param0_description": "A unique identifier for the radio button. The id is used for referencing the radioButton control. For example, to assign event handlers.",
  "dropletBlock_radioButton_param1": "checked",
  "dropletBlock_radioButton_param1_description": "Whether the radio button is initially checked.",
  "dropletBlock_radioButton_param2": "Gruppe",
  "dropletBlock_radioButton_param2_description": "The group that the radio button is associated with. Only one button in a group can be checked at a time.",
  "dropletBlock_randomNumber_max_description": "Get a random number between 0 and the specified maximum value",
  "dropletBlock_randomNumber_max_param0": "max",
  "dropletBlock_randomNumber_max_param0_description": "The maximum number returned",
  "dropletBlock_randomNumber_max_signatureOverride": "randomNumber(max)",
  "dropletBlock_randomNumber_min_max_description": "Get a random number between the specified minimum and maximum values",
  "dropletBlock_randomNumber_min_max_param0": "min",
  "dropletBlock_randomNumber_min_max_param0_description": "The minimum number returned",
  "dropletBlock_randomNumber_min_max_param1": "max",
  "dropletBlock_randomNumber_min_max_param1_description": "The maximum number returned",
  "dropletBlock_randomNumber_min_max_signatureOverride": "randomNumber(min, max)",
  "dropletBlock_readRecords_description": "Reads all records whose properties match those on the searchParams object.",
  "dropletBlock_readRecords_param0": "table",
  "dropletBlock_readRecords_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_readRecords_param1": "searchParams",
  "dropletBlock_readRecords_param2": "onSuccess",
  "dropletBlock_rect_description": "Draw a rectangle on the active  canvas with x, y, width, and height coordinates",
  "dropletBlock_rect_param0": "upperLeftX",
  "dropletBlock_rect_param0_description": "The x position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param1": "upperLeftY",
  "dropletBlock_rect_param1_description": "The y position in pixels of the upper left corner of the rectangle.",
  "dropletBlock_rect_param2": "Breite",
  "dropletBlock_rect_param2_description": "The horizontal width in pixels of the rectangle.",
  "dropletBlock_rect_param3": "Höhe",
  "dropletBlock_rect_param3_description": "The vertical height in pixels of the rectangle.",
  "dropletBlock_removeItem_description": "Remove the item at the specified position from the array",
  "dropletBlock_removeItem_param0": "Liste",
  "dropletBlock_removeItem_param0_description": "The array to be modified.",
  "dropletBlock_removeItem_param1": "index",
  "dropletBlock_removeItem_param1_description": "The position of the item to remove from the array.",
  "dropletBlock_return_description": "Return a value from a function",
  "dropletBlock_return_signatureOverride": "gebe zurück",
  "dropletBlock_setActiveCanvas_description": "Set the canvas id for subsequent canvas commands (only needed when there are multiple canvas elements)",
  "dropletBlock_setActiveCanvas_param0": "canvasId",
  "dropletBlock_setActiveCanvas_param0_description": "The id of the canvas element to activate.",
  "dropletBlock_setAlpha_description": "Sets the given value",
  "dropletBlock_setAlpha_param0": "imageData",
  "dropletBlock_setAlpha_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setAlpha_param1": "x",
  "dropletBlock_setAlpha_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param2": "y",
  "dropletBlock_setAlpha_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setAlpha_param3": "alphaValue",
  "dropletBlock_setAlpha_param3_description": "The amount of alpha (opacity) (from 0 to 255) to set in the pixel.",
  "dropletBlock_setAttribute_description": "Sets the given value",
  "dropletBlock_setBackground_description": "Hintergrundbild setzen",
  "dropletBlock_setBlue_description": "Sets the given value",
  "dropletBlock_setBlue_param0": "imageData",
  "dropletBlock_setBlue_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setBlue_param1": "x",
  "dropletBlock_setBlue_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param2": "y",
  "dropletBlock_setBlue_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setBlue_param3": "blueValue",
  "dropletBlock_setBlue_param3_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setChecked_description": "Set the state of a checkbox or radio button",
  "dropletBlock_setChecked_param0": "id",
  "dropletBlock_setChecked_param1": "checked",
  "dropletBlock_setFillColor_description": "Set the fill color for the active  canvas",
  "dropletBlock_setFillColor_param0": "Farbe",
  "dropletBlock_setFillColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setGreen_description": "Sets the given value",
  "dropletBlock_setGreen_param0": "imageData",
  "dropletBlock_setGreen_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setGreen_param1": "x",
  "dropletBlock_setGreen_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param2": "y",
  "dropletBlock_setGreen_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setGreen_param3": "greenValue",
  "dropletBlock_setGreen_param3_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setImageURL_description": "Set the URL for the specified image element id",
  "dropletBlock_setImageURL_param0": "id",
  "dropletBlock_setImageURL_param0_description": "The id of the image element.",
  "dropletBlock_setImageURL_param1": "URL",
  "dropletBlock_setImageURL_param1_description": "TThe source URL of the image to be displayed on screen.",
  "dropletBlock_setInterval_description": "Continue to execute code each time the specified number of milliseconds has elapsed",
  "dropletBlock_setInterval_param0": "Funktion",
  "dropletBlock_setInterval_param0_description": "A function to execute.",
  "dropletBlock_setInterval_param1": "Millisekunden",
  "dropletBlock_setInterval_param1_description": "The number of milliseconds between each execution of the function.",
  "dropletBlock_setKeyValue_description": "Saves the value associated with the key to the remote data store.",
  "dropletBlock_setKeyValue_param0": "Schlüssel",
  "dropletBlock_setKeyValue_param0_description": "The name of the key to be stored.",
  "dropletBlock_setKeyValue_param1": "Wert",
  "dropletBlock_setKeyValue_param1_description": "The data to be stored.",
  "dropletBlock_setKeyValue_param2": "callbackFunction",
  "dropletBlock_setKeyValue_param2_description": "A function that is asynchronously called when the call to setKeyValue is finished.",
  "dropletBlock_setParent_description": "Set an element to become a child of a parent element",
  "dropletBlock_setPosition_description": "Position an element with x, y, width, and height coordinates",
  "dropletBlock_setPosition_param0": "id",
  "dropletBlock_setPosition_param1": "x",
  "dropletBlock_setPosition_param2": "y",
  "dropletBlock_setPosition_param3": "Breite",
  "dropletBlock_setPosition_param4": "Höhe",
  "dropletBlock_setRGB_description": "Sets the RGB color values (ranging from 0 to 255) of the pixel located at the given x and y position in the given image data to the input red, green, blue amounts",
  "dropletBlock_setRGB_param0": "imageData",
  "dropletBlock_setRGB_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setRGB_param1": "x",
  "dropletBlock_setRGB_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param2": "y",
  "dropletBlock_setRGB_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRGB_param3": "rot",
  "dropletBlock_setRGB_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param4": "grün",
  "dropletBlock_setRGB_param4_description": "The amount of green (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param5": "blau",
  "dropletBlock_setRGB_param5_description": "The amount of blue (from 0 to 255) to set in the pixel.",
  "dropletBlock_setRGB_param6": "Alpha",
  "dropletBlock_setRGB_param6_description": "Optional. The amount of opacity (from 0 to 255) to set in the pixel. Defaults to 255 (full opacity).",
  "dropletBlock_setRed_description": "Sets the given value",
  "dropletBlock_setRed_param0": "imageData",
  "dropletBlock_setRed_param0_description": "The image data object that describes data captured from a canvas element (use [getImageData()](/applab/docs/getImageData))",
  "dropletBlock_setRed_param1": "x",
  "dropletBlock_setRed_param1_description": "The x position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param2": "y",
  "dropletBlock_setRed_param2_description": "The y position in pixels starting from the upper left corner of image.",
  "dropletBlock_setRed_param3": "redValue",
  "dropletBlock_setRed_param3_description": "The amount of red (from 0 to 255) to set in the pixel.",
  "dropletBlock_setSpriteEmotion_description": "Legt die Stimmung der Figur fest",
  "dropletBlock_setSpritePosition_description": "Bewegt das Element sofort an die angegebene Position.",
  "dropletBlock_setSpriteSpeed_description": "Legt die Geschwindigkeit eines Elements fest",
  "dropletBlock_setSprite_description": "Legt das Aussehen der Figur fest",
  "dropletBlock_setStrokeColor_description": "Set the stroke color for the active  canvas",
  "dropletBlock_setStrokeColor_param0": "Farbe",
  "dropletBlock_setStrokeColor_param0_description": "The color name or hex value representing the color.",
  "dropletBlock_setStrokeWidth_description": "Set the line width for the active  canvas",
  "dropletBlock_setStrokeWidth_param0": "Breite",
  "dropletBlock_setStrokeWidth_param0_description": "The width in pixels with which to draw lines, circles, and rectangles.",
  "dropletBlock_setStyle_description": "Add CSS style text to an element",
  "dropletBlock_setText_description": "Set the text for the specified element",
  "dropletBlock_setText_param0": "id",
  "dropletBlock_setText_param1": "Text",
  "dropletBlock_setTimeout_description": "Set a timer and execute code when that number of milliseconds has elapsed",
  "dropletBlock_setTimeout_param0": "Funktion",
  "dropletBlock_setTimeout_param0_description": "A function to execute.",
  "dropletBlock_setTimeout_param1": "Millisekunden",
  "dropletBlock_setTimeout_param1_description": "The number of milliseconds to wait before executing the function.",
  "dropletBlock_showElement_description": "Show the element with the specified id",
  "dropletBlock_showElement_param0": "id",
  "dropletBlock_showElement_param0_description": "The id of the element to hide.",
  "dropletBlock_show_description": "Show the turtle image at its current location",
  "dropletBlock_speed_description": "Change the execution speed of the program to the specified percentage value",
  "dropletBlock_speed_param0": "Wert",
  "dropletBlock_speed_param0_description": "The speed of the app's execution in the range of (1-100)",
  "dropletBlock_startWebRequest_description": "Request data from the internet and execute code when the request is complete",
  "dropletBlock_startWebRequest_param0": "URL",
  "dropletBlock_startWebRequest_param0_description": "The web address of a service that returns data.",
  "dropletBlock_startWebRequest_param1": "Funktion",
  "dropletBlock_startWebRequest_param1_description": "A function to execute.",
  "dropletBlock_subtractOperator_description": "Subtract two numbers",
  "dropletBlock_subtractOperator_signatureOverride": "Subtract operator",
  "dropletBlock_substring_description": "Returns a string extracted between the start and end positions of the original string",
  "dropletBlock_substring_param0": "start",
  "dropletBlock_substring_param0_description": "The position to start the extraction.",
  "dropletBlock_substring_param1": "Ende",
  "dropletBlock_substring_param1_description": "The position (up to, but not including) to stop the extraction.",
  "dropletBlock_substring_signatureOverride": "[string].substring(start, end)",
  "dropletBlock_textInput_description": "Create a text input and assign it an element id",
  "dropletBlock_textInput_param0": "inputId",
  "dropletBlock_textInput_param1": "Text",
  "dropletBlock_textLabel_description": "Create a text label, assign it an element id, and bind it to an associated element",
  "dropletBlock_textLabel_param0": "labelId",
  "dropletBlock_textLabel_param0_description": "A unique identifier for the label control. The id is used for referencing the created label. For example, to assign event handlers.",
  "dropletBlock_textLabel_param1": "Text",
  "dropletBlock_textLabel_param1_description": "The value to display for the label.",
  "dropletBlock_textLabel_param2": "forId",
  "dropletBlock_textLabel_param2_description": "The id to associate the label with. Clicking the label is the same as clicking on the control.",
  "dropletBlock_throw_description": "Lässt die angegebene Figur ein Geschoss werfen.",
  "dropletBlock_toLowerCase_description": "Converts the original string to use all lowercase letters and returns it as a new string",
  "dropletBlock_toLowerCase_signatureOverride": "[string].toLowerCase()",
  "dropletBlock_toUpperCase_description": "Converts the original string to use all uppercase letters and returns it as a new string",
  "dropletBlock_toUpperCase_signatureOverride": "[string].toUpperCase()",
  "dropletBlock_turnLeft_description": "Turn the turtle counterclockwise by the specified number of degrees",
  "dropletBlock_turnLeft_param0": "Winkel",
  "dropletBlock_turnLeft_param0_description": "The angle to turn left.",
  "dropletBlock_turnRight_description": "Turn the turtle clockwise by the specified number of degrees",
  "dropletBlock_turnRight_param0": "Winkel",
  "dropletBlock_turnRight_param0_description": "The angle to turn right.",
  "dropletBlock_turnTo_description": "Turn the turtle to the specified direction (0 degrees is pointing up)",
  "dropletBlock_turnTo_param0": "Winkel",
  "dropletBlock_turnTo_param0_description": "The new angle to set the turtle's direction to.",
  "dropletBlock_updateRecord_description": "Updates a record, identified by record.id.",
  "dropletBlock_updateRecord_param0": "tableName",
  "dropletBlock_updateRecord_param0_description": "The name of the table from which the records should be searched and read.",
  "dropletBlock_updateRecord_param1": "record",
  "dropletBlock_updateRecord_param2": "callbackFunction",
  "dropletBlock_vanish_description": "Lässt die Figur verschwinden.",
  "dropletBlock_whileBlock_description": "Repeat something while a condition is true",
  "dropletBlock_whileBlock_signatureOverride": "while-Schleife",
  "dropletBlock_write_description": "Create a block of text",
  "dropletBlock_write_param0": "Text",
  "dropletBlock_write_param0_description": "The text or HTML you want appended to the bottom of your application",
  "emptyBlocksErrorMsg": "Innerhalb der \"Wiederholen\"- oder \"Wenn\"-Blöcke müssen sich andere Blöcke befinden, um zu funktionieren. Achte darauf, dass der innere Block genau in den umfassenden Block passt.",
  "emptyFunctionBlocksErrorMsg": "Der Funktionsblock muss andere Blöcke beinhalten, um zu funktionieren.",
  "emptyFunctionalBlock": "Du hast einen Block ohne Eingabe.",
  "end": "Ende",
  "errorEmptyFunctionBlockModal": "Es müssen Blöcke innerhalb deiner Funktionsdefinition sein. Klicke auf \"Bearbeiten\", und ziehe die Blöcke in den grünen Block.",
  "errorIncompleteBlockInFunction": "Klicke auf \"Bearbeiten\", um sicherzustellen, dass kein Block innerhalb deiner Funktionsdefinition fehlt.",
  "errorParamInputUnattached": "Vergiss nicht, im Funktionsblock in deinem Arbeitsbereich zu jeder Parametereingabe einen Block zu verknüpfen.",
  "errorQuestionMarksInNumberField": "Versuche \"???\" mit einem Wert zu ersetzen.",
  "errorRequiredParamsMissing": "Erstelle einen Parameter für die Funktion, indem du auf \"Bearbeiten\" klickst und füge die erforderlichen Parameter hinzu. Ziehen die neuen Parameter-Blöcke in die Funktionsdefinition.",
  "errorUnusedFunction": "Du hast eine Funktion erstellt, aber sie nie im Arbeitsbereich verwendet! Klicke auf \"Funktionen\" in den Werkzeugen, und stelle sicher, dass du es in deinem Programm verwendst.",
  "errorUnusedParam": "Du hast einen Parameterblock hinzugefügt, aber nicht in der Definition verwendet. Stelle sicher, deine Parameter zu verwenden, indem du auf \"Bearbeiten\" klickst und den Parameterblock im grünen Block plazierst.",
  "extraTopBlocks": "Einige Blöcke sind nicht verbunden. Wolltest Du diese mit dem \"Wenn ausführen\" Block verbinden?",
  "extraTopBlocksWhenRun": "You have unattached blocks. Did you mean to attach these to the \"when run\" block?",
  "finalStage": "Glückwunsch! Du hast das letzte Level erfolgreich abgeschlossen.",
  "finalStageTrophies": "Glückwunsch! Du hast das letzte Level erfolgreich abgeschlossen und {numTrophies, plural, one {eine Trophäe} other {# Trophäen}} gewonnen.",
  "finish": "Abschließen",
  "generatedCodeInfo": "Selbst Top-Universitäten unterrichten Baustein basiertes Programmieren (z.B. {berkeleyLink}, {harvardLink}). Allerdings können die von Dir zusammengefügten Bausteine auch in JavaScript, der weltweit meistverbreitesten Programmierspache, dargestellt werden:",
  "genericFeedback": "Sieh Dir Dein Ergebnis an und versuche, Programmierfehler zu beheben.",
  "hashError": "Ups, '%1' stimmt mit keinem gespeicherten Programm überein.",
  "help": "Hilfe",
  "hideToolbox": "(Ausblenden)",
  "hintHeader": "Hier ein Tipp:",
  "hintRequest": "Hinweis anzeigen",
  "hintTitle": "Hinweis:",
  "infinity": "Unendlichkeit",
  "jump": "springen",
  "keepPlaying": "Keep Playing",
  "levelIncompleteError": "Du verwendest alle nötigen Bausteine, aber noch nicht auf die richtige Weise.",
  "listVariable": "Liste",
  "makeYourOwnFlappy": "Programmiere Dein eigenes \"Flappy\"-Spiel",
  "missingBlocksErrorMsg": "Versuche einen oder mehrere dieser Bausteine zu verwenden, um diese Aufgabe zu lösen.",
  "nextLevel": "Glückwunsch! Du hast Aufgabe {puzzleNumber} erfolgreich abgeschlossen.",
  "nextLevelTrophies": "Glückwunsch! Du hast Aufgabe {puzzleNumber} erfolgreich abgeschlossen und {numTrophies, plural, one {eine Trophäe} other {# Trophäen}} gewonnen.",
  "nextPuzzle": "Nächste Aufgabe",
  "nextStage": "Glückwunsch! {stageName} abgeschlossen.",
  "nextStageTrophies": "Glückwunsch! {stageName} abgeschlossen und {numTrophies, plural, eine {a trophy} other {# trophies}} gewonnen.",
  "numBlocksNeeded": "Glückwunsch! Du hast Aufgabe {puzzleNumber} gelöst. (Du hättest jedoch nur {numBlocks, plural, one {einen Baustein} other {# Bausteine}} gebraucht.)",
  "numLinesOfCodeWritten": "Du hast soeben {numLines, plural, one {eine Zeile} other {# Zeilen}} Code geschrieben!",
  "openWorkspace": "Wie es funktioniert",
  "orientationLock": "Deaktiviere die Rotationssperre in den Geräteeinstellungen.",
  "play": "spielen",
  "print": "Drucken",
  "puzzleTitle": "Aufgabe {puzzle_number} von {stage_total}",
  "repeat": "wiederhole",
  "resetProgram": "Zurücksetzen",
  "rotateText": "Drehe Dein Gerät.",
  "runProgram": "Ausführen",
  "runTooltip": "Starte das Programm, das durch die Bausteine in deinem Arbeitsbereich festgelegt ist.",
  "saveToGallery": "In die Galerie abspeichern",
  "savedToGallery": "In der Galerie gespeichert!",
  "score": "Punktestand",
  "shareFailure": "Leider können wir dieses Programm nicht freigeben.",
  "showBlocksHeader": "Zeige Blöcke",
  "showCodeHeader": "Programm anzeigen",
  "showGeneratedCode": "Programm anzeigen",
  "showToolbox": "Zeige Werkzeuge",
  "signup": "Für den Einführungskurs anmelden",
  "stringEquals": "string=?",
  "subtitle": "eine visuelle Programmierumgebung",
  "textVariable": "Text",
  "toggleBlocksErrorMsg": "Du musst einen Fehler in deinem Programm beheben, bevor es als Bausteine angezeigt werden kann.",
  "tooFewBlocksMsg": "Du verwendest alle nötigen Baustein-Typen. Versuche jedoch mehr von diesen Baustein-Typen zu verwenden, um diese Aufgabe abzuschließen.",
  "tooManyBlocksMsg": "Diese Aufgabe kann mit <x id='START_SPAN'/><x id='END_SPAN'/> Bausteinen gelöst werden.",
  "tooMuchWork": "Du hast mich ganz schön arbeiten lassen! Könntest du versuchen, weniger zu wiederholen?",
  "toolboxHeader": "Bausteine",
  "toolboxHeaderDroplet": "Werkzeuge",
  "totalNumLinesOfCodeWritten": "Insgesamt: {numLines, plural, one {Eine Zeile} other {# Zeilen}} Code.",
  "tryAgain": "Erneut versuchen",
  "tryHOC": "Probiere \"The Hour of Code\" aus",
  "wantToLearn": "Möchtest du programmieren lernen?",
  "watchVideo": "Video anschauen",
  "when": "wenn",
  "whenRun": "wenn ausführen",
  "workspaceHeaderShort": "Arbeitsbereich: "
}