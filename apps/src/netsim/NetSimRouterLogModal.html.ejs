<%
var Packet = require('./Packet');
var i18n = require('@cdo/netsim/locale');
var NetSimGlobals = require('./NetSimGlobals');

var headerFields = NetSimGlobals.getLevelConfig().routerExpectsPacketHeader;

/** @type {boolean} */
var showToAddress = headerFields.indexOf(Packet.HeaderType.TO_ADDRESS) > -1;

/** @type {boolean} */
var showFromAddress = headerFields.indexOf(Packet.HeaderType.FROM_ADDRESS) > -1;

/** @type {boolean} */
var showPacketInfo = headerFields.indexOf(Packet.HeaderType.PACKET_INDEX) > -1 &&
    headerFields.indexOf(Packet.HeaderType.PACKET_COUNT) > -1;

/**
 * Parameters that should be supplied to the EJS template by the render invocation.
 * @name locals
 * @type {Object}
 * @property {boolean} isAllRouterLogMode
 * @property {boolean} canSetRouterLogMode
 * @property {string} currentTrafficFilter
 * @property {string} localAddress
 * @property {string} sortBy
 * @property {boolean} sortDescending
 */

function routerLogModeDropdown() {
  if (!locals.canSetRouterLogMode) {
    return '';
  }

  var markup = '<select id="routerlog-mode" class="pull-right">';
  markup += '<option' + (locals.isAllRouterLogMode ? '' : ' selected') + ' value="mine">' +
      i18n.logBrowserHeader_toggleMine() + '</option>';
  markup += '<option' + (locals.isAllRouterLogMode ? ' selected' : '')+ ' value="all">' +
      i18n.logBrowserHeader_toggleAll() + '</option>';
  markup += '</select>';
  return markup;
}

function trafficFilterDropdown() {
  if (!locals.localAddress) {
    return '';
  }

  var selectedIf = function (regex) {
    if (regex.test(locals.currentTrafficFilter)) {
      return ' selected';
    }
    return '';
  };

  var markup = '<select id="traffic-filter" class="pull-right">';
  markup += '<option' + selectedIf(/^none/) + ' value="none">' +
      i18n.logBrowserHeader_showAllTraffic() + '</option>';
  markup += '<option' + selectedIf(/^with/) + ' value="with ' + locals.localAddress + '">' +
      i18n.logBrowserHeader_showMyTraffic() + '</option>';
  markup += '<option' + selectedIf(/^from/) + ' value="from ' + locals.localAddress + '">' +
      i18n.logBrowserHeader_showTrafficFromMe() + '</option>';
  markup += '<option' + selectedIf(/^to/) + ' value="to ' + locals.localAddress + '">' +
      i18n.logBrowserHeader_showTrafficToMe() + '</option>';
  markup += '</select>';
  return markup;
}

function dialogTitle() {
  var header = locals.isAllRouterLogMode ?
      i18n.logBrowserHeader_all() : i18n.logBrowserHeader_mine();

  var match = /^(from|to|with) ([\d\.]+)/.exec(locals.currentTrafficFilter);
  if (match) {
    if ('from' === match[1]) {
      header += i18n.logBrowserHeader_trafficFromAddress({
        address: match[2]
      });
    } else if ('to' === match[1]) {
      header += i18n.logBrowserHeader_trafficToAddress({
        address: match[2]
      });
    } else if ('with' === match[1]) {
      header += i18n.logBrowserHeader_trafficToAndFromAddress({
        address: match[2]
      });
    }
  }
  return header;
}

function sortMarkupFor(sortKey) {
  if (sortKey === locals.sortBy) {
    if (locals.sortDescending) {
      return '<i class="fa fa-sort-desc"></i>';
    } else {
      return '<i class="fa fa-sort-asc"></i>';
    }
  }
  return '';
}
%>
<div class="modal-dialog modal-lg">
    <div class="modal-header">
      <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
      <%- routerLogModeDropdown() %>
      <%- trafficFilterDropdown() %>
      <h4 class="modal-title"><%= dialogTitle() %></h4>
    </div>
    <div class="modal-body">
      <table>
        <thead>
          <tr>
            <th nowrap data-sort-key="timestamp"><%= i18n.time() %> <%- sortMarkupFor('timestamp') %></th>
            <th nowrap data-sort-key="logged-by"><%= i18n.loggedByNode() %> <%- sortMarkupFor('logged-by') %></th>
            <th nowrap data-sort-key="status"><%= i18n.status() %> <%- sortMarkupFor('status') %></th>
            <% if (showFromAddress) { %>
              <th nowrap data-sort-key="from-address"><%= i18n.from() %> <%- sortMarkupFor('from-address') %></th>
            <% } %>
            <% if (showToAddress) { %>
              <th nowrap data-sort-key="to-address"><%= i18n.to() %> <%- sortMarkupFor('to-address') %></th>
            <% } %>
            <% if (showPacketInfo) { %>
              <th nowrap data-sort-key="packet-info"><%= i18n.packet() %> <%- sortMarkupFor('packet-info') %></th>
            <% } %>
            <th nowrap data-sort-key="message"><%= i18n.message() %> <%- sortMarkupFor('message') %></th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    </div>
</div>
