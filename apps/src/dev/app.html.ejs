<!DOCTYPE html>
<html dir="<%= options.localeDirection %>">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
  <title>Blockly App - <%= app %>: <%= options.levelId %></title>
</head>
<body>
  <link rel="stylesheet" type="text/css" href="../css/common.css">
  <link rel="stylesheet" type="text/css" href="../css/<%= app %>.css">

 <% if ((app === "maze" && options.levelId.indexOf('3_') === 0) ||
       (app === "applab" && options.levelId.indexOf('ec_') === 0) ||
       (app === "studio" && options.levelId.indexOf('ec_') === 0) ||
       (app === "turtle" && options.levelId.indexOf('ec_') === 0)) { -%>
  <% if (options.debugInterpreter) { -%>
    <script type="text/javascript" src="../js/jsinterpreter/acorn.js"></script>
    <script type="text/javascript" src="../js/jsinterpreter/interpreter.js"></script>
  <% } else { -%>
    <script type="text/javascript" src="../js/jsinterpreter/acorn_interpreter.js"></script>
  <% } -%>
  <script type="text/javascript" src="../js/requirejs/require.js"></script>
  <script type="text/javascript" src="../js/ace/ace.js"></script>
  <script type="text/javascript" src="../js/ace/ext-language_tools.js"></script>
  <script type="text/javascript" src="../js/droplet/droplet-full.js"></script>
  <script type="text/javascript" src="../js/ace/mode-javascript.js"></script>
  <link rel="stylesheet" type="text/css" href="../css/droplet/droplet.min.css">
<% } else { -%>
  <script type="text/javascript" src="../js/blockly.js"></script>
  <script type="text/javascript" src="../js/<%= options.locale %>/blockly_locale.js"></script>
<% } -%>
  <script type="text/javascript" src="../js/common.js"></script>
  <script type="text/javascript" src="../js/<%= options.locale %>/common_locale.js"></script>
  <script type="text/javascript" src="../js/<%= options.locale %>/<%= app %>_locale.js"></script>
  <script type="text/javascript" src="../js/<%= app %>.js"></script>
  <script type="text/javascript">
    function StubDialog(options) {
      this.options = options;
      console.log("Creating Dialog");
      console.log(options);
    }
    StubDialog.prototype.show = function() {
      console.log("Showing Dialog");
      if (this.options.body) {
        console.log(this.options.body.innerHTML);
      }
      console.log(this);
    };
    StubDialog.prototype.hide = function() {
      console.log("Hiding Dialog");
      console.log(this);
    };

    var appOptions = <%- JSON.stringify(options) %> ;
    // pass in some functions. These can't be define in server.js, since functions
    // get removed when we convert to json on the line above.
    appOptions.onAttempt = function(report) {
      console.log('Attempt!');
      console.log(report);
      if (report.onComplete) {
        // Notify the app that the report operation is complete
        // (important to do this asynchronously to simulate a service call or else
        //  we will have problems with the animating_ / waitingForReport_ states
        //  in the maze state machine)
        setTimeout(report.onComplete, 0);
      }
    };
    appOptions.onContinue = function () {
      console.log('Continue!');
    };
    appOptions.onResetPressed = function () {
      console.log('Reset!');
    };
    appOptions.Dialog = StubDialog;

    // We have a race condition where .js files might not have loaded. Wait until
    // they have. Longterm, there might be value in doing something more similar
    // to initApp
    var intervalId = setInterval(function () {
      if (typeof(<%= app %>Main) !== "undefined") {
        <%= app %>Main(appOptions)
        clearInterval(intervalId);
      }
    }, 100);

  </script>
  <div id="codeApp"></div>
</body>
</html>
