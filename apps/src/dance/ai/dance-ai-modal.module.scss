@import 'color.scss';
@import '../../mixins.scss';
@import './common.scss';

$ai-block-color: rgb(86 96 101);
$ai-block-border-color: rgb(121 124 128);
$ai-block-inputs-color: rgb(63 68 75);
$ai-block-inputs-border-color: rgba(255 255 255 / 0.6);
$ai-modal-header-height: 50px;
$ai-modal-border-width: 8px;

// Emoji moves across linearly but downwards with acceleration.
@keyframes flying-emoji-x {
  0% {
    left: 150px;
  }
  100% {
    left: 100px;
  }
}

@keyframes flying-emoji-x-rtl {
  0% {
    left: 65px;
  }
  100% {
    left: 115px;
  }
}

@keyframes flying-emoji-y {
  0% {
    top: 0;
  }
  100% {
    top: 100px;
  }
}

.modalBackdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: $black;
  opacity: 0.3;
  z-index: 1250;
}

.dialog {
  @media (max-height: 580px) {
    top: 10px;
    transform-origin: top center;
    transform: translateX(-50%) scale(0.85);
  }

  max-width: initial !important;
  width: 824px !important;
  height: 508px;
  padding: 0 !important;
  background-color: $ai-block-color !important;
  border: solid 1px $ai-block-border-color;

  .headerArea {
    width: calc(100% - 2 * $ai-modal-border-width);
    height: 50px;
    background-color: $ai-block-color;
    color: white;
    font-size: 16px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 $ai-modal-border-width;
    margin-top: $ai-modal-border-width;

    .botImage {
      width: 24px;
      margin: 0 18px 0 12px;
    }

    .inputsContainer {
      display: flex;
      padding: 5px;
      border-radius: 4px;
      gap: 6px;
      margin: 0 10px;
      background-color: $ai-block-inputs-color;
      border: solid 2px $ai-block-inputs-border-color;
      cursor: pointer;

      .emojiSlot {
        width: 35px;
        height: 35px;
        margin-right: 6px;

        &Icon {
          width: 35px;
          height: 35px;
          margin: 0;
        }
      }
    }

    &Left {
      display: flex;
      align-items: center;
    }

    &Right {
      .closeButton {
        background-color: initial;
        color: white;
        border: initial;

        &:hover {
          box-shadow: initial;
        }
      }
    }
  }

  // override the x button in AccessibleDialog to get custom styling
  .xCloseButton {
    display: none;
  }

  .innerArea {
    margin: $ai-modal-border-width;
    // There is a border on the left and right.
    width: calc(100% - 2 * $ai-modal-border-width);
    // There is a border at the top and bottom, and a third between the header
    // and the inner area.
    height: calc(100% - $ai-modal-header-height - 3 * $ai-modal-border-width);
    position: relative;
    user-select: none;
    box-sizing: border-box;
    border-radius: 4px;
    background-color: white;
    overflow: hidden;

    .toggleArea {
      position: absolute;
      width: 40%;
      top: 5px;
      left: 50%;
      text-align: center;
      transform: translateX(-50%);
      display: flex;
      justify-content: space-around;
      animation: appear 0.3s;
      margin-top: 3px;

      span {
        button {
          &:focus-visible {
            // Used !important since ToggleGroup uses inline styles and there's no other way to overwrite them.
            // Didn't want to change ToggleGroup component since that might cause unexpected regressions.
            // We agreed that once DSCO SegmentedButton will be implemented and we'll have the time/ability -
            // we'll simply use SegmentedButton here.
            outline: 2px solid $light_primary_500 !important;
          }
        }
      }
    }

    .textArea {
      position: absolute;
      width: calc(100% - 16px);
      top: 345px;
      text-align: center;
      font-size: 16px;
      transform: translateX(-50%);
      left: 50%;
      line-height: 25px;
      padding: 4px 0;
      border-top: solid 1px $neutral_dark10;
      border-bottom: solid 1px $neutral_dark10;
      white-space: pre-wrap;
      animation: appear 0.3s;

      .text {
        animation: appear 0.2s;
      }
    }

    .inputsArea {
      position: absolute;
      width: 305px;
      height: 305px;
      top: 22px;
      transform: translate(-50%);
      left: 50%;

      .inputsContainer {
        animation: appear 0.5s;

        .item {
          opacity: 0.3;

          &Available {
            cursor: pointer;
            opacity: 1;
          }
        }
      }
    }

    .botArea {
      position: absolute;
      width: 260px;
      height: 280px;
      top: 50px;
      pointer-events: none;
      z-index: 1;

      html[dir='ltr'] & {
        left: 0;
      }

      html[dir='rtl'] & {
        right: 0;
      }

      .flyingEmoji {
        position: absolute;
        left: 110px;
        top: 100px;

        html[dir='ltr'] & {
          animation: flying-emoji-x 0.4s linear, flying-emoji-y 0.4s ease-in;
        }

        html[dir='rtl'] & {
          animation: flying-emoji-x-rtl 0.4s linear, flying-emoji-y 0.4s ease-in;
        }
      }

      .botContainer {
        height: 260px;

        .botHead {
          position: absolute;
          width: 97px;
          top: 34px;
          transition: transform 0.5s 0.25s;
          transform: rotate(0deg);
          pointer-events: none;

          html[dir='ltr'] & {
            left: 81.5px;
            transform-origin: bottom left;
          }

          html[dir='rtl'] & {
            left: 82px;
            transform-origin: bottom right;
          }

          &Open {
            html[dir='ltr'] & {
              transform: rotate(-60deg);
            }

            html[dir='rtl'] & {
              transform: rotate(60deg);
            }
          }
        }

        .botBody {
          width: 110px;
          transform: translateX(-50%);
          left: 50%;
          position: absolute;
          top: 100px;
          pointer-events: none;
        }

        animation: appear 0.5s;
        pointer-events: auto;

        &:hover {
          transform: scale(1.03, 1.03);
          transition: 0.1s ease-in-out;
        }
      }
    }

    .previewArea {
      position: absolute;
      width: 280px;
      height: 280px;
      top: 40px;
      transform: translateX(-50%);
      display: flex;
      align-items: center;
      margin-top: 10px;
      transition: left 1.5s, box-shadow 0.05s;
      left: 50%;

      &Yes {
        box-shadow: 0 0 0 4px $yes-color;
        border-radius: 4px;
      }

      .previewContainer {
        animation: appear 0.3s;
        position: absolute;
        top: 0;
        left: 0;
      }

      .flipCard {
        position: absolute;
        top: 0;
        perspective: 1400px;
        width: 100%;
        height: 100%;

        &Inner {
          position: relative;
          width: 100%;
          height: 100%;
          transition: transform 0.8s;
          transform-style: preserve-3d;

          &Flipped {
            transform: rotateY(180deg);
          }
        }

        &Front,
        &Back {
          position: absolute;
          backface-visibility: hidden;
          top: 0;
        }

        &Front {
          left: 0;
          transform: translateZ(0);
        }

        &Back {
          html[dir='ltr'] & {
            right: 0;
          }

          html[dir='rtl'] & {
            left: 0;
          }

          transform: rotateY(180deg);

          .blockPreview {
            margin-top: 50px;
          }
        }
      }
    }

    .checkArea {
      position: absolute;
      top: 120px;

      font-size: 100px;
      color: $yes-color;
      animation: appear 0.05s;

      html[dir='ltr'] & {
        left: 630px;
      }

      html[dir='rtl'] & {
        left: 80px;
      }
    }

    .explanationArea {
      position: absolute;
      justify-content: center;
      width: 100%;
      height: 280px;
      top: 70px;
      left: 0;

      .key {
        position: absolute;
        padding-inline-start: 15px;
        box-sizing: border-box;
        width: 110px;
        border-radius: 4px;
        border: solid $neutral_dark10 1px;
        animation: appear 1s;

        html[dir='ltr'] & {
          right: 20px;
        }

        html[dir='rtl'] & {
          left: 20px;
        }

        .emojiSlot {
          display: flex;
          align-items: center;
          gap: 7px;

          .dot {
            height: 25px;
            width: 25px;
            border-radius: 4px;
            display: inline-block;

            &First {
              background-color: $chart-first;
            }

            &Second {
              background-color: $chart-second;
            }

            &Third {
              background-color: $chart-third;
            }
          }
        }
      }

      .visualizationContainer {
        display: flex;
        gap: 30px;
        width: calc(100% - 180px);
        margin-inline-start: 40px;

        .visualizationColumn {
          display: flex;
          flex-direction: column;
          align-items: center;
          gap: 20px;
          animation: appear 1s;
        }
      }
    }

    .buttonsArea {
      margin-top: auto;
      display: flex;
      justify-content: space-between;
      position: absolute;
      bottom: 0;
      width: 100%;
      padding: 3px;
      box-sizing: border-box;
    }

    .buttonsAreaTop {
      position: absolute;
      display: flex;
      justify-content: space-between;
      width: 100%;
      top: 0;
      left: 0;
      padding: 3px;
      box-sizing: border-box;
    }
  }

  .button {
    font-size: 16px;
    animation: appear 0.3s;

    &:disabled {
      pointer-events: none;
    }

    &NoMargin {
      margin: 0;
    }

    &SmallText {
      font-size: 12px;
    }

    &Icon {
      margin: 0;

      &WithText {
        margin: 0;

        html[dir='ltr'] & {
          margin-right: 10px;
        }

        html[dir='rtl'] & {
          margin-left: 10px;
        }
      }
    }

    &WithoutText {
      span {
        margin: 0;
      }
    }
  }
}

.emojiIcon {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  width: 40px;
  height: 40px;
  margin: 8px;

  &Button {
    @include remove-button-styles;
    width: 52px;
    height: 52px;
    margin: 4px;
    background-size: 40px;
    background-color: $neutral_light;
    border-radius: 4px;
    cursor: pointer;

    &Highlighted {
      background-color: $teal;
    }
  }
}
