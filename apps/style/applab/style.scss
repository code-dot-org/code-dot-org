@import "color";
@import "mixins";
@import "style-constants";
@import "../JsDebuggerUi.scss";
@import "../VisualizationOverlay.scss";
@import "skins/base.scss";
@import "skins/modern.scss";

$root: '/blockly/media/applab/'; //TODO: Parameterize for asset pipeline
$defaultWidth: 320px;
$defaultFooterlessHeight: 450px;

div#visualization {
  height: 562.5px;
  width: 400px;
}

div#visualization.with_padding {
  border: 1px solid #ddd;
}

div#visualizationResizeBar {
  top: $workspace-headers-height;
}

#playSpaceHeader > div {
  height: $workspace-headers-height;
}

/*
 * Shrink the visualization area on small displays.
 *
 * Above 1150px, the play space is 400px wide. Between 1150px and 950px, the
 * play space width responsively decreases by 50px as the window width is
 * reduced by 50px. The scale factor and the play space height are scaled down
 * so as to preserve the aspect ratio.
 *
 * Vertical responsiveness causes the playspace width to grow and shrink by the
 * same increments. min-height and max-height breakpoints are chosen
 * experimentally to keep about the same amount of space below the phone frame
 * throughout the responsive range.
 */

@media screen and (min-width: 1151px), screen and (min-height: 849px) {
  $width: 400px;
  $scaleFactor: $width / $defaultWidth;
  $height: $scaleFactor * $defaultFooterlessHeight;
  $colWidth: $width + 2;
  div#visualization.responsive {
    max-height: $height;
    max-width: $width;
  }
  div#visualizationColumn.responsive {
    max-width: $width;
  }
  div#visualizationColumn.responsive.with_padding {
    max-width: $colWidth;
  }
  .small-footer-base.responsive {
    max-width: $width;
  }
  div.editor-column {
    left: $width;
  }
  html[dir='rtl'] div.editor-column {
    right: $width;
  }
  div#visualizationResizeBar {
    left: $width;
    line-height: $height;
  }
  html[dir='rtl'] div#visualizationResizeBar {
    right: $width;
  }
  div#visualization.responsive > * {
    -webkit-transform: scale($scaleFactor);
    -ms-transform: scale($scaleFactor);
    transform: scale($scaleFactor);
  }
}

@media screen and (min-width: 1101px) and (max-width: 1150px), screen and (min-height: 777px) and (max-height: 848px) {
  $width: 350px;
  $scaleFactor: $width / $defaultWidth;
  $height: $scaleFactor * $defaultFooterlessHeight;
  $colWidth: $width + 2;
  div#visualization.responsive {
    max-height: $height;
    max-width: $width;
  }
  div#visualizationColumn.responsive {
    max-width: $width;
  }
  div#visualizationColumn.responsive.with_padding {
    max-width: $colWidth;
  }
  .small-footer-base.responsive {
    max-width: $width;
  }
  div.editor-column {
    left: $width;
  }
  html[dir='rtl'] div.editor-column {
    right: $width;
  }
  div#visualizationResizeBar {
    left: $width;
    line-height: $height;
  }
  html[dir='rtl'] div#visualizationResizeBar {
    right: $width;
  }
  div#visualization.responsive > * {
    -webkit-transform: scale($scaleFactor);
    -ms-transform: scale($scaleFactor);
    transform: scale($scaleFactor);
  }
}

@media screen and (min-width: 1051px) and (max-width: 1100px), screen and (min-height: 708px) and (max-height: 778px) {
  $width: 300px;
  $scaleFactor: $width / $defaultWidth;
  $height: $scaleFactor * $defaultFooterlessHeight;
  $colWidth: $width + 2;
  div#visualization.responsive {
    max-height: $height;
    max-width: $width;
  }
  div#visualizationColumn.responsive {
    max-width: $width;
  }
  div#visualizationColumn.responsive.with_padding {
    max-width: $colWidth;
  }
  .small-footer-base.responsive {
    max-width: $width;
  }
  div.editor-column {
    left: $width;
  }
  html[dir='rtl'] div.editor-column {
    right: $width;
  }
  div#visualizationResizeBar {
    left: $width;
    line-height: $height;
  }
  html[dir='rtl'] div#visualizationResizeBar {
    right: $width;
  }
  div#visualization.responsive > * {
    -webkit-transform: scale($scaleFactor);
    -ms-transform: scale($scaleFactor);
    transform: scale($scaleFactor);
  }
}

@media screen and (min-width: 1001px) and (max-width: 1050px), screen and (min-height: 638px) and (max-height: 707px) {
  $width: 250px;
  $scaleFactor: $width / $defaultWidth;
  $height: $scaleFactor * $defaultFooterlessHeight;
  $colWidth: $width + 2;
  div#visualization.responsive {
    max-height: $height;
    max-width: $width;
  }
  div#visualizationColumn.responsive {
    max-width: $width;
  }
  div#visualizationColumn.responsive.with_padding {
    max-width: $colWidth;
  }
  .small-footer-base.responsive {
    max-width: $width;
  }
  div.editor-column {
    left: $width;
  }
  html[dir='rtl'] div.editor-column {
    right: $width;
  }
  div#visualizationResizeBar {
    left: $width;
    line-height: $height;
  }
  html[dir='rtl'] div#visualizationResizeBar {
    right: $width;
  }
  div#visualization.responsive > * {
    -webkit-transform: scale($scaleFactor);
    -ms-transform: scale($scaleFactor);
    transform: scale($scaleFactor);
  }
}

@media screen and (max-width: 1000px), screen and (max-height: 637px) {
  $width: 200px;
  $scaleFactor: $width / $defaultWidth;
  $height: $scaleFactor * $defaultFooterlessHeight;
  $colWidth: $width + 2;
  div#visualization.responsive {
    max-height: $height;
    max-width: $width;
  }
  div#visualizationColumn.responsive {
    max-width: $width;
  }
  div#visualizationColumn.responsive.with_padding {
    max-width: $colWidth;
  }
  .small-footer-base.responsive {
    max-width: $width;
  }
  div.editor-column {
    left: $width;
  }
  html[dir='rtl'] div.editor-column {
    right: $width;
  }
  div#visualizationResizeBar {
    left: $width;
    line-height: $height;
  }
  html[dir='rtl'] div#visualizationResizeBar {
    right: $width;
  }
  div#visualization.responsive > * {
    -webkit-transform: scale($scaleFactor);
    -ms-transform: scale($scaleFactor);
    transform: scale($scaleFactor);
  }
}

.widgetWidth {
  width: 600px !important;
  max-width: 600px !important;
}

.widgetHeight {
  height: 450px !important;
  max-height: 450px !important;
}

#visualizationColumn.wireframeShare {
  max-width: none !important;
  // If you change this width and height,
  // make sure to update the AdvancedShareOptions.jsx iframe code.
  width: 352px;
  height: 612px;
  margin: 0 auto;
  padding: 20px 0;

  background-size: initial;

  #playSpaceHeader, #gameButtons {
    display: none;
  }

  #phoneFrameScreen {
    width: 320px;
    height: 480px;
  }

  #visualization {
    top: 68px;
    left: 16px;
    border: 0;
  }
}

#visualizationColumn.chromelessShare {
  #playSpaceHeader, #gameButtons {
    display: none;
  }
}

#divApplab, #designModeViz {
  outline: none;
  -webkit-touch-callout: none;
  @include user-selects(none);
}

#divApplab {
  position: relative;
  z-index: 1;
  background-color: white;
}

// Allow design mode elements to be visible outside of designModeViz when
// dragging, but clip them when dropped by applying the .clip-content class.
#designModeViz {
  overflow: visible;
  &.clip-content {
    overflow: hidden;
  }

  .screen {
    overflow: visible;
  }
}

#visualizationOverlay {
  // layer 1 is design mode/div applab
  // layer 2 is items being dragged out from toolbox
  // layer 3 is overlay
  z-index: 3;
}

#divApplab canvas, #designModeViz canvas {
  position: absolute;
  overflow: hidden;
  top: 0px;
  left: 0px;
  z-index: -1;
}

// While theses styles are already set by application.css (dashboard), it is
// important to set them explicitly for the export scenario.
#divApplab {
  label, input, button, select, textarea {
    font-size: 14px;
  }
  select {
    height: 30px;
    width: 220px;
  }
  button, input, select, textarea {
    vertical-align: middle;
  }
}

#divApplab.running {
  label {
    cursor: default;
  }
}

/* When not running, show default arrow cursor for all UI elements
   so that they do not look active. */
#divApplab.notRunning {
  button, label, select, input, img, div.chart, canvas, div[contenteditable=true] {
    cursor: default;
  }
}

#divApplab.notRunning.withCrosshair {
  cursor: crosshair;
  button, label, select, input, img, div.chart, canvas, div[contenteditable=true] {
    cursor: crosshair;
  }
}

/* In design mode, show grab/grabbing cursor for all UI elements
 * so that they look draggable. */
#designModeViz {
  button, label, select, input, img, div.chart, canvas, div[contenteditable=true] {
    cursor: move; /* fallback if grab cursor is unsupported */
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
    &:active {
      cursor: grabbing;
      cursor: -moz-grabbing;
      cursor: -webkit-grabbing;
    }
    &.toDelete {
      opacity: $delete-opacity;
    }
  }

  &.withCrosshair {
    cursor: crosshair;
  }
}

#visualizationResizeBar {
  margin-left: 2px;
  width: $resize-bar-width;
}

#runButton, #resetButton {
  margin-right: 0;
  outline-style: none;
}

/* Sprited icons. */
.icon21 {
  height: 21px;
  width: 21px;
  background-image: url("#{$root}icons.png");
  background-size: 42px 147px;
  margin-bottom: -3px;
}
.code {
  background-position: -21px 0px;
}
.link {
  background-position: 0px 0px;
}
.run {
  background-position: 0px -21px;
  margin-right: 3px;
}
.stop {
  background-position: -21px -21px;
  margin-right: 3px;
}
.left-btn {
  background-position: -21px -42px;
  margin-right: 3px;
}
.right-btn {
  background-position: -21px -63px;
  margin-right: 3px;
}
.up-btn {
  background-position: 0px -63px;
  margin-right: 3px;
}
.down-btn {
  background-position: 0px -42px;
  margin-right: 3px;
}

#share-cell {
  display: inline-block;
  vertical-align: top;
  &.share-cell-none {
    display: none;
  }
}

#submitButton {
  border-color: $purple;
  background-color: $purple;
  color: white;
}

#unsubmitButton {
  border-color: $light_purple;
  background-color: $light_purple;
  color: white;
}

.assetRow {
  border-bottom: 1px solid #999;
}

.assetRow:last-child {
  border-bottom: none;
}

.assetRow:hover {
  background: $lighter_purple;
}

.no-outline:focus {
  outline: none;
}

.justify-contents {
  text-align: justify;
  line-height: 0;
  &:after {
    content: '';
    width: 100%;
    display: inline-block;
  }
}

.rightalign-contents {
  text-align: right;
  line-height: 0;
  &:after {
    content: '';
    width: 100%;
    display: inline-block;
  }
}


.hover-pointer:hover {
  cursor: pointer;
}

.chooseAssetDropdownOption {
  color: $link_color;
  text-decoration: underline;
}

// We don't want -webkit-user-select: none for our contenteditable div, otherwise
// we're unable to add text to the div in Safari.
*[contenteditable] {
  -webkit-user-select: auto !important;
}

.inline-flex {
  /* PhantomJS 2.1.3 requires this vendor-specific prefix, which
   * Radium 0.18.1 does not automatically apply. */
  display: -webkit-inline-flex;
  display: inline-flex;
}

.flex {
  /* PhantomJS 2.1.3 requires this vendor-specific prefix, which
   * Radium 0.18.1 does not automatically apply. */
  display: -webkit-flex;
  display: flex;
}

// TODO(dave): move these styles into DesignToolboxElement
// once we are done experimenting with them.
.design-element-image {
  width: 72px; // 60% of 120px, which is the original image width.
}

.rainbow-gradient {
  background: -webkit-linear-gradient(to bottom right, red, orange, yellow, green, blue); /* For Safari 5.1 to 6.0 */
  background: -o-linear-gradient(to bottom right, red, orange, yellow, green, blue); /* For Opera 11.1 to 12.0 */
  background: -moz-linear-gradient(to bottom right, red, orange, yellow, green, blue); /* For Firefox 3.6 to 15 */
  background: linear-gradient(to bottom right, red, orange, yellow, green, blue); /* Standard syntax */
}

#divApplab img#turtleImage {
  // scss-lint:disable all
  position: absolute;
  height: 24px;
  width: 24px;
  margin: 0px;
}

/*
 * Reposition the bottom and right click targets to keep them from overlapping with
 * the bottom-right resize handle. Also increase the effective size of the bottom and
 * right click targets by making them overlap more with the wrapper.
 */

#designModeViz .ui-resizable-e {
  height: calc(100% - 12px);
  right: 0;
}
#designModeViz .ui-resizable-s {
  width: calc(100% - 12px);
  bottom: 0;
}

// Theme dropdown needs to use classes for styling
.theme-dropdown {
  .Select-value {
    height: 44px;
    .theme-dropdown-label {
      img {
        width: 36px;
        height: 36px;
      }
    }
  }
  .Select-value-label .checkbox {
    visibility: hidden;
  }
  .Select-menu, .Select-menu-outer {
    height: 70vh;
    max-height: 70vh;
    border-bottom: 1px solid #ccc;
    border-radius: 4px;
    text-align: center;
  }

  .Select-control {
    height: 44px;
  }
  .form-control .Select-arrow-zone {
    display: table-cell !important;
  }
}
