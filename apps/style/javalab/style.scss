@import "color.scss";
@import "../VisualizationOverlay.scss";

.container {
  width: 95%;
}

.main {
  padding: 0;
}

// cm prefixed classes are from codemirror
.cm-content,
.cm-gutter {
  min-height: 390px;
}

.codemirror-container .cm-editor.cm-focused {
  outline: none;
}

#codeWorkspace {
  border: none !important;
}

.nav {
  margin-bottom: 0;
}

.nav-tabs {
  border-bottom: 0;
}
.nav-tabs > li {
  border: 0;
  border-radius: 0;
}

// Selected tab
.nav-tabs > .active > a,
.nav-tabs > .active > a:hover,
.nav-tabs > .active > a:focus {
  margin-right: 0;
  color: black;
}

// Unselected tabs
.nav-tabs > li > a {
  color: $charcoal;
  border: 0;
  border-radius: 0;
  margin-right: 0;
  padding-top: 2px;
  padding-bottom: 2px;
}

// This class is used in the editor tabs when we're in dark mode
.darkmode {
  // The selected tab
  .nav-tabs > .active > a,
  .nav-tabs > .active > a:hover,
  .nav-tabs > .active > a:focus {
    border-width: 0;
    background-color: rgb(40 44 52);
    color: white;
    margin-right: 0;
  }

  // Tabs
  ul > li > a {
    color: $dark_charcoal;
    border: 0;
    border-radius: 0;
    margin-right: 0;
  }

  .cm-textfield::placeholder {
    color: $lighter_gray;
    opacity: 1;
  }
}

/* Slider. */
.sliderContainer {
  float: left;
}
.sliderTrack {
  stroke: #aaa;
  stroke-width: 6px;
  stroke-linecap: round;
}
.sliderKnob {
  fill: #ddd;
  stroke: #bbc;
  stroke-width: 1px;
  stroke-linejoin: round;
}
.sliderKnob:hover {
  fill: #eee;
}

.noBorder {
  border: none;

  &:active {
    // This is required because common.scss applies an !important border on all active button elements :(
    border: none !important;
  }
}

div#visualizationResizeBar {
  position: static;
}

#codeApp.pin_bottom {
  left: 10px;
  right: 10px;
}

// Override regular behavior while we are forcing JavaLab to be LTR only.
#visualization.responsive > * {
  html[dir="RTL"] & {
    -webkit-transform-origin: 0 0;
    -ms-transform-origin: 0 0;
    transform-origin: 0 0;
  }
}

.pane-header-section {
  flex: 1;
  display: flex;
  align-items: center;
}

.pane-header-section-left {
  justify-content: flex-start;
}

.pane-header-section-center {
  justify-content: center;
}

// Note that in PreviewPaneHeader,
// we (in addition to what is in the class below)
// add element-specific styling of overflow-x to the right header section
// to override some element-specific styling in PaneSection.
.pane-header-section-right {
  justify-content: flex-end;
}
