{
  "rules": {
    "v3": {
      "channels": {
        ".read": "true",
        "$channel_id": {
          "server_time": {
            "$user_id": {
              ".validate": "newData.isNumber() && newData.val() == now",
              ".write": "auth.uid == $user_id"
            }
          },
          "storage": {
            "keys": {
              ".write": "auth.uid != null"
            },
            "tables": {
              "$table_name": {
                ".validate": "newData.hasChildren(['target_record_id'])",
                "target_record_id": {
                  ".validate": "newData.isString()",
                  ".write": "auth.uid != null"
                },
                "row_counts": {
                  "$key1": {
                    ".validate": "newData.isNumber()"
                  },
                  ".validate": "(newData.child('0').val() == null ? 0 : newData.child('0').val()) + (newData.child('1').val() == null ? 0 : newData.child('1').val()) + (newData.child('2').val() == null ? 0 : newData.child('2').val()) + (newData.child('3').val() == null ? 0 : newData.child('3').val()) + (newData.child('4').val() == null ? 0 : newData.child('4').val()) + (newData.child('5').val() == null ? 0 : newData.child('5').val()) + (newData.child('6').val() == null ? 0 : newData.child('6').val()) + (newData.child('7').val() == null ? 0 : newData.child('7').val()) + (newData.child('8').val() == null ? 0 : newData.child('8').val()) + (newData.child('9').val() == null ? 0 : newData.child('9').val()) < 50 && (newData.parent().child(newData.parent().child('target_record_id').val()).val() == null ? 0 : 1) - (data.parent().child(newData.parent().child('target_record_id').val()).val() == null ? 0 : 1) == (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('0').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('0').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('1').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('1').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('2').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('2').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('3').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('3').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('4').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('4').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('5').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('5').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('6').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('6').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('7').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('7').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('8').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('8').val()) + (newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('9').val() == null ? 0 : newData.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('9').val()) - ((data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('0').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('0').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('1').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('1').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('2').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('2').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('3').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('3').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('4').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('4').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('5').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('5').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('6').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('6').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('7').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('7').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('8').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('8').val()) + (data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('9').val() == null ? 0 : data.parent().child(newData.parent().child('target_record_id').val()).parent().parent().child('row_counts').child('9').val()))",
                  ".write": "auth.uid != null && newData.val() != null"
                },
                "records": {
                  "$record_id": {
                    ".validate": "newData.isString()",
                    ".write": "auth.uid != null && $record_id == newData.parent().parent().child('target_record_id').val() && (newData.val() == null ? 0 : 1) - (data.val() == null ? 0 : 1) == (newData.parent().parent().child('row_counts').child('0').val() == null ? 0 : newData.parent().parent().child('row_counts').child('0').val()) + (newData.parent().parent().child('row_counts').child('1').val() == null ? 0 : newData.parent().parent().child('row_counts').child('1').val()) + (newData.parent().parent().child('row_counts').child('2').val() == null ? 0 : newData.parent().parent().child('row_counts').child('2').val()) + (newData.parent().parent().child('row_counts').child('3').val() == null ? 0 : newData.parent().parent().child('row_counts').child('3').val()) + (newData.parent().parent().child('row_counts').child('4').val() == null ? 0 : newData.parent().parent().child('row_counts').child('4').val()) + (newData.parent().parent().child('row_counts').child('5').val() == null ? 0 : newData.parent().parent().child('row_counts').child('5').val()) + (newData.parent().parent().child('row_counts').child('6').val() == null ? 0 : newData.parent().parent().child('row_counts').child('6').val()) + (newData.parent().parent().child('row_counts').child('7').val() == null ? 0 : newData.parent().parent().child('row_counts').child('7').val()) + (newData.parent().parent().child('row_counts').child('8').val() == null ? 0 : newData.parent().parent().child('row_counts').child('8').val()) + (newData.parent().parent().child('row_counts').child('9').val() == null ? 0 : newData.parent().parent().child('row_counts').child('9').val()) - ((data.parent().parent().child('row_counts').child('0').val() == null ? 0 : data.parent().parent().child('row_counts').child('0').val()) + (data.parent().parent().child('row_counts').child('1').val() == null ? 0 : data.parent().parent().child('row_counts').child('1').val()) + (data.parent().parent().child('row_counts').child('2').val() == null ? 0 : data.parent().parent().child('row_counts').child('2').val()) + (data.parent().parent().child('row_counts').child('3').val() == null ? 0 : data.parent().parent().child('row_counts').child('3').val()) + (data.parent().parent().child('row_counts').child('4').val() == null ? 0 : data.parent().parent().child('row_counts').child('4').val()) + (data.parent().parent().child('row_counts').child('5').val() == null ? 0 : data.parent().parent().child('row_counts').child('5').val()) + (data.parent().parent().child('row_counts').child('6').val() == null ? 0 : data.parent().parent().child('row_counts').child('6').val()) + (data.parent().parent().child('row_counts').child('7').val() == null ? 0 : data.parent().parent().child('row_counts').child('7').val()) + (data.parent().parent().child('row_counts').child('8').val() == null ? 0 : data.parent().parent().child('row_counts').child('8').val()) + (data.parent().parent().child('row_counts').child('9').val() == null ? 0 : data.parent().parent().child('row_counts').child('9').val())) && (newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(15 + '').child('target_token').val() != null && data.parent().parent().parent().parent().parent().child('storage').child('limits').child(15 + '').child('used_tokens').child(newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(15 + '').child('target_token').val() + '').val() == null && newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(15 + '').child('used_tokens').child(newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(15 + '').child('target_token').val() + '').val() == true && (newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(60 + '').child('target_token').val() != null && data.parent().parent().parent().parent().parent().child('storage').child('limits').child(60 + '').child('used_tokens').child(newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(60 + '').child('target_token').val() + '').val() == null && newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(60 + '').child('used_tokens').child(newData.parent().parent().parent().parent().parent().child('storage').child('limits').child(60 + '').child('target_token').val() + '').val() == true))"
                  }
                },
                "$other": {
                  ".validate": "false"
                }
              }
            },
            "limits": {
              "15": {
                ".validate": "(newData.hasChildren() || newData.val() == null) && (newData.parent().parent().parent().child('storage').child('limits').child(15 + '').child('used_tokens').val() == null && newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == now && (newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == null ? 0 : newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val()) >= (data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == null ? 0 : data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val()) + 15 * 1000 && newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val() == 0 || newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val() == data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val() && newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() && (newData.parent().parent().parent().child('storage').child('limits').child(15 + '').child('target_token').val() != null && data.parent().parent().parent().child('storage').child('limits').child(15 + '').child('used_tokens').child(newData.parent().parent().parent().child('storage').child('limits').child(15 + '').child('target_token').val() + '').val() == null && newData.parent().parent().parent().child('storage').child('limits').child(15 + '').child('used_tokens').child(newData.parent().parent().parent().child('storage').child('limits').child(15 + '').child('target_token').val() + '').val() == true) && newData.parent().parent().parent().child('storage').child('limits').child(15 + '').child('target_token').val() <= newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val())",
                "target_token": {
                  ".validate": "newData.isNumber() || newData.val() == null"
                },
                "used_tokens": {
                  "$key2": {
                    ".validate": "newData.isBoolean()"
                  }
                },
                "$other": {
                  ".validate": "false"
                }
              },
              "60": {
                ".validate": "(newData.hasChildren() || newData.val() == null) && (newData.parent().parent().parent().child('storage').child('limits').child(60 + '').child('used_tokens').val() == null && newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == now && (newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == null ? 0 : newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val()) >= (data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == null ? 0 : data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val()) + 60 * 1000 && newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val() == 0 || newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val() == data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val() && newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() && (newData.parent().parent().parent().child('storage').child('limits').child(60 + '').child('target_token').val() != null && data.parent().parent().parent().child('storage').child('limits').child(60 + '').child('used_tokens').child(newData.parent().parent().parent().child('storage').child('limits').child(60 + '').child('target_token').val() + '').val() == null && newData.parent().parent().parent().child('storage').child('limits').child(60 + '').child('used_tokens').child(newData.parent().parent().parent().child('storage').child('limits').child(60 + '').child('target_token').val() + '').val() == true) && newData.parent().parent().parent().child('storage').child('limits').child(60 + '').child('target_token').val() <= newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val())",
                "target_token": {
                  ".validate": "newData.isNumber() || newData.val() == null"
                },
                "used_tokens": {
                  "$key2": {
                    ".validate": "newData.isBoolean()"
                  }
                },
                "$other": {
                  ".validate": "false"
                }
              },
              ".validate": "newData.hasChildren()",
              "$other": {
                ".validate": "false"
              },
              ".write": "auth.uid != null && newData.val() != null"
            }
          },
          "counters": {
            "tables": {
              "$table_name": {
                "last_id": {
                  ".validate": "newData.isNumber() && newData.val() > (data.val() == null ? 0 : data.val())",
                  ".write": "auth.uid != null && newData.val() != null"
                }
              }
            },
            "limits": {
              "15": {
                ".validate": "(newData.hasChildren() && newData.hasChildren(['last_token']) || newData.val() == null) && (newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() && (newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val() == null ? 0 : newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val()) > (data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val() == null ? 0 : data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val()) && newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val() <= 30 || newData.parent().parent().parent().child('storage').child('limits').child(15 + '').child('used_tokens').val() == null && newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == now && (newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == null ? 0 : newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val()) >= (data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val() == null ? 0 : data.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_reset_time').val()) + 15 * 1000 && newData.parent().parent().parent().child('counters').child('limits').child(15 + '').child('last_token').val() == 0)",
                "last_reset_time": {
                  ".validate": "newData.isNumber() || newData.val() == null"
                },
                "last_token": {
                  ".validate": "newData.isNumber()"
                },
                "$other": {
                  ".validate": "false"
                }
              },
              "60": {
                ".validate": "(newData.hasChildren() && newData.hasChildren(['last_token']) || newData.val() == null) && (newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() && (newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val() == null ? 0 : newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val()) > (data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val() == null ? 0 : data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val()) && newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val() <= 60 || newData.parent().parent().parent().child('storage').child('limits').child(60 + '').child('used_tokens').val() == null && newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == now && (newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == null ? 0 : newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val()) >= (data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val() == null ? 0 : data.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_reset_time').val()) + 60 * 1000 && newData.parent().parent().parent().child('counters').child('limits').child(60 + '').child('last_token').val() == 0)",
                "last_reset_time": {
                  ".validate": "newData.isNumber() || newData.val() == null"
                },
                "last_token": {
                  ".validate": "newData.isNumber()"
                },
                "$other": {
                  ".validate": "false"
                }
              },
              ".validate": "newData.hasChildren()",
              "$other": {
                ".validate": "false"
              },
              ".write": "auth.uid != null && newData.val() != null"
            }
          }
        }
      }
    }
  }
}
