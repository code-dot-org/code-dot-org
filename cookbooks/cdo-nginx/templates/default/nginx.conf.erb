user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
  worker_connections 1024;
  use epoll;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  proxy_redirect off;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Request-Start "t=${msec}";
  proxy_buffer_size 8k;

  client_max_body_size 4G;
  keepalive_timeout 30;

<% unless node['cdo-varnish']['enabled'] -%>
  # Copy Accept-Language header to X-Varnish-Accept-Language.
  # TODO: Update application code to read Accept-Language instead of X-Varnish-Accept-Language.
  proxy_set_header X-Varnish-Accept-Language $http_accept_language;

  # Select port 80 backend based on Host and/or X-Cdo-Backend headers.
  map "$host:$http_x_cdo_backend" $upstream {
    # Override backend using X-Cdo-Backend header.
    ~:dashboard$ "dashboard";
    ~:pegasus$ "pegasus";
    # Select dashboard if 'dashboard' or 'studio' appear anywhere in the host.
    ~(dashboard|studio).*: "dashboard";
    # Default to pegasus.
    default "pegasus";
  }

  map $http_x_cdo_backend $upstream_host {
    # Override host using X-Cdo-Backend header.
    dashboard "<%=CDO.dashboard_hostname%>";
    pegasus "<%=CDO.pegasus_hostname%>";

    # Default to original host variable.
    default $http_host;
  }

  server {
    listen 80 default_server deferred;
    server_name _;
    location / {
      proxy_pass http://unix:<%= @run_dir %>/$upstream.sock;
      proxy_set_header Host $upstream_host;
    }
  }
<%   redirects = node['cdo-varnish']['redirects'].group_by(&:last).transform_values {|v| v.to_h.keys}
     redirects.each do |site, domains| -%>
  server {
    listen 80;
    server_name <%=domains.join(' ')%>;
    return 301 https://<%=site%>$request_uri;
  }
<%   end -%>
<% end -%>

  server {
    listen <%= node['cdo-apps']['dashboard']['port'] %> default deferred;
    server_name dashboard_proxy;
    location / {
      proxy_pass http://unix:<%= @run_dir %>/dashboard.sock;
      proxy_set_header Host $http_host;
    }
  }
  server {
    listen <%= node['cdo-apps']['pegasus']['port'] %> default deferred;
    server_name pegasus_proxy;
    location / {
      proxy_pass http://unix:<%= @run_dir %>/pegasus.sock;
      proxy_set_header Host $http_host;
    }
  }
  server {
    server_name ssl_proxy;
    listen 443 ssl;
    <%= render 'nginx.erb', cookbook: 'ssl_certificate' %>
    location / {
<% if node['cdo-varnish']['enabled'] -%>
      # Pass the request on to Varnish.
      proxy_pass  http://127.0.0.1;
<% else -%>
      proxy_pass http://unix:<%= @run_dir %>/$upstream.sock;
<% end -%>
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto https;
    }
  }
}
