require_relative '../test_helper'
require 'cdo/firehose'

class FirehoseTest < Minitest::Test
  def setup
    FirehoseClient.instance.log = Logger.new('/dev/null')
    @client = FirehoseClient.client = Aws::Firehose::Client.new(stub_responses: true)
  end

  def teardown
    FirehoseClient.client = nil
  end

  def test_firehose
    FirehoseClient.instance.put_record({})
    FirehoseClient.instance.flush!
    api_request = @client.api_requests.first
    assert_equal :put_record_batch, api_request[:operation_name]
    data = JSON.parse(api_request[:params][:records].first[:data])
    assert_equal '"server-side"', data['device']
    assert_equal FirehoseClient::STREAM_NAME, api_request[:params][:delivery_stream_name]
  end

  # Ensure the calculated #size matches the request length generated by the SDK client.
  def test_firehose_request_size
    records = Array.new(1000) {|n| '*' * n}

    request = Aws::Firehose::Client.new(stub_responses: true).build_request(
      :put_record_batch,
      delivery_stream_name: FirehoseClient::STREAM_NAME,
      records: records.map {|r| {data: r}}
    )
    request.send_request
    assert_equal request.context.http_request.headers['Content-Length'].to_i,
      FirehoseClient.instance.size(records)
  end
end
