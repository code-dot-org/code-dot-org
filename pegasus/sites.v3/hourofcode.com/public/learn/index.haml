---
title: Learn
layout: wide_index
social:
  twitter:card: photo
  twitter:site: "@codeorg"
  og:image:width: '1200'
  og:image:height: '630'
---

%link{href: "/css/generated/hoc-banner.css", rel: "stylesheet", type: "text/css"}

= view :analytics_event_log_helper, event_name: AnalyticsConstants::HOC_ACTIVITIES_PAGE_VISITED

#fullwidth
  = view :header
  %section.banner
    = view :learn_banner_text

-# Not ideal but we can pull the undigested files from /blockly.
- locale_code = hoc_get_locale_code
- js_locale = locale_code.to_s.downcase.tr('-', '_')
%script{src: webpack_asset_path("js/#{js_locale}/tutorialExplorer_locale.js")}
%script{src: webpack_asset_path("js/tutorialExplorer.js")}

- use_preview = !!request.params["preview"]
- tutorial_sheet_id = use_preview ? :tutorials_preview : :tutorials
- no_cache = use_preview
- tutorials_contents = Tutorials.new(tutorial_sheet_id, no_cache).contents(request.host_with_port)

-# Load tutorial images from code.org so we don't have to duplicate them on hourofcode.com.
- tutorials_contents.each do |tutorial|
  - tutorial[:image] = CDO.code_org_url(tutorial[:image])

- tutorials_contents.each do |tutorial|
  - tutorial[:contact] = nil
  - prefix = "tutorial_#{tutorial[:short_code]}_"
  -# Unless showing a preview, look up localized versions of strings.
  - unless use_preview
    - tutorial[:name]                                 = hoc_s(prefix + "name")
    - tutorial[:shortdescription]                     = hoc_s(prefix + "shortdescription")
    - tutorial[:longdescription]                      = hoc_s(prefix + "longdescription")
    - tutorial[:language]                             = hoc_language(tutorial[:languages_supported])
    - tutorial[:string_detail_grades]                 = hoc_s(prefix + "string_detail_grades")
    - tutorial[:string_platforms]                     = hoc_s(prefix + "string_platforms")
    - tutorial[:string_detail_platforms]              = hoc_s(prefix + "string_detail_platforms")
    - tutorial[:string_detail_programming_languages]  = hoc_s(prefix + "string_detail_programming_languages")
  - tutorial[:teachers_notes]                       = CDO.curriculum_url(locale_code, tutorial[:teachers_notes], autocomplete_partial_path: false)

#tutorials

.clear{style: "clear: both"}

:javascript

  $(document).ready(function() {
    // Send through some values that the JavaScript will need.
    var tutorialExplorerManager = new window.TutorialExplorerManager({
      tutorials: #{raw tutorials_contents.to_json},
      locale: "#{locale_code}",
      roboticsButtonUrl: "#{resolve_url('/learn/robotics')}",
      showSortDropdown: #{DCDO.get('learn_show_sort_dropdown', true)},
      disabledTutorials: #{raw DCDO.get('learn_hide_tutorials', [])},
      defaultSortByPopularity: #{Tutorials.sort_by_popularity?(request.site, DCDO.get("hoc_mode", CDO.default_hoc_mode))}
    });
    tutorialExplorerManager.renderToElement(document.getElementById('tutorials'));

    // Open banner links in new tab; we render them with markdown, so we can't do this in the haml
    // Add the rel tag to attempt to mitigate the inherent danger in opening
    // links in a new tab; will only work for modern browsers, though.
    $(".banner a").attr({target: "_blank", rel: "noopener noreferrer nofollow"});

    $(".bannerTeachers").fadeTo('slow', 1);
  });
