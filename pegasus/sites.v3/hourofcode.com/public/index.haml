---
layout: wide_index
social:
  twitter:site: "@codeorg"
  twitter:url: https://hourofcode.com
---
:ruby
  @header["title"] = hoc_s(:front_title, locals: {campaign_date: campaign_date('full-year')})

  hoc_mode = DCDO.get("hoc_mode", CDO.default_hoc_mode)

%link{href: "/css/generated/front-page.css", rel: "stylesheet", type: "text/css"}
%link{href: "/css/generated/highlights-homepage.css", rel: "stylesheet", id: "highlight-styles"}

-# These are needed for the signup form, even if the map isn't currently showing.
%script{src:'https://api.mapbox.com/mapbox-gl-js/v1.0.0/mapbox-gl.js'}
:javascript
  mapboxgl.accessToken = "#{CDO.mapbox_access_token}";

-facebook = {:u=>"http://#{request.host}/us"}

-# We set the DCDO default to CDO.default_hoc_mode here because we can't change the DCDO flag on the test machine, but
-# ui tests rely on hourofcode.com being in a hoc_mode consistent with production. This default needs to be updated
-# whenever we change the hoc_mode, to make sure we're still testing what we'll see on production.
-hoc_mode = DCDO.get("hoc_mode", CDO.default_hoc_mode)

-twitter = {:url=>"http://hourofcode.com", :related=>'codeorg', :hashtags=>'', :text=>hoc_s(:twitter_default_text)}
-twitter[:hashtags] = 'HourOfCode' unless hoc_s(:front_header_banner, locals: {campaign_date: campaign_date('full-year')}).include? '#HourOfCode'

%script{type: "text/javascript", src: "https://maps.googleapis.com/maps/api/js?client=#{CDO.google_maps_client_id}&sensor=false&libraries=places,geometry"}
%script{type: "text/javascript", src: "/js/jquery.geocomplete.min.js"}
- js_locale = request.locale.to_s.downcase.tr('-', '_')
%script{src: webpack_asset_path("js/#{js_locale}/common_locale.js")}
%script{type: "text/javascript", src: webpack_asset_path('js/hourofcode.com/public/index.js')}




#top{style: "position: relative; width: 100%; overflow: hidden;"}

  // Canada's default langauge is set to 'en' but since we don't support 'en-CA' we make an exception
  // to localize homepage hero images for Canada in the view instead of using localized_image
  // (which is based on localizing for languages other than 'en').
  - slide1 = @country == 'ca' ? '/images/fit-1500/homepage_1_canada.jpg' : localized_image('/images/fit-1500/homepage_1.jpg')
  - slide3 = @country == 'ca' ? '/images/fit-1500/homepage_3_canada.jpg' : localized_image('/images/fit-1500/homepage_3.jpg')

  - unless ["pre-hoc", "soon-hoc", "actual-hoc", "post-hoc"].include?(hoc_mode)
    #fullwidth0.hero-image{style: "background-image: url(#{localized_image('/images/fit-1500/homepage_hoc2020.jpg')}); opacity: 1; background-position: 50% 50%;"}

  #fullwidth1.hero-image{style: "background-image: url(#{localized_image('/images/fit-1500/homepage_4.jpg')}); opacity: 0; background-position: 50% 10%;"}

  #fullwidth2.hero-image{style: "background-image: url(#{localized_image('/images/fit-1500/homepage_trudeau.jpg')}); background-position: 50% 50%"}

  #fullwidth3.hero-image{style: "background-image: url(#{slide1}); background-position: 50% 50%"}

  #fullwidth4.hero-image{style: "background-image: url(#{localized_image('/images/fit-1500/homepage_2.jpg')}); background-position: 50% 50%"}

  #fullwidth5.hero-image{style: "background-image: url(#{slide3}); background-position: 50% 20%"}

  #fullwidth{style: "width: 100%;"}

    .thegap{style: "height: 1px;"}
      &nbsp;

    = view :header

    .container
      .row
        - if ["pre-hoc", "soon-hoc", "actual-hoc", "post-hoc"].include?(hoc_mode)
          %div{style: "color: black; display: flex"}
            .col-md-4.hidden-sm.hidden-xs{style: "align-items: stretch; background-image: url(/shared/images/fit-1200/hoc-cse-left-fade.png); background-position: 100% 00%; background-size: contain; background-repeat: no-repeat"}
            .col-sm-12.col-md-4.no-padding-on-narrow
              #textbacking.no-padding-on-narrow
                .front-header-banner.no-padding-on-narrow
                  .front-header-title{style: "color: black; font-size: 52px; line-height: 1.2em"}
                    = hoc_s(:codeorg_homepage_celebrate_cse, markdown: true)
                  .front-header-description{style: "margin-bottom: 20px"}
                    = hoc_s(:hourofcode_homepage_hoc2018_header_line1)
                %img.hidden-md.hidden-lg{src: "/shared/images/fit-1200/hoc-cse-arrows.png", style: "width: 100%; padding-bottom: 20px"}
                .ctabuttongroup
                  #tryittext.ctatext
                    = view :hoc_action_buttons, hoc_mode: hoc_mode
              %br/
              %br/
            .col-md-4.hidden-sm.hidden-xs{style: "align-items: stretch; background-image: url(/shared/images/fit-1200/hoc-cse-right-fade.png); background-position: 0% 0%; background-size: contain; background-repeat: no-repeat"}

        - else
          .col-12
            #textbacking
              .front-header-banner
                .front-header-title
                  = hoc_s(:hoc2020_header_with_line_break_markdown, markdown: true)
                .front-header-description
                  = hoc_s(:hourofcode_homepage_hoc2018_header_line1)
              %br/
              %br/
              .ctabuttongroup
                #tryittext.ctatext
                  = view :hoc_action_buttons, hoc_mode: hoc_mode
            %br/
            %br/

      %div{style: "clear: both;"}



.container
  -# HoC Live Spanish banner
  - if @language == 'es' || @language == 'la'
    #hoclivebanner.row
      %div.banner-box
        %div.banner-image-box
          %img.banner-image{src: '/images/hora-del-codigo-en-vivo.png', alt: hoc_s(:hoc_live)}
        %div.banner-message-box
          %div.banner-title
            = hoc_s(:hoc_live_learn_title)
          %br/
          %div.banner-message
            = hoc_s(:hoc_live_learn_message)
          %br/
          %a#signuplivebutton.ctabuttonatag{href: 'https://code.org/envivo'}
            %button.ctabutton-white
              = hoc_s(:hoc_live_learn_more)



  -# Description

  #description.row
    .col-xs-1
      &nbsp;
    .col-xs-10.hoc-description
      .number-served= hoc_s(:front_join_us_n_students_served).gsub("#", format_integer_with_commas(fetch_hoc_metrics['started']).to_s)
      = hoc_s(:front_intro_default_2)
      %br
      = view :hoc_events_counter

  -# Map
  - unless @country == 'ma' # Hide map for Morocco because of sensitive border disputes misrepresented in map
    #maparea.full-width
      -# Show a picture of the map unless it is currently the week of HOC.
      -if hoc_mode != "actual-hoc"
        = view :hoc_events_map
        .footnote!=hoc_s(:map_warning_markdown, markdown: :inline, locals: {events_url: resolve_url('/events')})
      -else
        %a{href: resolve_url('/map')}
          %img{src: '/images/fit-2276/map.jpg', style: 'width: 100%;'}
        .footnote!=hoc_s(:map_warning_markdown, markdown: :inline, locals: {events_url: resolve_url('/events')})


  -# Join the movement
  %section.join-the-movement
    %h1=hoc_s(:hoc_homepage_join_the_movement_heading)
    %h3=hoc_s(:hoc_homepage_join_the_movement_description)
    -if ["pre-hoc", "soon-hoc"].include?(hoc_mode)
      = view :home_signup, hoc_mode: hoc_mode
    -else
      = view :home_signup, hoc_mode: hoc_mode

-# What is the HoC?
%section.what-is-hoc
  .wrapper
    %h1=hoc_s(:front_what_is_hoc)
    %h2=hoc_s(:hoc_homepage_what_is_hoc_subhead)
    =view :index_video
    %p=hoc_s(:hoc_homepage_what_is_hoc_description)
    %a.cta-btn=hoc_s(:cta_try_an_activity)
    %p=hoc_s(:hoc_homepage_what_is_hoc_cta_how_to_guide)

-# Highlights
%section.highlights
  .wrapper
    %h1=hoc_s(:highlights_header)
    =view :home_highlights

-# Stats
%section.stats
  .wrapper
    =view :home_stats

-# Host an hour
%section.host-an-hour
  .wrapper
    =view :signup_button




= view 'popup_window.js'



:javascript

  var currentImage = 0;
  var timerId;
  var videoStarted = false;

  function cycleImage()
  {
    var nextImage = (currentImage + 1) % 6;
    $("#fullwidth" + currentImage).fadeTo(2000, 0);
    $("#fullwidth" + nextImage ).fadeTo(2000, videoStarted ? 0.3 : 1);
    currentImage = nextImage;
  }

  $(document).ready(function() {
    // hoc2018: temporarily disable the cycling.
    //timerId = setInterval(cycleImage, 6000);
  });

  $(function() {
    $('.highlight-item').mouseover(function() {
      var caption = $(this).find('.highlight-caption');
      caption.fadeIn();
    });

    $('.highlight-item').mouseleave(function() {
      var caption = $(this).find('.highlight-caption');
      caption.fadeOut();
    });
  });
