---
layout: wide_index
social:
  twitter:site: "@codeorg"
  twitter:url: https://hourofcode.com
---
:ruby
  @header["title"] = hoc_s(:front_title, locals: {campaign_date: campaign_date('full-year')})

  hoc_mode = DCDO.get("hoc_mode", CDO.default_hoc_mode)

%link{href: "/css/generated/front-page.css", rel: "stylesheet", type: "text/css"}
%link{href: "/css/generated/hoc-banner.css", rel: "stylesheet", type: "text/css"}
%link{href: "/css/generated/highlights-homepage.css", rel: "stylesheet", id: "highlight-styles"}

-# These are needed for the signup form, even if the map isn't currently showing.
%script{src:'https://api.mapbox.com/mapbox-gl-js/v1.0.0/mapbox-gl.js'}
:javascript
  mapboxgl.accessToken = "#{CDO.mapbox_access_token}";

-facebook = {:u=>"http://#{request.host}/us"}

-# We set the DCDO default to CDO.default_hoc_mode here because we can't change the DCDO flag on the test machine, but
-# ui tests rely on hourofcode.com being in a hoc_mode consistent with production. This default needs to be updated
-# whenever we change the hoc_mode, to make sure we're still testing what we'll see on production.
-hoc_mode = DCDO.get("hoc_mode", CDO.default_hoc_mode)

-twitter = {:url=>"http://hourofcode.com", :related=>'codeorg', :hashtags=>'', :text=>hoc_s(:twitter_default_text)}
-twitter[:hashtags] = 'HourOfCode' unless hoc_s(:front_header_banner, locals: {campaign_date: campaign_date('full-year')}).include? '#HourOfCode'

%script{type: "text/javascript", src: "https://maps.googleapis.com/maps/api/js?client=#{CDO.google_maps_client_id}&sensor=false&libraries=places,geometry"}
%script{type: "text/javascript", src: "/js/jquery.geocomplete.min.js"}
- js_locale = request.locale.to_s.downcase.tr('-', '_')
%script{src: webpack_asset_path("js/#{js_locale}/common_locale.js")}
%script{type: "text/javascript", src: webpack_asset_path('js/hourofcode.com/public/index.js')}


#top
  #fullwidth
    = view :header
    %section.banner.homepage
      .wrapper
        - if ["pre-hoc", "soon-hoc", "actual-hoc", "post-hoc"].include?(hoc_mode)
          %h1=hoc_s(:hoc2022_header)
          %h2=hoc_s(:hourofcode_homepage_hoc2018_header_line1)
          .ctabuttongroup
            #tryittext.ctatext
              = view :hoc_action_buttons, hoc_mode: hoc_mode
        - else
          %h1=hoc_s(:hoc2022_header)
          %h2=hoc_s(:hourofcode_homepage_hoc2018_header_line1)
          .ctabuttongroup
            #tryittext.ctatext
              = view :hoc_action_buttons, hoc_mode: hoc_mode

%main
  -# HoC Live Spanish banner
  - if @language == 'es' || @language == 'la'
    #hoclivebanner
      .banner-box
        .banner-image-box
          %img.banner-image{src: '/images/hora-del-codigo-en-vivo.png', alt: hoc_s(:hoc_live)}
        .banner-message-box
          %h2.banner-title
            = hoc_s(:hoc_live_learn_title)
          %p.banner-message
            = hoc_s(:hoc_live_learn_message)
          %a#signuplivebutton.ctabuttonatag{href: 'https://code.org/envivo'}
            %button.ctabutton-white
              = hoc_s(:hoc_live_learn_more)

  -# Description
  %section.hoc-description
    .wrapper
      %h2.number-served=hoc_s(:front_join_us_n_students_served).gsub("#", format_integer_with_commas(fetch_hoc_metrics['started']).to_s)
      %p=hoc_s(:front_intro_default_2)
      %p=view :hoc_events_counter

  -# Map
  %section.map
    .wrapper
      - unless @country == 'ma' # Hide map for Morocco because of sensitive border disputes misrepresented in map
        #maparea.full-width
          -# Show a picture of the map unless it is currently the week of HOC.
          -if hoc_mode != "actual-hoc"
            = view :hoc_events_map
            .footnote!=hoc_s(:map_warning_markdown, markdown: :inline, locals: {events_url: resolve_url('/events')})
          -else
            %a{href: resolve_url('/map')}
              %img{src: '/images/fit-2276/map.jpg', style: 'width: 100%;'}
            .footnote!=hoc_s(:map_warning_markdown, markdown: :inline, locals: {events_url: resolve_url('/events')})

  -# Join us
  %section#join.join-us
    .wrapper
      %h2=hoc_s(:hoc_live_join_us)
      %h3=hoc_s(:hoc_homepage_join_the_movement_description)
      -if ["pre-hoc", "soon-hoc"].include?(hoc_mode)
        = view :home_signup, hoc_mode: hoc_mode

  -# What is HoC?
  -# This section remains evergreen, and the video no longer moves next to the signup form during different hoc_modes.
  %section.what-is-hoc
    .wrapper
      %h2=hoc_s(:front_what_is_hoc)
      %h3=hoc_s(:hoc_homepage_what_is_hoc_subhead)
      =view :index_video
      %p=hoc_s(:hoc_homepage_what_is_hoc_description)
      %a{href: resolve_url('/learn')}
        %button=hoc_s(:cta_try_an_activity)
      //%p=hoc_s(:hoc_homepage_what_is_hoc_cta_how_to_guide, markdown: :inline, locals: {howto_guide_url: resolve_url('/how-to')})

  -# Highlights
  %section.highlights
    .wrapper
      %h2=hoc_s(:highlights_header)
      =view :home_highlights

  -# Stats
  %section.stats
    .wrapper
      =view :home_stats

  -# Host an hour
  %section.host-an-hour
    .wrapper
      =view :signup_button

  = view 'popup_window.js'


:javascript

  $(function() {
    $('.highlight-item').mouseover(function() {
      var caption = $(this).find('.highlight-caption');
      caption.fadeIn();
    });

    $('.highlight-item').mouseleave(function() {
      var caption = $(this).find('.highlight-caption');
      caption.fadeOut();
    });
  });
