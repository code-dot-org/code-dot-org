-subheading ||= nil
-company = request.GET['company']
-shuffle ||= false
-items = tutorials.find_with_grade_level(gradelevel)
-if items.count > 0
  -if shuffle
    -items = items.to_a.shuffle.to_h
  %h3{:class=>'course-carousel-title', :style=>"margin-bottom:8px"}!=heading

  -unless subheading.nil_or_empty?
    %p!=subheading

  .learnpage{:style=>'position:relative'}

    .carousel-wrapper
      %div{id: id, class: 'carousel course-carousel'}
        .slides

          -count = 0
          -items.each_pair do |key, tutorial|
            -url = tutorials.launch_url_for(key,request.host_with_port)
            -url = url + "?company=#{company}" if company
            -styling = "display:none" unless count == 0
            .slide.clear{:style=>styling}
              .slide-img<
                %a{:href=>url, :target=>'_blank'}<
                  %img{:src=>tutorial[:image].sub("/images/", CDO.code_org_url("/images/fit-520/")).sub(".png", ".jpg")}
              .slide-text
                %a{:href=>url, :target=>'_blank'}<
                .slide-tags= tutorial[:age]
                %h2= tutorial[:name]
                .slide-tags= tutorial[:platformtext]
                %p.slide-longdescription= tutorial[:longdescription]
              %a{:href=>url, :target=>'_blank'}<
                .btn-carousel-slide=I18n.t(:go)
            -count += 1

        %a.slide-prev{:href=>'#'}<
          %span<
            %span.label= I18n.t(:previous)
        %a.slide-next{:href=>'#'}<
          %span<
            %span.label= I18n.t(:next)
      .pagination
        %div{:id => "pagination-#{id}"}
