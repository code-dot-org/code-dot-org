---
title: Congratulations
theme: responsive
social:
  "twitter:card": player
  "twitter:site": "@codeorg"
  "twitter:url": "http://code.org/"
  "twitter:title": "The Hour of Code is here"
  "twitter:description": "The Hour of Code is a global movement reaching tens of millions of students in 180+ countries and over 30 languages. Ages 4 to 104."
  "twitter:image:src": "http://csedweek.org/images/code-video-thumbnail.jpg"
  "twitter:player": "https://www.youtube.com/embed/rH7AjDMz_dc?iv_load_policy=3&rel=0&autohide=1&showinfo=0"
  "twitter:player:width": 1920
  "twitter:player:height": 1080
max_age: 60
---
:ruby

  cert_id = params[:i]
  begin
    cert_script = params[:s] ? Base64.urlsafe_decode64(params[:s]) : ScriptConstants::HOC_NAME
  rescue ArgumentError
    bad_request
  end
  pass unless ScriptConstants.script_in_any_category?(cert_script)

  if cert_id
    share_url = "http://#{request.host_with_port}/certificates/#{cert_id}"
  else
    share_url = "http://#{request.host_with_port}/certificates/blank"
  end

  facebook = {:u=>share_url}
  twitter = {:url=>share_url, :related=>'codeorg', :text=>I18n.t(:just_did_hoc)}
  twitter[:hashtags] = 'HourOfCode' unless I18n.t(:just_did_hoc).include? '#HourOfCode'

  company_param = params[:co]
  # Do not show company profile sections for the cartoon network, even if someone
  # accidentally creates an entry for them in the forms table. (Our partnership
  # with cartoon network piggy-backs on our company profile infrastructure.)
  CARTOON_NETWORK = 'CN'
  form = DB[:forms].where(kind:'CompanyProfile', name:company_param).first if company_param && company_param != CARTOON_NETWORK
  @company = company = JSON.parse(form[:data]) if form

-if company
  %link{rel: "stylesheet", type: "text/css", href: "/css/ee.css"}/

#congrats.mobile-pad{:style=>'margin: 0 auto;'}

  -if company
    -name_in_header_b = company['name_in_header_b'] || nil
    -header_name = name_in_header_b ? company['display_name_s'] : nil
    #company_header= view :employee_engagement_header, company_name:header_name, logo_path:company['logo_path_s']

    %h1.ee_congrats_header=I18n.t :congratulations_on_completing_hoc

    #additional_actions.ee_markdown
      -if company['additional_actions_copy_t']
        =TextRender.safe_markdown company['additional_actions_copy_t']
      -else
        =view :company_profile_additional_actions
      = I18n.t :congratulations_volunteer
  -else
    %h1=I18n.t :congratulations_on_completing_hoc


  -if company_param == CARTOON_NETWORK && cert_script == 'gumball'
    - return_to_cn_path = 'http://www.cartoonnetworkarabic.com/hourofcode/?page=data_capture'
    -if request.locale == 'ar-SA'
      -# Users who started at https://code.org/api/hour/begin/gumball?company=CN&lang=ar
      -# should see this block when they finish.
      %h2
        أنهيت ساعة البرمجة !
        %a{:href=>return_to_cn_path} العودة إلى كرتون نتورك
    -else
      %h2
        I've finished my Cartoon Network Hour of Code.
        %a{:href=>return_to_cn_path} Take me back to Cartoon Network.

  #toprow
    #hoc-certificate-small.col-50{:style=>"padding:20px; padding-top: 0; box-sizing: border-box"}
      %a{:href=>"/printcertificate?s=#{cert_script}", :target=>'_blank'}
        %img{:src=>"/images/fit-540/#{certificate_template_for(cert_script)}", :width=>"100%"}

    #certificate.col-50
      = view :congrats_certificate
      = view :congrats_share, cert_id:cert_id, facebook:facebook, twitter:twitter

    #print_option.col-50{:style=>'display:none;'}
      %h2{:style=>'margin-top:15px; margin-bottom:10px'}
        =I18n.t :print_ice_art
        %a{:href=> CDO.studio_url("/s/1/level/108"), :style=>'font-size: 12px'}
          ="(#{I18n.t :create_art_with_zombie})"
      = view :frozen_print_gallery

  %div{:style=>'clear: both; height:30px'}

  = view :congrats_continue, script:cert_script

  %div{:style=>'clear: both; height:30px'}

  = view :congrats_leaderboards

  %br
  = view :petition_expand

= view 'popup_window.js'

:javascript

  var cookieValue;

  function getURLParameter(name) {
    return decodeURI(
      (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search)||[,null])[1]
    );
  }

  function processResponse(data)
  {
    certificate_processResponse(data);
  }

  $(document).ready(function() {
    $('#share-fb a').bind('click', function() {
      $("#share-fb").hide(); $("#like-fb").css('display', 'inline-block');
    });
    $('#share-twitter a').bind('click', function() {
      $("#share-twitter").hide(); $("#follow-twitter").css('display', 'inline-block');
    });

    // Only show the Frozen "Print your Ice Art" section if we came from a
    // page with "Frozen" in the URL
    // TODO: This is a _terrible_ way to check which certificate we want
    //       to show!  In particular, it means the certificate page cannot
    //       be accurately bookmarked.
    //       In the future, any tutorial-specific changes to the certificate
    //       should depend on a URL slug or param, not on referrer!
    var referredByFrozen = document.referrer.indexOf("frozen") != -1;
    if (referredByFrozen) {
      $('#print_option').show();
    }

    // placeholder text for non-HTML5 browsers
    $('input[type=text], textarea').placeholder();
    $('input[type=email], textarea').placeholder();

    cookieValue = getURLParameter("i");
    courseNameValue = getURLParameter("s");

    if (cookieValue != "null")
    {
      $.ajax({
        url: "/api/hour/status/" + cookieValue,
        dataType: "json"
      }).done(processResponse);
    }
    else if (courseNameValue != "null")
    {
      certificate_processAnonymous();
    } else {
      certificate_disable();
    }
  });

  var petition;
  $(document).ready(function() {
    petition = new Petition();
  });
