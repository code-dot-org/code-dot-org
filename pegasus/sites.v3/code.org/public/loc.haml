---
title: Lines of Code
theme: responsive
---

-hoc_metrics = fetch_hoc_metrics
-loc = format_integer_with_commas(fetch_metrics['lines_of_code'])
-started = format_integer_with_commas(hoc_metrics['started'])
-codeorg = format_integer_with_commas(hoc_metrics['total_codedotorg_count'])

%h1 How many lines of code?

%p
  Students of the Code.org tutorials (<a href="http://studio.code.org">Code Studio</a>) have written #{loc} lines of code. Is this a lot?  By comparison, the Microsoft Windows operating system has
  %a{:href=>"https://www.facebook.com/windows/posts/155741344475532", :target=>"_blank"} roughly 50 million lines of code.

%p Of course, every engineer knows that "lines of code" is a silly measure, and besides, the lines of code we are counting here are <i>much</i> less complex than the code written by professional software engineers. No software engineer measures the value or their work in lines of code. In fact, the best-designed programs often have the simplest designs and the fewest lines of code.

%p However, we count this as an important measure of total usage of our tutorials. Not everybody finishes an Hour of Code tutorial. Some students spend one hour. Some spend 10 minutes. Some spend days. Instead of counting how many students "finish one hour" or how much time they spent, this is our simplest measure of progress.

%p
  Note: this is not counting all participants in the Hour of Code. The Hour of Code movement consists of dozens of tutorial partners, and this metric is only counting usage of Code.org's
  = succeed(',') do
    %a{:href=>"http://studio.code.org/", :target=>"_blank"}> Code Studio tutorials
  where each block/command dragged onto the screen counts as one line of code.

%img{:src=>"/images/blockstojsloc.png", :style=>"max-width: 100%"}

%br/
%br/

%h1 How many Hours of Code?

%p In total, students have participated in the  Hour of Code #{started} times. Within this set of students, #{codeorg} of the Hour of Code activities were within tutorials created by Code.org. And students using Code.org's broader Code Studio tutorials and learning platform have written #{loc} lines of code.

%p We do not count unique student IDs perfectly when tracking participation in the Hour of Code. Why? Partly because we don’t want the friction of prompting to “login / register” before a student or classroom tries learning for the first time, and partly because there are may activities we cannot track online. We do take certain steps to reduce double-counting, but without a login prompt, this can’t work perfectly. At the same time, there are MANY student activities in the Hour of Code that aren’t tracked at all. For example: (1) students who use a mobile/tablet app to try the Hour of Code are typically not counted (2) students who share a screen for pair-programming or group-programming may be counted as one (3) students trying an unplugged classroom activity cannot be counted online (4) teachers who create their own Hour of Code activities. As a result, there is some under-counting and some double-counting, and so we do not view the Hour of Code tracker to be an exact measure of usage. It is certainly directionally correct, and shows that many tens of millions of students have participated. And the “lines of code” counter shows real usage in our learning platforms.
