---
layout: none
theme: none
content-type: text/ng-template
---

:scss
  .records {
    min-width: 100%;
    table-layout: auto;

    th {
      padding: 10px;
      text-align: left;
      input {
        color: #333;
      }
    }
    td {
      width: 200px;
      padding: 10px;
      border: 1px solid #ccc;
    }
    input {
      width: 100%;
    }
    .name {
      font-size: 1.5em;
    }
  }
  .dropdown {
    float: right;

    li:before {
      content:none;
    }
    li {
      padding: 0;
      text-indent: 0;
    }
  }
  .dropdown-toggle {
    :hover {
      cursor: pointer;
    }
    color: white;
  }
  .level-buttons {
    margin: 10px 0;
  }
  #import-actions {
    float: left;

    #select-file {
      display: inline-block;
    }
  }
  #add-actions {
    float: right;
  }
  #export-csv {
    color: white;
  }
  form {
    display: inline;
  }
  .conversion-error {
    color: red;
    }

%div.error
  %h2
    Viewing table: {{tableName}}
  %div.conversion-error
    {{conversionError}}
  %div.clearfix.level-buttons
    %div#import-actions
      %span
        %button.btn.btn-primary{"ng-click" => "exportTable();"}
          Export
      %span
        %button.btn.btn-primary{"ng-hide" => "importing", "ng-click" => "importing = true"}
          Import
        %span

          %form#import-form{"ng-show" => "importing", "method" => "POST", "enctype" => "multipart/form-data", "action" => "{{'/v3/import-shared-tables/' + channelId + '/' + tableName}}"}
            %input.btn.btn-danger{"type" => "submit", "value" => "Overwrite & Import", "ng-disabled" => "!fileSelected"}
            %input#select-file{"name" => "import_file", "type" => "file", "accept" => ".csv", "onchange" => "angular.element(this).scope().selectedFile(this)"}



    %div#add-actions
      %span
        %form{"ng-show" => "addingColumn"}
          %input{"ng-model" => "newColumnName", "placeholder" => "Column name"}
          %button.btn.btn-primary{"ng-click" => "addColumn(); addingColumn = false"} Save
          %button.btn.btn-default{"ng-click" => "addingColumn = false"} Cancel
        %button.btn.btn-primary{"ng-click" => "addingColumn = true", "ng-hide" => "addingColumn"} Add column
        %button.btn.btn-primary{"ng-click" => "newRecord.editing = true"} Add row
  %table.records
    %tr
      %th
        %a{href: "", "ng-click" => "order = 'id'; reverse=!reverse"}
          id
          %i.fa.fa-caret-down{"ng-show" => "order == 'id' && reverse == true"}
          %i.fa.fa-caret-up{"ng-show" => "order == 'id' && reverse == false"}
      %th{"ng-repeat" => "column in columns"}
        %a{href: "", "ng-hide" => "column.editing", "ng-click" => "$parent.order = column.name; $parent.reverse = !$parent.reverse"}
          {{column.name}}
          %i.fa.fa-caret-down{"ng-show" => "order == column.name && reverse == true"}
          %i.fa.fa-caret-up{"ng-show" => "order == column.name && reverse == false"}

        %span{"ng-show" => "column.editing"}
          %form{"ng-submit" => "renameColumn(column)"}
            %input{"ng-model" => "column.name", type: "text"}

        %div.dropdown{"ng-hide" => "column.editing"}
          %a.dropdown-toggle{"data-toggle" => "dropdown"}
            %i.fa.fa-cog
          %ul.dropdown-menu.dropdown-menu-right
            %li
              %a.btn.btn-link{"ng-click" => "column.editing = true"} Rename Column
            %li
              %a.btn.btn-link{"ng-click" => "deleteColumn(column)"} Delete Column
            %li
              %a.btn.btn-link{"ng-click" => "coerceColumn(column, 'string')"} Convert to string
            %li
              %a.btn.btn-link{"ng-click" => "coerceColumn(column, 'number')"} Convert to number
            %li
              %a.btn.btn-link{"ng-click" => "coerceColumn(column, 'boolean')"} Convert to boolean
      %th
    %tr
      %td
      %td{"ng-repeat" => "column in columns"}
        %span{"ng-show" => "newRecord.editing"}
          %input{"ng-model" => "newRecord[column.id]", type: "text"}/
      %td
        %button.btn.btn-primary{"ng-click" => "saveNewRecord()", "ng-show" => "newRecord.editing"} Save
        %button.btn.btn-danger{"ng-click" => "deleteNewRecord()", "ng-show" => "newRecord.editing"} Delete
    %tr{"ng-repeat" => "record in records | orderBy:order:reverse"}
      %td
        %span
          {{ record.id }}
      %td{"ng-repeat" => "column in columns"}
        %span{"ng-hide" => "record.editing"}
          {{ record[column.id] }}
        %span{"ng-show" => "record.editing"}
          %input{"ng-model" => "record[column.id]", type: "text"}/
      %td
        %button.btn.btn-default{"ng-click" => "record.editing = true", "ng-hide" => "record.editing"} Edit
        %button.btn.btn-primary{"ng-click" => "saveRecord(record)", "ng-show" => "record.editing"} Save
        %button.btn.btn-danger{"ng-click" => "deleteRecord(record)"} Delete

  %div.level-buttons
    %button.btn.btn-danger{"ng-click" => "deleteTable()", "ng-hide" => "deletingTable"} Delete table
    %button.btn.btn-danger.disabled{"ng-show" => "deletingTable"} Deleting...

  %h3 Debug view of table:
  %pre{"ng-model" => "records"}
    {{ records | json }}
