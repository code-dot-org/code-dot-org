---
title: CS Curriculum for grades 9-12
video_player: true
theme: responsive 
---

[solid-block-header]

High School

[/solid-block-header]

For high schools, we offer two years computer science courses for beginners:  Computer Science Discoveries, and Computer Science Principles. If you want to go even further with your students, check out our recommended third party resources for teaching AP Computer Science A and additional courses in programming, game design, and more! 

Our curriculum is available at [no cost](/commitment) for anyone, anywhere to teach. You can read more about our [curriculum values here](/educate/curriculum/values).

<br>
<%= view :professional_learning_apply_banner, :use_sign_up_text => true %>

<hr>

<a name="csd"></a>
# Computer Science Discoveries</strong>

<div class="col-40" style="padding-right: 10px;">

<% facebook = {:u=>'https://youtu.be/2-QpgNHknds'} %>
<% twitter = {:url=>'https://youtu.be/2-QpgNHknds', :related=>'codeorg', :text=>"Computer Science Discoveries. (Thanks #{get_random_donor_twitter} for supporting @codeorg)"} %>
<%=view :display_video_thumbnail, id: "intro_csd", video_code: "2-QpgNHknds", play_button: 'center', letterbox: 'false', twitter: twitter, facebook: facebook %>

</div>

[col-60]

CS Discoveries is an introductory course for 6-10th grade students that can be flexibly taught as a single semester, two semesters over multiple years, or as a full year course. Mapped to CSTA standards, the course takes a wide lens on computer science by covering topics such as problem solving, programming, physical computing, user-centered design, and data, while inspiring students as they build their own websites, apps, games, and physical computing devices.

[<button>Learn about CS Discoveries</button>](/educate/csd)&nbsp;&nbsp;[<button>Learn about professional learning</button>](/educate/professional-learning/middle-high)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

<a name="csp"></a>
# Computer Science Principles (intro and AP course)

<% facebook = {:u=>'https://youtu.be/DMr1iFYacGQ'} %>
<% twitter = {:url=>'https://youtu.be/DMr1iFYacGQ', :related=>'codeorg', :text=>"Computer Science Principles. (Thanks #{get_random_donor_twitter} for supporting @codeorg)"} %>

<div class="col-40" style="float:left; padding:10px;">

  <%=view :display_video_thumbnail, id: "CSPrinciples", video_code: "DMr1iFYacGQ", play_button: 'center', facebook: facebook, twitter: twitter, letterbox: 'false' %>

</div>

[col-60]

Designed for 9 - 12 grade students, CS Principles introduces students to the foundational concepts of computer science and challenges them to explore how computing and technology can impact the world. This year-long course can be taught as an introductory course and as an AP course - no prerequisites required for students or teachers new to computer science! CS Principles complements CS Discoveries with a deeper focus on concepts such as how the internet works and the societal impacts of computer science.

<% facebook = {:u=>'https://youtu.be/DMr1iFYacGQ'} %>
<% twitter = {:url=>'https://youtu.be/DMr1iFYacGQ', :related=>'codeorg', :text=>"Computer Science Principles. (Thanks #{get_random_donor_twitter} for supporting @codeorg)"} %>

[<button>Learn about CS Principles</button>](/educate/csp) &nbsp;&nbsp;[<button>Learn about professional learning</button>](/educate/professional-learning/middle-high)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

# Computer Science Fundamentals - Express

<div class="col-40" style="padding-right: 10px;">

<img src="/images/fill-380x215/code20hr.jpg" style="max-width: 100%">

</div>

[col-60]

For a lightweight option that can be integrated as a unit in an existing technology or programming class, or as an after-school program, Code.org offers the 30-hour Express Course. This course covers all the core concepts from the elementary school curriculum [Computer Science Fundamentals](/educate/curriculum/elementary-school), but at an accelerated pace designed for students ages 10 - 18.

[<button>Learn about CS Fundamentals Express</button>](/educate/curriculum/express-course)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

<a name="apcsa"></a>
# AP Computer Science A in Java

There are two AP computer science offerings, and students can take either course in any order. The AP Computer Science A course and exam focuses on computing skills related to programming in Java. The AP Computer Science Principles course complements AP Computer Science A as it aims to broaden participation in the study of computer science.

While Code.org does not have an AP Computer Science A curriculum, we have recommendations for a number of great curricula and programs available to teachers and students.

[<button>Learn about AP CS A resources</button>](/educate/curriculum/apcsa)

<br>
<hr>

<a name="AppLab"></a>

# Computer science in other subjects

Are you interested in a few lessons to demonstrate how computer science can be used in another subject area? Partners have created introductory tutorials as part of the Hour of Code. These activites are ideal for math, history, or other subject-area teachers interested in supplementing their curriculum and letting students explore the cross disciplinary aspects of computer science. Activities are available for [science](https://hourofcode.com/learn?grade=9%2B&subject=science), [math](https://hourofcode.com/learn?grade=9%2B&subject=math), [social studies](https://hourofcode.com/learn?grade=9%2B&subject=history), [language arts](https://hourofcode.com/learn?grade=9%2B&subject=la), and [art/media/music](https://hourofcode.com/learn?grade=9%2B&subject=art) classes.

<br>
<hr>

<a name="AppLab"></a>
# App Lab and other resources

In addition to our courses, we have tools and resources that you can blend into your own curriculum. Teachers can use [App Lab](/applab) in any course to teach students how to create apps and games in JavaScript. If you're ready to go further, [Game Lab](/gamelab) lets students make more complex animations and games including objects and characters that interact with each other. Our [widget library](/widgets) provides lessons and tools to teach text compression, encryption, pixels/RGB, and how the internet works. And, our [video library](/educate/resources/videos) helps illustrate computer science concepts for your class.

[<button>App Lab</button>](/applab)

<br>
<hr>

<a name="thirdparty"></a>

[solid-block-header]

Recommended courses from 3rd parties

[/solid-block-header]

<!--- If you update the resources here, don't forget to also update /educate/curriculum/3rdparty -->

| Organization                             | Curriculum                               | Professional Development                 |
| ---------------------------------------- | ---------------------------------------- | ---------------------------------------- |
| [AWS Educate](http://www.awseducate.com/k12) | Explorer Course - 10 modules, 20 minutes each / 10 facilitator guides, 45 minutes each; Inventor Course - 10 modules, 20 minutes each / 10 facilitator guides, 45 minutes each; Builder Course - 14 modules, 30 minutes each. The content in the AWS Educate portal for students is configured as a self paced eLearning course to be completed asynchronously. Each module of content is approximately 20 minutes in length. The content in the AWS Educate portal for educators is configured as lesson plans to support the facilitation of 45 minute lessons. | Online training available through the AWS Educate portal and periodic virtual webinars. In-person training available at various conferences and AWS events. |
| [Beauty and Joy of Computing](http://bjc.berkeley.edu/) | Year-long CS Principles course, FREE     | In-person in NYC, Berkeley, CA and North Carolina, FREE, stipends in NYC, stipends + travel elsewhere paid as available |
| [Bootstrap](http://www.bootstrapworld.org/) | 4 research-based curricular modules for grades 6-12(Algebra, Reactive, Data Science, & Physics) that can be integrated into Social Studies, Science, Math, Intro and even AP CS Principles courses. Materials reinforce core concepts from mainstream subjects, enabling non-CS teachers to adopt our introductory materials while delivering rigorous and engaging computing content. | 3-day workshops for schools and districts. Fees range |
| [Carnegie Learning](https://www.carnegielearning.com/zulama/) | Zulama is a standards-aligned K-12 curriculum that gives students a strong digital foundation. Students ideate, research, prototype, and program their own computational apps, games, and simulations. Our courses were written by faculty at Carnegie Mellon and MIT. All content is fully customizable, including assessments. Our content is rigorous yet fun, and includes assessments, lesson plans, and more. | Included with student curriculum: Engaging, immersive, self-guided online professional learning courses that get teachers started on our platform; self-guided online tutorials that correspond to each student course; coding coaches are available through live chat during regular business hours (EST); online teachers forum, video library, and FAQs. |
| [CMU CS Academy](https://academy.cs.cmu.edu/) | One CS1 course, 120 hours that can be split into two halves or one year | Three-day in-person workshops or, alternatively, ~25 hours of online training.  There are leveling-up opportunities for teachers to become "CMU CS Academy educators" and "CMU CS Academy trainers" to promote continued learning. |
| [Code Avengers](https://www.codeavengers.com/edu) | Learn by doing and create real world objects and outcomes through the 100s of hours of learning on the PRO platform. Develop skills in web development, programming, design and much more.  $12.50 - $25/student. Bulk discounts available. | Free onboarding PD session with any school license purchase. Pro courses to learn in-depth content of digital technologies/ computer science included with Teacher License.  Additional PD Training Session USD $200 per teacher per half day session delivered via video conference. |
| [CodeCombat](https://codecombat.com/) | 11 game-based courses teaching Python and JavaScript. Includes 5 game and web development courses. College Board endorsed provider of curriculum and PD for AP CS Principles. First course and teacher resources are free. School site licenses start at $2500 | Free onboarding call, $500/online PD |
| [CodeHS](https://codehs.com) | 6th-12th grade CS pathway. All curriculum is FREE! High school courses include introductory courses in JavaScript, Python, and Web Design, AP CSP, AP CS A, Cybersecurity, and Mobile Apps. Pro plans for schools start at $2400. For a full course list, visit [https://codehs.com/course/catalog](https://codehs.com/course/catalog). | Online PD courses are available for $1750. In-person PD workshops are available for schools and districts. Free summer workshops in select cities. For more information, visit [https://codehs.com/pd](https://codehs.com/pd). |
| [CompuScholar](https://www.compuscholar.com/schools) | Full-year or single-semester courses for middle and high school students, with subjects like Java, C#, Python, HTML/CSS, Unity Video Game Design, Digital Literacy and AP CS A. Turn-key teaching system includes full solutions and teacher support. Flexible licensing options (per-student, site license, etc.). | FREE onboarding, FREE monthly webinars, FREE dedicated CSR for 1:1 support, FREE opportunities to take CompuScholar courses for personal growth |
| [CS50](https://ap.cs50.school/) | Our curriculum includes 7 core units and 2 additional units that go beyond the scope of AP CSP. The curriculum includes all that teachers might need in order to teach CS50 in their own classrooms, including assignments, notes, slides, software, videos, and more. CS50 is free and open source. | 3 day in-person workshop, $1200/teacher + travel, tuition waivers available |
| [Edhesive](https://edhesive.com/) | 3 full-year, blended courses: Intro to CS, AP CS Principles, AP CSA - Java; Intro CS also available as half-year course. Programming languages include Python, Scratch, Processing and Java. AP CSP is College Board-endorsed curriculum, and both AP CSP and AP CSA prepare students for the AP Exams. | 40-hour, self-paced online course; in-person PD available - please inquire. $1000 for full online PD course. |
| [Exploring Computer Science](http://www.exploringcs.org/) | Year-long introductory high school course aimed at broadening participation in CS. 6 units, 6 weeks each | Week-long summer institute and quarterly one-day academic year workshops |
| [Mobile CSP](http://www.mobile-csp.org/) | Year-long Computer Science Principles course, materials available online, FREE | Online, in-person, or Hybrid. Extended (90-100 hours): $2500. Immersion (50 hours): $1500. Includes master teacher and academic year support. Scholarships available. |
| [NMSI](http://www.nms.org/) | NMSI provides 7 days of PD, mentoring services and student study sessions. | We offer 7 days face to face PD, online mentoring and blackboard teacher support environment, and face to face student study sessions. Free for partner schools |
| [Parallax Inc.](https://www.parallax.com/education/teach/program-options/high-school) | Variety of robotics kits and tutorials to teach students critical thinking and logical reasoning. Different options for electronics beginners or intermediate/advanced programmers. Curriculum is FREE. Robot purchase required. | FREE in-person immersive single day trainings. Occasional live webinars. |
| [Popfizz Computer Science](https://popfizz.io/teachers) | 2 full year courses: AP CS-A, AP CS Principles 1 semester course: Intro to CS with Raspberry Pi and Python, Intro to CS with Python 2-7 week course: Creating 3D Graphics using Javascript | Two 45-minute online workshops are provided with several in-person check-ins during the year supplemented by online materials. Customized in-person PD is available upon request. |
| [Project Lead The Way](https://www.pltw.org/our-programs/pltw-computer-science/pltw-computer-science-curriculum) | 3 courses, $2000/school                  | 5 or 10-day in-person training, $1200 or $2400, depending on course |
| [ScratchEd](http://scratched.gse.harvard.edu/guide/) | 6-unit course, FREE                      | In-person educator meet-ups and online MOOC, FREE |
| [Stanford's Introduction to Logic](http://intrologic.stanford.edu/homepage/index.html) | This course is an introduction to Symbolic Logic suitable for secondary school students. It provides an overview of logic technology and its applications - in mathematics, science, engineering, business, law, and so forth. Topics include the syntax and semantics of Propositional Logic, Relational Logic, and Herbrand Logic, validity, contingency, unsatisfiability, etc. | There are multiple teacher professional opportunities, including one on the west coast (Stanford) and one on the East coast (Philadelphia). The tuition for the PD is $750, but scholarships are offered to teachers from districts that do not have funding to support teacher professional development.|
| [Swift CSP](https://www.makeschool.com/online-courses/swift-computer-science-principles) | Full year course, plus tons of extra advanced curriculum for differentiation, FREE | Three day in-person workshop, with materials and curriculum supplied before the training. In-person training costs $250, to support costs for running PD.  Any online support, resources, and/or online-PD is free. |
| [TEALS](http://www.tealsk12.org/schools/) | 3 courses, including AP CS A, FREE       | Program implemented by TEALS volunteers |
| [UC Davis C-STEM Center](http://c-stem.ucdavis.edu/) | 14 year-long CS, robotics,  Algebra 1, Geometry, and Algebra 2 with computing and robotics, Arduino, Raspberry Pi courses for grades 9-12. Coding in Blockly and user-friendly C/C++ Interpreter Ch. Free teaching resources available  including PDF textbooks.  School site licenses  only $1,000. | Nearly 100 free interactive and video tutorials. $150/day training held at UC Davis campus and nationwide. Costs vary for custom-tailored on-site training. |
| [UTeach CS Principles](https://cs.uteach.utexas.edu/) | Developed by the UTeach Institute at The University of Texas at Austin, UTeach CS offers engaging, project-based curriculum for AP CS Principles and AP CS A courses. UTeach CS was designed to engage all students in computing, with an emphasis on young women and historically underrepresented minorities. Classroom-tested activities, comprehensive teacher materials, AP-style test banks, and pacing guides, plus access to a robust teacher professional learning community help ensure successful implementation by teachers with a variety of content backgrounds and levels of expertise. Scratch and Processing are the primary programming languages for CS Principles, while CS A is Java-based. Licenses for curriculum and year-round, on-demand support are $1,200 per teacher for the first year, and $600 for renewals. See our website for current funding opportunities. | UTeach CS offers 5-day in-person professional learning workshops and 6- or 10-week, self-paced online workshops for current and future teachers of CS Principles and CS A. Teachers will leave the workshop ready to successfully implement the UTeach CS curriculum and prepared to meet AP course requirements. 5-day, in-person PD is available for $1,200/teacher. Online PD is available for $600/teacher. See our website for current funding opportunities. |
| [Vidcode](https://www.vidcode.com/) | First course and teacher resources are free. Over 12 creative coding courses, 10 hours each, that teach JavaScript and computational thinking. Includes cross-disciplinary, interaction design, and game design courses. Unlimited classroom accounts starting at $299/year [https://www.vidcode.com/pay](https://www.vidcode.com/pay) | Free onboarding call, animated online PD course, $250/webinar, $3500/onsite PD |

<br>
<a target="_blank" href="https://docs.google.com/spreadsheets/d/1-lbIKCkcVWWTFhcmpZkw8AcGv0iPj-hEqvO0Eu0N1hU/pubhtml?gid=705822074&single=true"><button>See full details and comparison</button></a>

