---
title: CS Curriculum for grades 6-8
video_player: true
theme: responsive
---

 <%= view :professional_learning_apply_banner, :link_suffix => "program-information" %>

[solid-block-header]

Middle School

[/solid-block-header]

Our curriculum is available at [no cost](/commitment) for anyone, anywhere to teach. You can read more about our [curriculum values here](/educate/curriculum/values).

<hr>

<a name="csd"></a>
# Computer Science Discoveries

<div class="col-40" style="padding-right: 10px;">

<% facebook = {:u=>'https://youtu.be/2-QpgNHknds'} %>
<% twitter = {:url=>'https://youtu.be/2-QpgNHknds', :related=>'codeorg', :text=>"Computer Science Discoveries. (Thanks #{CdoDonor.get_random_donor_twitter} for supporting @codeorg)"} %>
<%=view :display_video_thumbnail, id: "intro_csd", video_code: "2-QpgNHknds", play_button: 'center', letterbox: 'false', twitter: twitter, facebook: facebook%>

</div>

[col-60]

Computer Science Discoveries is an introductory course for 6 - 10th grade students that can be flexibly taught as a single semester, two semesters over multiple years, or as a full year course. Mapped to CSTA standards, the course takes a wide lens on computer science by covering topics such as problem solving, programming, physical computing, user-centered design, and data, while inspiring students as they build their own websites, apps, games, and physical computing devices.

[<button>Learn about CS Discoveries</button>](/educate/csd)&nbsp;&nbsp;[<button>Learn about professional learning</button>](/educate/professional-learning/middle-high)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

<a name="aimodule"></a>
# Artificial Intelligence and Machine Learning

The AI and Machine Learning curriculum in CSD is also offered as a <a href="https://studio.code.org/s/aiml-2021?viewAs=Teacher" target="_blank">standalone module</a>. As these technologies touch more and more of our daily lives, they have become an essential part of foundational computer science education. The module, which spans roughly 5 weeks of learning, focuses on AI ethics, examines issues of bias, and explores and explains fundamental concepts through a number of online and unplugged activities and full-group discussions.

[<button>Learn about AI</button>](/ai)&nbsp;&nbsp;[<button>Explore the AI module</button>](https://studio.code.org/s/aiml-2021?viewAs=Teacher)&nbsp;&nbsp;

<br>
<hr>

<a name="express"></a>

# Computer Science Fundamentals - Express

<div class="col-40" style="padding-right: 10px;">

<img src="/images/fill-380x215/code20hr.jpg" style="max-width: 100%">

</div>

[col-60]

For a lightweight option that can be integrated as a unit in an existing technology or programming class, or as an after-school program, Code.org offers the 30-hour Express Course. This course covers all the core concepts from the elementary school curriculum [Computer Science Fundamentals](/educate/curriculum/elementary-school), but at an accelerated pace designed for students ages 10 - 18.

[<button>Learn about CS Fundamentals Express</button>](/educate/curriculum/express-course)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

# For Science Classrooms

<div class="col-40" style="padding-right: 10px;">

<img src="<%= CDO.shared_image_url("courses/logo_science.png") %>" style="max-width: 100%">

</div>

[col-60]

Code.org has partnered with the award-winning [Project GUTS](http://www.projectguts.org/) (Growing Up Thinking Scientifically) to help science teachers introduce computer science as a tool to teach modeling and simulation. This curriculum teaches computer science practices and concepts in the context of life, physical and earth sciences. CS in Science is based on a crosswalk identifying areas of overlap between the NGSS and Computer Science Teachers Association K-12 Computer Science Standards.

[<button>Learn about CS in Science</button>](/educate/science)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

# For Algebra Classrooms

Code.org has partnered with [Bootstrap](http://www.bootstrapworld.org) to adapt their algebra-aligned curriculum to a block based course that teaches algebraic and geometric concepts through computer programming. The lessons focus on concepts like order of operations, the Cartesian plane, function composition and definition, and solving word problems - all within the context of video game design.

[<button>Learn about CS in Algebra</button>](/educate/algebra)

<br>
<hr>

# Computer science lessons in other subjects

Are you interested in a few lessons to demonstrate how computer science can be used in another subject area? Partners have created introductory tutorials as part of the Hour of Code. These activities are an ideal  for math, history, or other subject-area teachers interested in supplementing their curriculum and allowing students explore the cross disciplinary aspects of computer science. Activites are available for [science](https://hourofcode.com/learn?grade=6-8&subject=science), [math](https://hourofcode.com/learn?grade=6-8&subject=math), [social studies](https://hourofcode.com/learn?grade=6-8&subject=history), [language arts](https://hourofcode.com/learn?grade=6-8&subject=la), and [art/media/music](https://hourofcode.com/learn?grade=6-8&subject=art) classes.

<br>
<hr>

# Recommended courses from 3rd parties

If you want to go even further with your students, or you're looking for other options, check out our <a href="https://code.org/educate/curriculum/3rd-party">recommended third party resources</a> for additional courses in programming, game design, and more!
