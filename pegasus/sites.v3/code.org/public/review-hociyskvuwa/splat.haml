---
title: Review Hour of Code special events
---
:ruby
  dont_cache
  authentication_required!
  forbidden! unless dashboard_user[:user_type] == 'teacher'

  splat = request.splat_path_info[1..-1].split("/")
  country = splat.first
  state_code = splat.last unless country == splat.last

  require pegasus_dir 'helper_modules/hoc_event_review'
  events = if country == 'us' && state_code
    HocEventReview.events(special_events_only: true, reviewed: false, state: state_code)
  elsif country == 'all'
    HocEventReview.events(special_events_only: true, reviewed: false)
  else
    HocEventReview.events(special_events_only: true, reviewed: false, country: country)
  end

:css
  #hoc-events-review-table {
    width: 970px;
    max-width: 970px;
  }
  #hoc-events-review-table td {
    vertical-align: top;
    width: 194px;
    max-width: 194px;
    overflow: scroll;
  }
  tr.bg-success {
    background: #dff0d8;
  }
  tr.bg-danger {
    background: #f2dede;
  }


%h1 Review Hour of Code special events

%h3
  Don't forget to follow
  %a{href: "https://docs.google.com/document/d/1cwUdqdPW7CF0d7DfWTqmCkMjjylfZ5sdrLS6-jGgPzY/edit?usp=sharing"}
    this rubric
  for approving events.

-if events.nil_or_empty?
  %p There are no Hour of Code special events available for review

-else
  %h3
    There are
    = events.count
    events left to review on this page (max 100). If there are 100 or more, reviewing events and refreshing the page will load more events.
  %table#hoc-events-review-table
    %tr
      %th Name
      %th Organization
      %th Details
      %th &nbsp;

    -events.each do |event|
      %tr
        %td= event['name_s']
        %td= event['organization_name_s']
        %td= event['special_event_details_s']
        %td{style: "white-space: nowrap;"}
          %span{class: "event-secret", style: "display: none;"}= event[:secret]
          %button.btn.btn-success.btn-sm.btn-approve Approve
          %button.btn.btn-danger.btn-sm.btn-reject Reject
          %div.success-message{style: "display: none; font-size: 11px;"} successfully submitted
          %div.failure-message{style: "display: none; font-size: 11px;"} failed to submit
:javascript
  $(function() {
    $('.btn-approve').click(function() {
      var secret=$(this).closest('td').find('.event-secret').text();
      var row = $(this).closest('tr');
      submitReview(secret, 'approved', row);
    });
    $('.btn-reject').click(function() {
      var secret=$(this).closest('td').find('.event-secret').text();
      var row = $(this).closest('tr');
      submitReview(secret, 'rejected', row);
    });
  });

  function submitReview(secret, review, row) {
    $.ajax({
      url: "/v2/forms/#{HocEventReview.kind}/" + secret + "/review",
      type: "post",
      contentType: "application/json; charset=utf-8",
      data: JSON.stringify( { review: review } )
    }).fail(function() {
       row.find(".failure-message").css("display", "");
    }).success(function() {
      if (review === "approved") {
        row.removeClass('bg-danger').addClass('bg-success');
      } else if (review === "rejected") {
        row.removeClass('bg-success').addClass('bg-danger');
      }
      row.find(".success-message").css("display", "");
    });
  }
