@import "font", "typography", "breakpoints";

// Variables
$border-radius: 4px;

// Mixins
@mixin focus-outline {
  outline: var(--brand_primary_default) solid 2px;
  outline-offset: 2px;
}

// Start styles
p {
  @include body-two;
}

// Use these classes to change a section's background color
section.bg-neutral-light {
  background-color: var(--neutral_light);
}
section.bg-neutral-dark {
  background-color: var(--neutral_dark);
}
section.bg-secondary {
  background-color: var(--brand_secondary_light);
}
section.bg-primary-light {
  background-color: rgba(171, 223, 229, 0.5);

  a {
    color: var(--neutral_dark) !important;
    &:hover {
      color: var(--brand_secondary_dark) !important;
    }
    &.link-button {
      color: var(--neutral_white) !important;
    }
  }
}
section.bg-pattern-dark {
  background: url("/images/banners/banner-bg-lines-neutral-dark.png") center
    repeat;
  background-size: 12rem;
  background-color: var(--neutral_dark);
}

// Hide random whitespace at the bottom
//  of the page from legacy code
.container_responsive_full_width > .desktop-feature {
  display: none;
}

// Show elements based on screen size
.show-desktop {
  display: block;
  @media (max-width: $width-lg) {
    display: none;
  }
}

.show-tablet-and-mobile {
  display: none;
  @media (max-width: $width-lg) {
    display: block;
  }
}

// Removes the bottom margin or padding —
// often helpful on a last paragraphs or list elements
// to maintain consistent white space between sections

// !important is used here to override existing margin
// or padding bottom styles – this allows this class to
// work on any element
.no-margin-bottom {
  margin-bottom: 0 !important;
}
.no-padding-bottom {
  padding-bottom: 0 !important;
}

// Adds 2rem of space above or below an element
// !important is used here to override existing margin
// – this allows this class to work on any element
.add-margin-top {
  margin-top: 2rem !important;
}
.add-margin-bottom {
  margin-bottom: 2rem !important;
}


// FontAwesome icon defaults
// Sets fixed height on icon container to maintain consistent
// spacing when icons have varying widths and heights
i.fa-fw {
  line-height: 1.25em;
}

.icon::before {
  display: inline-block;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
}

// Flex container
// Use classes to determine flexbox characteristics
.flex-container {
  display: flex;

  &.flex-direction-column {
    flex-direction: column;
  }
  &.flex-direction-column-tablet {
    @media screen and (max-width: $width-md) {
      flex-direction: column;
    }
  }
  &.flex-direction-column-mobile {
    @media screen and (max-width: $width-sm) {
      flex-direction: column;
    }
  }
  &.flex-direction-row {
    flex-direction: row;
  }
  &.justify-space-between {
    justify-content: space-between;
  }
  &.justify-center {
    justify-content: center;
  }
  &.justify-end {
    justify-content: end;
  }
  &.align-content-baseline {
    align-content: baseline;
  }
  &.align-items-baseline {
    align-items: baseline;
  }
  &.align-items-center {
    align-items: center;
  }
  &.align-items-start {
    align-items: flex-start;
  }
  &.wrap {
    flex-wrap: wrap;
  }
  &.wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  &.gap-1 {
    gap: 1rem;
  }
  &.gap-1-5 {
    gap: 1.5rem;
  }
  &.gap-2 {
    gap: 2rem;
  }

  & > .flex-1 {
    flex: 1;
  }
  & > .flex-1-5 {
    flex: 1.5;
  }
}

// Grid container
// Apply class to containers that use grid
.grid-container {
  display: grid;

  &.two-col {
    @media (min-width: $width-md) {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  &.justify-space-between {
    justify-content: space-between;
  }
  &.align-items-center {
    align-items: center;
  }
  &.gap-2 {
    gap: 2rem;
  }
  &.gap-4 {
    gap: 4rem;
  }
}

// Line divider for use between sections
// Use .no-margin-bottom to remove extra space above
// a section that starts with an h2
div.divider {
  max-width: 960px;
  margin: 1rem auto 0;

  @media screen and (max-width: $width-md) {
    padding: 0 2rem;
  }

  hr {
    border: 0;
    border-top: 1px solid var(--neutral_dark60);
    margin: 0;
    width: 100%;
  }
}

// Add rounded corners to an element
.rounded-corners {
  border-radius: $border-radius;
}

// Add border to an element
.has-border {
  border: 1px solid var(--neutral_dark10);
}

// Add a thick box shadow to an element
// See code.org/teach for an example
.box-shadow-primary {
  box-shadow: 8px 8px 0 var(--brand_primary_light);
}

// Add a soft box shadow to an element
.box-shadow-soft-neutral {
  box-shadow: 0px 4px 4px rgba(0, 0, 0, .2);
}

// Lines (<hr>)
hr {
  border-top: 1px solid var(--neutral_dark20);
  margin: 3rem 0;

  &.dark {
    border-top: 1px solid var(--neutral_dark60);
  }
}

// Button wrapper for side-by-side buttons
.button-wrapper {
  display: flex;
  flex-wrap: wrap;
  column-gap: 1.5rem;
  row-gap: 0.5rem;

  &.centered {
    justify-content: center;
  }
}

// Basic hero banner
// Used on common landing pages
// (not homepage or campaign pages)
.hero-banner-basic {
  position: relative;
  overflow: hidden;

  & > .grid-container {
    @media (min-width: $width-sm) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .text-wrapper {
    position: relative;
    z-index: 1;
  }
}

// Unordered lists
ul {
  margin: 1rem;

  li {
    line-height: 1.4;
    margin: 0.5rem 0;

    &:before {
      color: var(--neutral_dark);
    }

    p {
      @include body-three;

      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  // Clear spacing and list dots
  &.clear-styles {
    margin: 0;
    padding: 0;

    li {
      padding: 0;
      text-indent: 0;

      &:before {
        content: "";
      }
    }
  }

  // Show list items in two columns
  &.two-col {
    @media screen and (min-width: $width-md) { column-count: 2; }

    li:first-child {
      margin-top: 0;
    }
  }

  // Show list items in three columns
  &.three-col {
    @media screen and (min-width: $width-sm) { column-count: 2; }
    @media screen and (min-width: $width-md) { column-count: 3; }

    li:first-child {
      margin-top: 0;
    }
  }

  // Lists that use icons next to content
  &.icon-bullet-list {
    margin: 1rem 0;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    // Use this class if list items need to
    // stretch to the width of the container
    &.full-width {
      li {
        width: 100%;
      }
    }

    li {
      padding-left: 0 !important;
      text-indent: 0 !important;
      display: flex;
      width: 47%;
      margin: 1.5rem 0;
      gap: 1rem;

      @media screen and (max-width: $width-sm) {
        width: 100%;
      }

      &:before {
        content: none;
      }

      i {
        font-size: 2rem;
      }

      h3 {
        @include heading-sm;
        margin-bottom: 0.25rem;
      }

      p {
        @include body-three;
      }
    }
  }

  // Lists of links with icons
  &.link-list {
    margin: 2rem 0 0;
    display: flex;
    justify-content: start;
    flex-wrap: wrap;
    gap: 1rem 3rem;

    li {
      text-indent: 0 !important;
      padding: 0;
      display: flex;
      gap: 0 0.5rem;

      &::before {
        content: none;
      }

      i {
        font-size: 1.25em;

        &:before {
          color: var(--brand_secondary_default);
          transition: color ease-in-out 0.2s;
        }
      }

      a {
        @include heading-xs;
        color: var(--brand_secondary_default);
        margin-bottom: 0;

        &:hover {
          color: var(--brand_secondary_dark);
        }
      }

      &:hover {
        i:before {
          color: var(--brand_secondary_dark);
        }
      }
    }
  }

  // Lists that have progressive content between elements
  &.progressive-list {
    margin: 3rem 0 0;
    display: grid;
    grid-gap: 1.5rem;

    @media screen and (min-width: $width-lg) {
      grid-template-columns: repeat(3, 1fr);
    }

    li {
      position: relative;
      text-indent: 0 !important;
      margin: 1.5rem 0;
      padding: 1.25rem 1.25rem 1.35rem;
      background: var(--neutral_light);
      border-radius: $border-radius;

      // Little top arrow
      &:before {
        content: "";
        position: absolute;
        top: -10px;
        left: 1.25rem;
        border-bottom: 10px solid var(--neutral_light);
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
      }

      span {
        position: absolute;
        top: -1.5rem;
        left: 0;
        width: 100%;
        height: 0.5rem;
        border-radius: 1rem;
      }

      &:nth-of-type(1) span {
        background: var(--brand_primary_light);
      }
      &:nth-of-type(2) span {
        background: var(--brand_primary_default);
        opacity: 0.75;
      }
      &:nth-of-type(3) span {
        background: var(--brand_primary_dark);
      }

      h3 {
        @include heading-sm;
      }
    }
  }

  // Featured artists list
  // See code.org/dance and code.org/music
  &.featured-artists {
    margin: 2rem auto;
    @media (min-width: $width-sm) { gap: 1.5rem; }

    li {
      @media (min-width: $width-sm) { flex: 1; }
      @media (max-width: $width-sm) { width: 29%; }

      img {
        border-radius: 100%;
        width: 100%;
        border: 4px solid var(--brand_secondary_default);
      }

      &:nth-of-type(even) img {
        border-color: var(--brand_primary_default);
      }
    }
  }
}

// Ordered lists
// Step-by-step section
ol.steps-list {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  align-items: baseline;
  margin: unset;
  padding: unset;

  &.four-col {
    li {
      width: 20%;

      @media screen and (max-width: $width-sm) {
        width: 100%;
      }
    }
  }

  &.three-col {
    li {
      width: 28%;

      @media screen and (max-width: $width-sm) {
        width: 100%;
      }
    }
  }

  li {
    padding-left: 0 !important;
    text-indent: 0 !important;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    text-align: center;
    margin: 3rem 0 2.5rem;

    a.link-button,
    button,
    .btn {
      min-width: unset;
    }
  }

  h3 {
    width: 100%;

    & > span {
      background: var(--neutral_white);
      display: block;
      width: 2em;
      height: 2em;
      margin: 0 auto 0.5rem;
      line-height: 1.7;
      border: 2px solid;
      border-radius: 100%;
      position: relative;

      // This creates the light blue border around the
      // charcoal border — would prefer to use the outline
      // attribute but it doesn't work in Safari
      &::before {
        content: "";
        position: absolute;
        top: -8px;
        right: -8px;
        bottom: -8px;
        left: -8px;
        border: 6px solid var(--brand_primary_light);
        border-radius: 100%;
      }
    }
  }

  h4 {
    @include heading-sm;
    width: 100%;
  }

  p {
    @include body-three;
  }
}

// FAQs
details {
  padding: 1.5rem 1rem 1rem;
  border-bottom: 1px solid var(--neutral_dark80);
  transition: background ease-in-out 0.2s;

  &:hover {
    background: var(--neutral_light);
  }

  summary {
    @include heading-xs;
    display: flex;
    justify-content: space-between;
    align-items: end;

    @media screen and (max-width: $width-sm) {
      align-items: baseline;
    }

    &:hover {
      cursor: pointer;
    }
  }

  & summary::marker {
    content: "";
  }

  // Hides the default arrow on Safari
  & summary::-webkit-details-marker {
    display: none;
  }

  // Uses FontAwesome arrow icons to
  // denote open and close states
  & summary::after {
    font: var(--fa-font-solid);
    content: "\f107";
  }

  &[open] summary::after {
    font: var(--fa-font-solid);
    content: "\f106";
  }

  p {
    @include body-three;
  }
}

// Forms
form {
  label {
    display: block;
    text-align: left;
    font-size: 1rem;
    font-weight: var(--semi-bold-font-weight);
  }

  input[type="text"],
  select {
    display: block;
    width: 100%;
    margin: 0.25rem auto 1.5rem;
    padding: 0.5rem;
    border: 1px solid;
    border-radius: $border-radius;
    font-family: var(--main-font);
    font-weight: var(--regular-font-weight);
    font-size: 1rem;
    transition: all ease-in-out 0.2s;

    &:focus {
      @include focus-outline;
    }
  }

  button,
  &[type="submit"] {
    margin-top: 1rem;

    @media screen and (max-width: $width-sm) {
      width: 100%;
    }
  }

  // The following styles are used in the AFE form which is hosted on Pegasus
  // but built in our apps directory
  .form-group {
    margin: 0;

    input[type="text"],
    select {
      margin: 0;
    }
  }

  select#professionalRoleSelect {
    margin: 0;
  }
}

// Action blocks wrappers
.action-block__wrapper {
  margin-top: 2rem;
  display: grid;
  grid-gap: 1.5rem;
  text-align: initial;

  @media screen and (min-width: $width-sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  &.action-block__wrapper--three-col {
    @media screen and (min-width: $width-lg) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  &.action-block__wrapper--four-col {
    @media screen and (min-width: $width-lg) {
      grid-template-columns: repeat(4, 1fr);
    }
  }
}

// Action blocks shared styles
.action-block {
  background: var(--neutral_light);
  border: 1px solid var(--neutral_dark20);
  border-radius: $border-radius;
  text-align: initial;
  display: flex;
  align-content: baseline;

  &.white {
    background: var(--neutral_white);
  }

  .new {
    color: var(--neutral_white);
    background: var(--brand_accent_default);
    font-size: 0.75rem;
    font-family: var(--main-font);
    font-weight: var(--medium-font-weight);
    line-height: 1;
    letter-spacing: 1px;
    text-transform: uppercase;
    margin: -2px -8px 0 0;
    padding: 6px 8px 5px;
    border-radius: 1rem;
  }

  h3 {
    width: 100%;
    @include heading-md;
  }

  p {
    @include body-three;

    &.overline {
      @include overline-two;
      color: var(--brand_primary_default);
      width: 100%;
    }
  }

  figure {
    &.video-responsive {
      margin-bottom: 1rem;
    }
  }

  ul {
    margin: 0 1rem 1rem;
    @include body-three;
  }

  &.secondary {
    h3 {
      @include heading-sm;
    }
  }

  // Hides the unused caption div from the
  // display_video_thumbnail partial
  .video_caption_link {
    display: none;
  }
}

// Single column action blocks
// Note: set the height of the <p> tag inline to maintain
// height consistency between cards in a wrapper
.action-block--one-col {
  flex-wrap: wrap;
  flex-direction: column;
  padding: 1.25rem;

  // Align copy or button(s) to the bottom of a block when
  // blocks are vastly different heights due to content length
  // — use .content-wrapper and .content-footer as seen on
  // views/maker_curriculum_microbit.haml
  &.flex-space-between {
    justify-content: space-between;
  }

  @media screen and (max-width: $width-md) {
    height: 100%;
  }

  img {
    width: 100%;
    margin-bottom: 1rem;
  }

  a.link-button {
    width: 100%;
    text-align: center;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    margin: 1rem 0 0;
  }

  // Removes margins on the display_video_thumbnail view
  // so the play button image is vertically centered
  .videothumbnail {
    margin-bottom: 1rem;

    .thumbnail-wrapper .thumbnail-image {
      margin-bottom: 0;
    }
  }

  // Shows download button image correctly on modal
  .modal-body img {
    width: unset;
    margin-bottom: 0;
  }
}

// Two column action block
.action-block--two-col {
  flex-wrap: wrap;
  overflow: hidden;

  // Use this wrapper on the image or video
  // to add a margin around it
  .media-wrapper {
    & > * {
      margin: 1.25rem;
      width: calc(100% - 1.25rem);

      @media (max-width: $width-md) {
        margin: 0;
        width: 100%;
      }
    }

    &.right > * {
      float: right;

      html[dir="rtl"] & {
        float: left;
      }
    }
  }

  .text-wrapper {
    padding: 1rem 1.5rem;
  }

  h3 {
    @include heading-sm;

    &.heading-md {
      @include heading-md;
      font-weight: unset;
    }
  }

  figure.video-responsive {
    margin: 0 !important;
    max-width: unset;

    & > div {
      border: 0;
    }
  }

  @media screen and (max-width: $width-sm) {
    a.link-button,
    button {
      width: 100%;
      text-align: center;
    }
  }
}

// Editorial cards
// See code.org/teach and code.org/help for examples
.editorial-cards-wrapper {
  display: grid;
  margin-top: 4rem;
  gap: 2.5rem;

  @media screen and (min-width: $width-sm) {
    grid-template-columns: repeat(3, 1fr);
  }

  .flex-container {
    gap: 1.5rem;
    flex-direction: column;
  }

  img {
    width: 12rem;
    height: 12rem;
    border-radius: 50%;
    margin-bottom: 1.5rem;
  }

  p {
    @include body-three;
  }
}

// Editorial cards 2x2 grid
// See code.org/administrators for an example
.editorial-cards-wrapper-2x2 {
  display: grid;
  margin-top: 5rem;
  gap: 4rem;

  @media screen and (min-width: $width-sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  .flex-container {
    gap: 2rem;
  }

  img {
    width: 8rem;
    height: 8rem;
    border-radius: 50%;
  }

  p {
    @include body-three;
  }
}

// Carousels
// Uses the carouFredSel jQuery plugin: https://github.com/nzy/carouFredSel
.carousel-wrapper {
  margin: 2rem 0 0;

  @media screen and (max-width: $width-sm) {
    padding-bottom: 1rem;
  }

  // Carousel with prev and next button navigation
  button.carousel__prev,
  button.carousel__next {
    display: none !important;
  }

  @media screen and (min-width: 1280px) {
    button.carousel__prev {
      position: absolute;
      left: -3.5rem;
    }

    button.carousel__next {
      position: absolute;
      right: -3.5rem;
    }

    button.carousel__prev,
    button.carousel__next {
      display: block !important;
      top: calc(50% - 50px);
      background: none;
      border: none;
      transform: translateY(-50%);
      transition: 0.3s;
      padding: 0;
      width: 1.75rem;

      &:hover {
        background: none;
        opacity: 0.8;
      }

      img {
        width: 100%;
      }
    }
  }

  // Set a min-height inline on the .carousel div
  // inside .carousel-wrapper to account for varying
  // quote lengths and prevent vertical height changes
  .carousel {
    overflow: hidden;

    @media screen and (max-width: $width-md) {
      height: unset !important;
      overflow: unset;
    }
  }

  // The plugin we're using disappears when <html dir="rtl">
  // - updating the inset value fixes it; it does remove the swiping
  // animation between slides on desktop, but keeps the content
  .slides.rtl {
    inset: 0 !important;
  }

  .pagination {
    margin: 1rem 0 0 0;

    @media screen and (max-width: $width-sm) {
      margin-top: 3rem;
    }

    &.left-align {
      text-align: left;

      @media screen and (max-width: $width-md) {
        text-align: center;
      }

      a:first-child {
        margin-left: 0;
      }
    }

    a {
      background: var(--brand_primary_light);

      &.selected {
        background: var(--brand_primary_default);
      }

      &:focus {
        @include focus-outline;

        &:not(:focus-visible) {
          outline: none;
        }
      }
    }
  }
}

// Quotes carousel
// See code.org/educate/professional-learning/middle-high
// and /views/pl_middle_high_carousel.haml for an example
.quotes-wrapper {
  img {
    border-radius: $border-radius;
    width: 100%;

    @media screen and (max-width: $width-md) {
      display: none;
    }

    @media screen and (max-width: $width-sm) {
      display: block;
      margin-bottom: 2rem;
    }
  }

  .carousel-wrapper {
    .with-image {
      display: flex;
      justify-content: space-between;
      align-items: center;

      @media screen and (max-width: $width-sm) {
        justify-content: center;
        flex-wrap: wrap;
      }

      img {
        width: 150px;
        height: 150px;
        margin-right: 3rem;

        @media screen and (max-width: $width-md) {
          display: block;
        }

        @media screen and (max-width: $width-sm) {
          margin-right: 0;
        }
      }
    }

    p {
      font-size: 1.25rem;

      &.quote-text {
        font-size: 1.5rem;
        line-height: 1.3;

        &:before,
        &:after {
          font: var(--fa-font-solid);
          color: var(--brand_primary_default);
        }

        &::before {
          content: "\f10d";
          margin: 0 4px 0 0;
        }

        &::after {
          content: "\f10e";
          margin: 0 0 0 4px;
        }
      }
    }

    span {
      color: var(--brand_accent_default);
      margin: 0 2px;
    }
  }
}

// Photo slideshow carousel
// See code.org/educate/professional-learning/middle-high
// and /views/pl_middle_high_carousel.haml for an example
.photo-carousel-wrapper {
  .with-image {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 5rem;

    @media screen and (max-width: $width-md) {
      gap: 3rem;
    }

    @media screen and (max-width: $width-sm) {
      justify-content: center;
      flex-wrap: wrap;
      gap: 1rem;
    }

    img {
      width: 450px;
      height: auto;
      border-radius: 1rem;

      @media screen and (max-width: $width-md) {
        width: 300px;
      }

      @media screen and (max-width: $width-sm) {
        width: 100%;
      }
    }
  }

  p {
    font-size: 1.25rem;

    @media screen and (max-width: $width-md) {
      margin-bottom: 1rem;
    }
  }

  .pagination {
    margin-top: 2rem;

    @media screen and (max-width: $width-md) {
      margin-top: 3rem;
    }
  }
}

// Individual quote section
// See code.org/teach for an example
section.quote {
  background: url("/images/banners/banner-bg-lines-neutral-dark.png") center
    repeat;
  background-size: 12rem;
  background-color: var(--neutral_dark);

  p {
    font-size: 1.25rem;
    color: var(--neutral_white);
    font-family: var(--barlowSemiCondensed-medium);

    &.quote-text {
      font-size: 1.35rem;

      &.large {
        font-size: 1.5rem;
      }

      &:before,
      &:after {
        font: var(--fa-font-solid);
        color: var(--brand_primary_default);
      }

      &::before {
        content: "\f10d";
        margin: 0 8px 0 0;
      }

      &::after {
        content: "\f10e";
        margin: 0 0 0 8px;
      }
    }
  }

  span {
    color: var(--brand_accent_default);
    margin: 0 2px;
  }
}

// Video series
// - see example: code.org/blockchain
.video-series {
  display: grid;
  grid-gap: 1.5rem;
  margin-top: 2rem;

  @media screen and (min-width: $width-sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  // Overrides styles on the
  // display_video_thumbnail partial
  & > div.col-50 {
    padding: 0 !important;
    margin: 0 !important;
    width: 100%;
  }

  .video_caption_link {
    margin-bottom: 0;
  }
}

// Blog post callout
.blog-post-callout {
  .wrapper {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
  }

  i {
    font-size: 2rem;
  }

  .text-wrapper {
    width: 100%;
  }
}

// Tabs section
// See code.org/teach or code.org/donate for examples
.tabs-section {
  margin-top: 2rem;
  min-height: 408px;

  nav {
    border-bottom: 6px solid var(--brand_primary_default);
    margin: 0 0 3rem;
    align-items: end;
    gap: 0.25rem;

    button.tab {
      color: var(--neutral_dark);
      background: var(--neutral_white);
      border: 1px solid var(--neutral_dark20);
      border-bottom: 0;
      border-radius: 6px 6px 0 0;
      padding: 0.75rem 0.25rem 0.7rem;
      margin: 0;
      width: 11.75rem;
      cursor: pointer;
      white-space: normal;
      height: -webkit-fit-content;
      flex: 1;

      &:hover {
        background-color: var(--neutral_dark10);
      }

      // Selected tab's styles
      &.active,
      &.active:focus:not(:focus-visible) {
        background-color: var(--brand_primary_default);
        color: var(--neutral_white);
        border-color: var(--brand_primary_default);
      }

      &:focus {
        outline: unset;
        border-color: var(--brand_primary_default);
        background-color: var(--neutral_dark10);
        color: var(--neutral_dark);
      }

      // Use this class to hide a tab
      // - see computer-vision.haml and tabs-section.js for an example
      &.hide {
        display: none;
      }
    }
  }

  // Hides tab content
  div.content {
    display: none;

    // Shows tab content
    &.show {
      display: initial;
    }
  }

  .video_caption_link {
    margin-bottom: 0;
  }

  &.show-tablet-and-mobile {
    height: unset !important;
    min-height: unset !important;

    details {
      padding-left: 0;
      padding-right: 0;

      &:hover {
        background: none;
      }

      summary {
        @include heading-md;
      }
    }

    .flex-container {
      align-items: start;
      flex-direction: row-reverse;
      gap: 2rem;

      @media screen and (max-width: $width-sm) {
        flex-wrap: wrap-reverse;
      }
    }

    figure {
      margin-bottom: 1rem;
    }

    h3 {
      display: none;
    }
  }
}

// At a glance sections
// See code.org/educate/csp and code.org/teach for examples
.at-a-glance {
  background: var(--neutral_white);
  border: 1px solid var(--neutral_dark10);
  border-radius: $border-radius;
  text-align: initial;
  padding: 1.5rem;
  display: grid;

  ul {
    margin: 0;

    li {
      all: unset;
      font-size: 1rem;
      margin: 0 0 1.25rem;
      display: flex;
      align-items: baseline;
      gap: 0.75rem;

      &:before {
        display: none;
      }

      &:last-child {
        margin-bottom: 0;
      }

      p {
        @include body-two;
        margin-bottom: 0;
        width: 100%;
      }
    }
  }
}

// Subscribe form
// See code.org/csf for an example
.subscribe-form {
  background: url("/images/banners/banner-bg-lines-neutral-dark.png") center
    repeat;
  background-size: 22%;
  background-color: var(--neutral_dark);
  border-radius: $border-radius;
  padding: 2rem;

  &.no-bg {
    background: none;
  }

  @media screen and (max-width: $width-md) {
    gap: 1rem;
  }

  @media screen and (max-width: $width-sm) {
    padding: 1rem;
    background-size: 50%;
  }

  .text-wrapper {
    width: 48%;

    @media screen and (max-width: $width-md) {
      width: 100%;
    }

    h2,
    p {
      color: var(--neutral_white);
    }
  }

  figure {
    background: var(--neutral_light);
    border-radius: $border-radius;
    padding: 1rem 0 0;

    @media screen and (max-width: $width-sm) {
      iframe {
        height: 500px !important;
      }
    }
  }
}

// Action wrapper
// See code.org/donate for example
.action-wrapper {
  background: url("/images/banners/banner-bg-lines-neutral-light.png") center
    repeat;
  background-size: 10rem;
  background-color: var(--brand_primary_default);
  border-radius: $border-radius;
  padding: 2rem;

  &.solid-bg {
    background: var(--brand_primary_default);
  }
}

// Tables
// See code.org/district/educate/partnerships for an example
table {
  border: 1px solid var(--neutral_dark20);
  width: 100%;

  th {
    background-color: var(--neutral_light);
    border: 1px solid var(--neutral_dark20);
    color: var(--neutral_dark);
    font-size: 0.875rem;
    font-weight: var(--semi-bold-font-weight);
    text-align: initial;
  }

  td {
    border: 1px solid var(--neutral_dark20);
  }
}

// Wrap a <table> in this class if the table needs to be responsive
.table-wrapper {
  overflow-x: auto;

  @media screen and (max-width: 700px) {
    border-left: 1px solid var(--neutral_dark20);
    border-right: 1px solid var(--neutral_dark20);
  }

  @media screen and (max-width: 700px) {
    table {
      margin-left: -1px;
    }
  }
}

// Dashed box
// See code.org/applab for an example
.dashed-box {
  padding: 1.5rem 2rem;
  border: 3px dashed var(--neutral_dark20);
  border-radius: 4px;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: center;
}

// List of logos
// Set the max-width of each image inline to maintain consistent ratios
.logos-wrapper {
  margin-block: 2rem;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 2.5rem;

  img {
    align-self: center;
    width: 100%;
  }
}
