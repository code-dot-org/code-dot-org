---
title: 컴퓨터 과학 기초 전환 가이드
theme: responsive
style_min: true
---

# 교육 과정 A-F

## 목차

* [개요](#overview)
* [새로운 과정 교육](#newcourses)
* [이야기 나누기 (과정 A 및 B)](#circletime)
* [레슨 발판 & 챌린지 퍼즐 (전 연령)](#scaffolding)
* [언플러그드 레슨을 위한 브리징 활동 (전 연령)](#unplugged)
* [과정 말 프로젝트 (과정 E & F)](#endofcourse)
* [결론](#conclusion)
* [자주 묻는 질문](#faq)

<a id="overview"></a>

## 개요
컴퓨터 과학 교육의 경관은 컴퓨터 과학 기초 과정을 최초로 만든 이래로 엄청나게 변하고 있습니다. 원래, 과정 1-4는 학생의 연령에 상관 없이 기초 지식을 얻기 위한 시작점으로서 고안되었습니다.  이제는 훨씬 더 많은 학군과 시, 주에서 유치원에서 시작하는 컴퓨터 과학 과정을 실시하고 있으며, 교사는 학생들이 중학교/고등학교 저학년이 될 때까지 볼 더 많은 컨텐츠를 요구하고 있습니다.

컴퓨터 과학 기초 과정 A-F는 그 이슈에 대한 우리의 답입니다.  학년 별 커리큘럼 제작은 우리에게 우리의 자료 제시 방식을 한 발 뒤로 물러나 다시 생각하게 만들었습니다.  또한 이 미션에서 우리를 지지해 주고 있는 헌신적인 교사 커뮤니티에게서 받은 피드백을 성실하게 통합할 기회 역시 허용했습니다. 전국의 최고 초등학교 CS 교육 전문가의 도움을 받아 설계된 과정 A-F는 추가적인 전문 개발 없이도 실행할 정도로 충분히 친숙하게 느껴져야 하지만 과거 우리의 레슨을 받았던 학생들에게 제공해도 될 정도로 충분히 신선해야 합니다.

* 과정 A: 유치원
* 과정 B: 1학년
* 과정 C: 2학년
* 과정 D: 3학년
* 과정 E: 4학년
* 과정 F: 5학년
* 프리 리더 익스프레스 과정: 유치원 -1학년
* 익스프레스 과정: 2 -5학년

CS 기초에서 가장 큰 업데이트는 콘텐츠를 네 개 과정 (과정 1-4)에서 K-5 학년 수준에 맞춘 여섯 개 과정 (과정 A-F) 으로 이동한 것입니다.  이렇게 하는 과정에서, 레슨을 읽기와 수학, 전체적 인지발달을 위한 적절한 수준에 맞게 더 맞춤형으로 조정했습니다.  두 개의 다른 "익스프레스" 과정이 하나는 프리 리더와 하나는 전체 다른 학년을 위해 추가되었습니다.  이것은 이전의 "속성"버전과 유사합니다.

<a id="newcourses"></a>

## 새로운 과정 교육
앞서 언급했듯이, 과정은 친숙하지만 다르게 느껴져야 합니다.  Code.org 전문 개발 워크숍에 다녀왔으면, 새 과정을 가르칠 준비가 된 것입니다. 소수의 변경된 부분이 있긴 하지만 전체적인 플랫폼과 커리큘럼, 교육 철학은 변함이 없습니다. 아직 다녀오지 않았으면, Code.org는 1일 워크숍을 무료로 제공하여 커리큘러에 관한 이해를 돕고 Code.org 플랫폼을 둘러 보게 하며 언플러그드 레슨을 가르치는 법을 소개해 드릴 것입니다.

과정의 주요 업데이트:

* 더 어린 학습자를 위한 이야기 나누기
* 개념을 뒷받침하고 연습/응용하기 위한 새로운 접근방식
* 언플러그드 레슨에서 플러그드 레슨으로 전환을 향상시키기 위한 브리징 활동
* 고학년 학생을 위한 과정 말 프로젝트

이 가이드의 나머지는 각 아이디어를 더 자세히 설명하며 교실에서 변경사항을 실행하기 위한 팁과 비법을 소개합니다.

<a id="circletime"></a>

## 이야기 나누기 (과정 A 및 B)
일부 개념은 특히 어린 학생에게는 활동과 퍼즐 만으로는 가르치기 힘듭니다.  그러한 이유로 유치원과 1학년 커리큘럼에 이야기 나누기가 들어 갑니다. 이야기는 교사가 전체 학급에게 읽어주고 중간 중간 잠시 멈춰 디버깅과 끈기, 좌절 등과 같은 중요한 아이디어를 토론합니다.  우리의 희망은 학생들에게 스토리 캐릭터를 통해 어려운 개념을 경험하게 하여 미래 레슨에서 나올 때 이 개념을 인식하게 하는 것입니다.

이야기 나누기의 원래 의도했던 사용법은 다음과 같습니다:

### 적절한 스토리를 학급에게 읽어 주세요.
  - 읽는 동안 유용한 순간에 질문과 코멘트로 학생들이 잘 이해하고 있는지 확인해야 합니다.
  - 그 후 스토리에 관해 토론합니다. 학생들이 어떤 내용을 들었습니까? 잘 이해하지 못하는 부분이 있습니까?
  - 학생들에게 캐릭터를 식별하라고 해보세요.  그들의 생활 속에서 스토리에 나오는 캐릭터 중 한 명을 떠올리게 하는 인물이 있습니까?

### 다음 활동을 시작하기 전 학생들에게 스토리를 다시 떠올리게 하세요.
  - 우리가 어떤 주요 아이디어를 토론했는지 기억나요?
  - 오늘 그 아이디어를 보게 되면 그걸 어떻게 알 수 있지요?
  - 캐릭터가 그 아이디어를 어떻게 처리했지요? 여러분이라면 어떻게 했을까요?

### 스토리와 학생의 상황이 활동 중 서로 교차할 때 그 두 가지 간의 유사성을 지적합니다.
  - 그들이 현재 있는 위치가 책에서 나온 상황과 어떻게 닮았는지 학생에게 설명합니다.
  - 학생에게 캐릭터에 대해 생각해 보고 그들이라면 어떻게 할지 말해 보라고 합니다.  그것이 학생이 다음 단계를 알아 내는데 도움이 됩니까?

전체 학급을 한꺼번에 모두 모을 수 없을 때, Code.org는 적절한 레슨을 시작할 때 일부 애니메이션이 포함된 스토리를 보여주는 동영상 옵션을 제공합니다. 동영상은 스토리와 상당히 동일한 경험은 제공할 수 없지만, 학생들에게 나머지 과정을 계속하기 전 개념과 캐릭터에 노출되게 할 것입니다.

<a id="scaffolding"></a>

## 레슨 발판 & 챌린지 퍼즐 (전 연령)
과정 A-F는 전반적으로 이전 과정에 비해 뒷받침하는 성격이 적습니다.  즉, 우리는 학생들에게 그들이 특별히 디버깅을 배우고 있는 중이 아닌 한 처음부터 가능한 자주 코드를 만들게 하려고 한다는 의미입니다.  이 설계의 일부로서 대부분의 온라인 레슨은 레슨을 시작할 때는 간단한 퍼즐을 제시하고 그 다음 학생이 그 기저의 아이디어를 이해할 기회를 갖게 되는 지점까지 새로운 개념으로 천천히 반복 연습하며 앞으로 나아가는 경향을 따릅니다.  그 다음, 학생들에게 새롭고 복잡한 방식으로 개념을 생각하게 만드는 도전적인 퍼즐을 제시합니다.

챌린지 퍼즐은 과정 A-F에서 새롭게 나왔습니다.  챌린지 퍼즐은 학생들을 끈기와 독립적 사고를 연습할 수 있는 높은 기대치에 노출시키려는 의도를 갖습니다.  챌린지 퍼즐은 고의로 어렵게 만들어 졌으며, 개념을 진정으로 이해한 학생들만이 적절한 시간 내 통과하도록 설계되었습니다.  즉, 많은 학생들이 처음에는 도전에 성공하지 못할 것이라는 의미입니다. 이것은 학생과 교사 모두에게서 특정 태도를 요구합니다.

1. 학생들은 이러한 도전에 총력을 기울여야 하고 그 다음, 그것들을 옆에 제쳐두고 계속 해야 합니다.  그 연습으로 두 가지 중요한 일이 일어납니다:
2. 학생들은 학습할 개념을 언제 그리고 왜 사용해야 하는지 더 잘 이해하게 될 것입니다. 도전 후 그 다음 퍼즐은 심지어 그것들이 그 자체로 어려운 퍼즐이더라도 더 쉽게 느껴집니다.

학생들은 언제든 레슨을 다시 살펴 보고 완성하지 않은 퍼즐을 재시도할 수 있음을 명심하세요.  종종 어려운 문제를 다시 시도하기 전에 밤에 숙면하는 것이 상당히 도움이 될 수 있습니다.

일단 학생들이 도전에 성공하여 통과하면, 그 다음에서 이 단계의 초반에서 경험했을 수 있는 것과 유사한 몇 가지 연습 문제가 기다리고 있다는 걸 발견할 것입니다. 그러한 퍼즐은 의도적으로 배치하여 학생들이 공부할 주제를 얼마나 명확히 알고 있는지 테스트합니다.  그것들은 앞서 경험했던 퍼즐에 비해 너무 쉬워 보일 수 있지만 해당 단계에서 기대되는 정확한 능력 수준을 입증하도록 만들어 졌습니다.

일부의 경우, 우리는 레슨을 프리 플레이 스타일 레벨로 마칩니다.  이러한 레벨에는 "틀린" 답이 없거나 또는 핵심 문제를 푸는 여러 다른 방식을 허용할 수 있습니다.  학생들에게 최선을 다하고 비록 그렇게 해도 되지만 무작정 "계속"을 클릭하지 말라고 권해 주세요.

이 영역을 위한 마지막 비고:

* 학생들에게 끈기를 갖고 어렵게 느껴지는 문제에서 디버깅 스킬을 사용하라고 상기시켜 줍니다.
* 동영상이 종종 도움이 될 수 있습니다.  학생들이 어떻게 해야 하는지 모를 때, 동영상을 두 번, 세 번 심지어 네 번까지 다시 보게 합니다.
* 학생들에게 지침을 읽도록 요구합니다.  그들이 힘든 시간을 보내고 있으면, 그들에게 지침을 학급원에게 소리 내어 크게 읽어 주게 합니다.
* 힌트를 사용해도 괜찮습니다!  학생들은 힌트를 필요한 만큼 많이 사용해야 하지만 새로 제시될 때마다 최소 한 번 퍼즐을 다시 푸는 시도를 해야 합니다.

<a id="unplugged"></a>

## 언플러그드 레슨을 위한 브리징 활동 (전 연령)
학생들은 그들이 이미 그들의 일상에서 중요한 CS 개념을 사용하고 있음을 지적할 때 언플러그드 활동을 만납니다.  일단 학생들이 루프와 조건문과 같은 기본적인 아이디어를 식별할 수 있으면, 최초의 온라인 프로그래밍을 위해 그러한 아이디어를 사용하려 할 때 일어날 수 있는 심적 장애를 극복합니다.

언플러그드 경험은 매우 중요하여 우리는 학생들을 한 걸음 더 나아가게 하여 언플러그드 레슨을 그것에 해당하는 온라인 레슨으로 이어주는 활동 안에서 단단해 지는 방식을 선택했습니다.  과정 A-F에서, 레슨 플랜은 오프라인에서 연습 하는 방법과 레슨을 그 다음 온라인 퍼즐로 번역하는 방법의 예를 제공합니다.  우리는 이것을 "브리징 활동"이라고 부릅니다.

대부분, 브리징 활동에서는 언플러그드 연습의 주제를 가져와 그것을 종이 블로클리 블록으로 실행하거나 또는 온라인 퍼즐을 가져와 언플러그드 연습에서 가져온 언어를 사용해 풉니다.  일부의 경우, 다른 관계가 소개되지만 모든 예는 오프라인 경험이 너무 추상적이거나 또는 무관하게 느껴지지 않게 하려는 의도를 갖고 있습니다.

<a id="endofcourse"></a>

## 과정 말 프로젝트 (과정 E & F)
고학년 학생들을 위해, 우리는 과정 E & F에서 과정 말 프로젝트를 도입했습니다. Code.org는 한참 동안 "프로젝트" 구축 능력을 제공해 오고 있지만 우리는 학생들이 공식적인 맥락에서 프로젝트를 계획하고 실행할 수 있게 하기 위해 필요한 관점을 훨씬 더 많이 추가해야 한다고 느꼈습니다.

과정 말 프로젝트는 비교적 직설적입니다.  4- 5주 기간 동안, 학생들은 프로젝트 아이디어를 검토하고 응용 방법을 계획하며 프로그램을 코딩하고 피드백에 기초하여 수정하며 (5학년), 완료한 작품을 발표할 것입니다.  각 단계 별 활동 안내는 유용한 유인물은 물론 큰 그림을 강조하는 교사의 레슨 플랜에 기술되어 있습니다.

**검토:** 학생들은 이 시점까지 배웠던 기량으로 할 수 있는 놀라운 일을 보여주기 위해 만들어진 동경의 대상이 되는 프로젝트 몇 가지를 보게 될 것입니다.  이러한 프로젝트는 플레이 랩 또는 아티스트에서 만들어 졌지만 학생들은 교사가 적절하다고 보는 팅커 또는 스크래치, 심지어 텍스트 기반 언어로 된 프로젝트를 자유롭게 검토할 수 있습니다.

**계획:** 여기서 학생들은 편안히 앉아 무엇이 정말 가능한지 생각해 보는 시간을 갖습니다.  그들은 그들이 봤던 게임에 대해 생각하고 그것을 편집할 때 겪었던 제약에 대해 생각할 필요가 있을 것입니다.  그후, 뭔가 독창적인 것을 만들기 위한 계획을 스케치할 것입니다.  학생들은 그들의 비전을 실현할 때 시간과 자원의 제약을 경험하게 될 것이므로 현실적이 되어야 한다는 점을 상기시켜줄 필요가 있습니다.  자료는 여기서 아티스트 또는 플래이 랩 사용을 가정하지만 프로젝트는 각 특정 교실에 맞는 플랫폼 작업으로 옮겨질 수 있습니다.

**구축**종이 위에 배치한 계획을 실행하기에 하루는 많은 시간은 아닙니다.  학생들은 한 장벽 후 또 다른 장벽을 맞이하며 일이 제대로 되도록 이리 저리 노력할 때 힘든 선택을 해야 하는 상황을 맞이할 것입니다.  그들은 버그와 프로그램 제약으로 인해 제한된 시간 내 편안하게 달성할 수 있는 일에 대한 그들의 관점이 바뀜에 따라 그들은 편집 및 상황에 맞게 수정하는 법을 배울 것입니다.

**수정:** 고학년 학생을 위해, 학급원의 피드백에 기초하여 자신의 프로그램을 수정하는 하루는 최종 결과물을 개선하고 또한 그들이 달성한 일로 다른 이에게 영감을 주는 데 도움이 될 것입니다.  학생들은 건설적으로 비판하는 방법을 물론 그룹 브레인스토밍, 끈기를 갖는 법을 연습할 것입니다.

**발표:** 제작하는데 거의 한 달이며, 이것은 학생들이 서서 자신들이 얼마나 멀리 왔는지 자랑스럽게 여길 기회입니다.  레슨 플랜에서는 구두 프레젠테이션을 가정하지만 교사가 그 대신 서면 또는 멀티미디어 프레젠테이션을 제안할 옵션을 가집니다.

학생들이 얼마나 철저하게 그들 스스로 프로젝트에 충실하는지 상관 없이, 그들은 컴퓨터 과학에서 창의력과 문제해결 프로세스에 관한 유용한 무언가를 확실히 배울 것입니다.

<a id="conclusion"></a>

## 결론
알다시피, 컴퓨터 과학 기초 내 과정 A-F에는 다수의 CS 기초 교사 & 진행자 커뮤니티에서 받은 피드백에 의해 영향을 받은 기존 향상내용이 수록되어 있습니다.

우리는 이 개론이 통찰력이 있길 희망합니다.  이 변경내용에 관한 질문 또는 코멘트가 있으시면, http://forum.code.org/c/csf에 방문하여 포럼에 게시해 주십시오.  가능한 신속하게 질문에 대한 답변을 드리도록 하겠습니다.  그때까지, 과정 A-F에 관한 몇 가지 자주 묻는 질문이 여기에 있습니다.

<a id="faq"></a>

## 자주 묻는 질문

| 질문                                                                          | 답변                                                                                                                                                                                                                                                     |
| --------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| **새로운 과정을 선보였는데요 그러면 과정 1-4는 없어지는 건가요?**                                    | 아닙니다. 우리의 오리지널 20-시간 과정이 여전히 사용 가능하고 웹사이트에서 사용 중인 것과 마찬가지로, 우리는 과정 1-4를 이것이 그들 학생/자녀가 필요로 하는 경험을 더 잘 나타낸다고 느끼는 이들을 위해 유지할 계획입니다.                                                                                                                       |
| **과정 A-F는 언제부터 사용할 수 있습니까?**                                                | 과정 A-F는 지금 사용할 수 있습니다!                                                                                                                                                                                                                                 |
| **과정 A-F에서 좋아하는 레슨/퍼즐 일부가 빠졌습니다!**                                          | 걱정하지 말아요! 그것들은 과정 1-4 또는 가속 20-시간 과정 내 여러분이 마지막으로 이용했던 곳에 여전히 존재합니다.                                                                                                                                                                                   |
| **퍼즐이 훨씬 더 어려워 보여요.  어린 자녀가 하기에 너무 어려울 것 같아 걱정입니다.**                        | 학생들이 생각하고 문제를 해결하며 끈기를 연습했으면 하는 바람이 이러한 새로운 과정의 중추를 이룹니다.  이것들 중 어느 것도 너무 쉬운 퍼즐에서는 요구되지 않습니다.  이러한 이유로, 우리는 퍼즐을 더 어렵게 만들어야 합니다.  학급이 이러한 기량을 키울 수 있도록 이끄는 데 도움이 필요하면 교사 가이드를 참조하세요.  항상 그렇듯, 온라인 퍼즐로 뛰어 들기 전 언플러그드 레슨의 중요성을 과소평가하지 마십시오.               |
| **일부 퍼즐은 일정 수의 특정 블럭 만을 허용합니다.  학생들이 루프를 알기 전 뭔가를 길게 코딩하길 원하면 어떻게 해야 합니까?** | 상당 수 퍼즐이 특정 블록을 제한합니다. 이것은 우리의 새로운 지지 방식 중 하나입니다.  이것은 작업공간에 도움을 주는 조각을 지나치게 많이 올려 놓지 않고 대신 방향을 제시하는 방식입니다.  간소화 하기 전, 퍼즐을 긴 방식으로 코딩하는 걸 좋아하는 학생들에게는 (그리고 사실, 모든 학생을 위해, 항상) 어떤 방식이든 가장 자연스럽게 나오는 방식으로 알고리즘을 알아내도록, 키보드 옆에 저널 또는 스크래치 종이를 두는 것이 유용합니다. |

