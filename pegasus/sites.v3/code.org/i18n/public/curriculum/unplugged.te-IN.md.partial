---
title: అన్‌ప్లగ్డ్ CS ప్రాధమిక అంశాలు
video_player: true
theme: responsive
---

# అన్‌ప్లగ్డ్ CS ప్రాధమిక అంశాలు

మీరు మీ తరగతి గదిలో ఉపయోగించడానికి మేము మా అన్నీ అన్‌ప్లగ్డ్ పాఠాల లిస్టు మీ కోసం తయారు చేశాము. మీ తరగతి గదిలో కంప్యూటర్‌లు ఉన్నా, లేకపోయినా ఇప్పుడు మీరు కంప్యూటర్ సైన్స్ ప్రాధమిక అంశాలను బోధించవచ్చు!
<br>
<div class="col-50">
విద్యార్థులు కంప్యూటర్ మీద పని చేయని పాఠాలను మేము "అన్‌ప్లగ్డ్" అని పేర్కొంటాము. విద్యార్థులు తరచూ పెన్సిలు మరియు పేపరు లేదా భౌతిక మానిప్యులేటివ్‌లతో పని చేస్తారు.  విద్యార్థులు సంక్లిష్టమైన కాన్సెప్ట్‌లను వారి జీవితాలతో సంబంధం ఉన్న మార్గాలలో అర్థం చేసుకోవడంలో సహాయపడే ఉద్దేశపూర్వకంగా చేర్చిన కైనెస్తెటిక్ అవకాశాలు ఇందులో ఉన్నాయి. 
<br><br>అన్‌ప్లగ్డ్ పాఠాలు ప్రత్యేకంగా ఒక సహకారంతో కూడిన తరగతి గది వాతావరణం నిర్మించడానికి మరియు నిర్వహించడానికి ఉపయోగకరమైనవి మరియు అవి ఎక్కువ అమూర్తంగా ఉన్న కాన్సెప్ట్‌లను పరిచయం చేసేటప్పుడు మీరు పరిశీలించగల ఉపయోగకరమైన గీటురాయి అనుభవాలు. ఈ యాక్టివిటీలలో ప్రతి దానిని ఒంటరిగాగానీ లేదా సంబంధిత కాన్సెప్ట్‌లపై ఇతర కంప్యూటర్ సైన్స్ పాఠాలతోగానీ ఉపయోగించవచ్చు.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Ages 4+, ఇంగ్లీషు మాత్రమే
</div>

<div style="clear: both;"></div>

***
## CS ప్రాధమిక అంశాలలో అన్‌ప్లగ్డ్ పాఠాలు 2021-22
కింది పాఠాలు ఇందులో పొందవచ్చు <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">CS ప్రాధమిక అంశాలు 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. విద్యార్థులు సూచనలను ఇవ్వబడిన చిహ్నాలుగా అనువదించడానికి పనిచేసేటప్పుడు సూచనలను ఖచ్చితంగా రాయటం అభ్యాసం చేస్తారు. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. కొన్నిసార్లు మీ ప్రోగ్రామ్ యూజర్ సరిగ్గా దాన్ని కోరినప్పుడు అది స్పందించేలా ఉండాలని మీరు కోరుకుంటారు. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. యూజర్లు వారి అవసరాలను తీర్చే "సరియైన యాప్" కనుగొనేలా సహాయపడటానికి, మొదట విద్యార్థులు అనేక కల్పిత స్మార్ట్‌ఫోన్ యూజర్లతో సహానుభూతి అనుభవిస్తారు. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. రోబోగా పాల్గొనడానికి విద్యార్థులు వంతులు వేసుకుంటారు, వారి సమవయస్కులు నిర్వచించిన అల్గోరిధమ్‌కు మాత్రమే ప్రతిస్పందిస్తూ. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. కొన్నిసార్లు మీ ప్రోగ్రామ్ యూజర్ సరిగ్గా దాన్ని కోరినప్పుడు అది స్పందించేలా ఉండాలని మీరు కోరుకుంటారు. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. ఐచ్ఛికం – ప్రతి విద్యార్థికి 18 నలుపు/18 తెలుపు పూసలు, 1 పైప్ క్లీనర్</i><br><small>కంప్యూటర్ల ప్రపంచంలో బైనరీ అనేది అత్యంత ముఖ్యమైనది. ఈనాడు ఎక్కువ కంప్యూటర్లు అన్ని రకాల సమాచారాన్ని బైనరీ రూపంలో నిల్వ చేస్తాయి. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. ఇప్పటికే ఉన్న చిత్రాన్ని పునరుత్పత్తి చేసే ప్రయత్నంగా గ్రాఫ్ పేపరు మీద చదరాలకు రంగువేయడానికి ఒకరికి ఒకరు సూచన ఇవ్వడానికి విద్యార్థులు చిహ్నాలను ఉపయోగించడంతో తరగతి ప్రారంభం అవుతుంది. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. ఒక ప్రోగ్రామ్ రాసేటప్పుడు మనకు ఎల్లప్పుడు మనకు అవసరమైన సమాచారమంతా ఉండదు. మీ కోడ్ రన్ అయినప్పడు ఏ పరిస్థితి వాస్తవమైందో మీకు తెలియక పోయినప్పటికీ, కొన్నిసార్లు మీరు ఒక పరిస్థితి కంటే మరొక దానిలో ఏదైనా భిన్నమైనది చేయాలని మీకు అనుకుంటారు. ఇక్కడే కండిషనల్స్ ప్రవేశిస్తాయి. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.+</td><td>Conditionals</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

    </tr>
         <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.7 - Digital Sharing</a><br><i>*Supplies: Smartphone or tablet</i><br><small>Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.</td><td>Digital Citizenship</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.11 - Songwriting</a><br><small>One of the most magnificent structures in the computer science world is the function. ఫంక్షన్లు (కొన్నిసార్లు ప్రొసీజర్స్ అని పిలువబడతాయి) మినీ ప్రోగ్రామ్‌లు, వీటిని మీరు మీ పెద్ద ప్రోగ్రామ్ లోపల మళ్లీ మళ్లీ ఉపయోగించవచ్చు. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.</td><td>Functions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.17 - Designing for Accessibility</a><br><small>In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps.</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width="90%"></td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Course F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Blank Space Stories</a><br><i>*Supplies: 6 envelopes(also suitable:paper or index cards,folded in half)</i><br><small>Students will use fill-in-the-blank stories (similar to Mad Libs®) as a context for understanding how computers take and store input from a user, then use it later as a program runs.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic.</td><td>For Loops</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.19 - The Internet</a><br><small>Even though many people use the internet daily, not very many know how it works. 
ఈ పాఠంలో, విద్యార్థులు ఇంటర్నెట్ గుండా ప్రవహిస్తున్నట్లు నటిస్తారు, అదే సమయంలో కనెక్షన్లు, URLలుs, IP అడ్రసులు మరియు DNS గురించి నేర్చుకుంటూ.</td><td>Data</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## అదనపు అన్‌ప్లగ్డ్ పాఠాలు

కింది పాఠాలు కాన్సెప్ట్‌ల ప్రకారం వ్యవస్థీకరించబడ్డాయి మరియు వీటిని మా ముందటి CS ప్రాధమిక అంశాల కోర్సులలో చూడవచ్చు. ఈ పాఠాలను ఉపయోగించాలాని మీరు యోచిస్తున్నప్పుడు మీరు పరిశీలించాలనుకునే అదనపు వనరులలో ఇవి ఉన్నాయి:
* [2019 కోర్సు A-F పాఠ్యప్రణాళిక గైడు](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 కోర్సు A-F సప్లై లిస్ట్](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 కోర్సు Amazon లిస్ట్‌లు](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 కోర్సు A-F పాఠ్యప్రణాళిక గైడు](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 కోర్సు A-F పాఠ్యప్రణాళిక గైడు (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [కోర్సు 1-4 పాఠ్యప్రణాళిక గైడు](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF ఫ్లాష్‌కార్డ్‌లు](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>కాన్సెప్ట్</th>    <th width=65%><center><big>పాఠ్య ప్రణాళిక <br><small> పాఠ్య ప్రణాళికలో అదనపు వనరులు (స్లైడ్స్, వీడియోలు, జవాబు కీస్ మొదలైనవి) ఉంటాయి.
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. చాలా మంది బైనరీ అంటే సున్నాలు మరియు ఒకట్లు అని అనుకున్నప్పటికీ, సమాచారం విభిన్న బైనరీ వికల్పాలతో ప్రాతినిధ్యం వహించవచ్చనే ఆలోచనను విద్యార్థులకు పరిచయం చేయడం జరుగుతుంది. ఈ పాఠం ఆ కాన్సెప్ట్‌ను మరో అడుగు ముందుకు తీసుకెళ్తుంది ఎందుకంటే ఇది మరింత సంక్లిష్ట సమాచారాన్ని (ఇమేజ్‌లు మరియు రంగులు లాంటివి) బైనరీలో కంప్యూటర్ ఎలా నిల్వ చేస్తుందో కూడా వివరిస్తుంది.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>లూప్స్</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">మై లూపీ రోబోటిక్ ఫ్రెండ్స్</a><br><small>ఇక్కడ, "మై రోబోటిక్ ఫ్రెండ్స్" నుండి భాషను ఉపయోగించి వారి ఫ్రెండ్స్‌ను ప్రోగ్రామింగ్ చేయడం ద్వారా లూప్స్ యొక్క సరళత మరియు ఉపయోగం గురించి విద్యార్థులు నేర్చుకుంటారు లూప్స్ పరిచయం చేసిన తర్వాత, తాము మరింత పెద్ద స్ట్రక్ఛర్‌లు రూపొందించగలమని విద్యార్థులు తెలుసుకుంటారు.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>ఫంక్షన్లు</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">ఫంక్షనల్ స్ట్రక్ఛర్‌లు</a><br><small>ఈ పాఠంలో, స్ట్రింగ్, బీడ్స్ మరియు ఒక స్పెషల్ ఛార్మ్ నుండి ఒక సన్‌క్యాచర్‌ను విద్యార్థులు తయారు చేస్తారు. విద్యార్థులు రిపీట్ అయ్యే స్టెప్స్‌ను అనుసరిస్తారు, ఆతర్వాత అనేకసార్లు రిపీట్ అయిన కొన్ని సెట్‌ల "నైపుణ్యాలు" గుర్తించమని కోరబడతారు. ఈ నైపుణ్యాలు నిర్వచించబడిన తర్వాత, వాటిని ఒక ప్రధాన ప్రోగ్రామ్ నుండి కాల్ చేయడం జరుగుతుంది మరియు సృష్టించడం యొక్క మొత్తం అందమైన ప్రక్రియ ఒక పేపర్ షీట్‌పై రికార్డు చేయబడుతుంది. అంతిమ ప్రోగ్రామ్, దాని స్ట్రింగ్, బీడ్స్ మరియు ఛార్మ్‌స్ రకం ఏమైనప్పటికీ, మొత్తం తరగతి వైపు మళ్లించబడుతుంది. దీని ప్రభావవంతంగా అనుమతించడానికి, విద్యార్థులు తమ నిర్దిష్ట సామగ్రి వివరాలను "ఆబ్‌స్ట్రాక్ట్ ఔట్" చేయవలసి ఉంటుంది మరియు ఒక ఒక్కోదాని సరఫరాల కోసం స్థూల నిబంధనలను సృష్టించవలసి ఉంటుంది. ఈ జనరిక్ ప్లేస్‌హోల్డర్లను ఉపయోగించడం అనేది వేరియబుల్స్‌ను అద్భుతంగా పరిచయం చేయడం.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">పాఠం వీడియో</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">పాఠాన్ని యాక్షన్‌లో చూడండి</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">యాక్టివిటీ జవాబు కీ<a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">మదింపు జవాబు కీ</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">పారామీటర్లతో సాంగ్‌రైటింగ్</a><br><small>కంప్యూటర్ ప్రపంచంలో అత్యంత గొప్ప స్ట్రక్ఛర్లలో ఒకటి ఫక్షన్. ఫంక్షన్లు (కొన్నిసార్లు ప్రొసీజర్స్ అని పిలువబడతాయి) మినీ ప్రోగ్రామ్‌లు, వీటిని మీరు మీ పెద్ద ప్రోగ్రామ్ లోపల మళ్లీ మళ్లీ ఉపయోగించవచ్చు. ఈ పాఠం, కోడ్ యొక్క భాగాలను ఫంక్షన్లతో మిశ్రమం చేయడం అనేది ఎందుకు అంత ఉపయోగకరమైన ఆచరణ మరియు కోడ్ యొక్క భాగాలు స్పల్పంగా భిన్నంగా ఉన్నప్పటికీ విద్యార్థులు ఆ స్ట్రక్ఛర్లను ఎలా ఉపయోగించవచ్చు అనేవి విద్యార్థులు అవలీలగా తెలుసుకోవడానికి సహాయపడుతుంది.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>అల్గోరిథమ్స్</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">డైస్ రేస్</a><br><small>ఈ పాఠంలో, డైస్ రేస్ గేమ్ ఆడటం ద్వారా విద్యార్థులు అల్గోరిథమ్స్ యొక్ కాన్సెప్ట్‌ను వెనక్కు నిజ-జీవితంతో రిలేట్ చేస్తారు. ఇక్కడ లక్ష్యం నిజ-జీవిత పరిస్థితులను ఆన్‌‌లైన్ దృశ్యాలుగా మరియు అటు ఇటు అనువదించడానికి నైపుణ్యాలను అభివృద్ధి చేసుకోవటం ప్రారంభించడం.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">మై రోబోటిక్ ఫ్రెండ్స్</a><br><small>ముందుగా నిర్వచించిన సింబల్ కీ ఉపయోగించి, ఏవైనా మౌఖిక కమాండ్స్ లేకుండా, నిర్దిష్ట టాస్క్‌‌లు ఎలా పూర్తిచేయడానికి ఒకరినొకరు ఎలా గైడ్ చేయాలో మీ విద్యార్థులు తెలుసుకుంటారు. ఈ భాగం విద్యార్థులకు చిహ్నాలు మరియు చర్యల మధ్య సంబంధం, అల్గోరిథమ్ మరియు ప్రోగ్రామ్ మధ్య తేడా మరియు డీబగ్గింగ్ యొక్క విలువైన నైపుణ్యం గురించి నేర్పిస్తుంది.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">నిజ-జీవిఅత అల్గోరిథమ్స్: పేపర్ ప్లాన్స్</a><br><small>ఈ పాఠంలో, అల్గోరిథం యొక్క కాన్సెప్ట్‌ను తిరిగి వెనక్కు రోజువారీ యాక్టివిటీలతో విద్యార్థులు రిలేట్ చేస్తారు. అల్గోరిథమ్స్ చర్చించిన తర్వాత, అల్గోరిథమ్ ఉపయోగించి విద్యార్థులు పేపర్ విమానాలు తయారు చేస్తారు. ఇక్కడ లక్ష్యం నిజ-జీవిత పరిస్థితులను ఆన్‌‌లైన్ దృశ్యాలుగా మరియు అటు ఇటు అనువదించడానికి నైపుణ్యాలను అభివృద్ధి చేసుకోవటం ప్రారంభించడం.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">నిజ జీవిత అల్గోరిథమ్స్: ఒక విత్తనం నాటండి</a><br><small>ఈ పాఠంలో, విద్యార్థులు ఒక నిజమైన విత్తనాన్ని నాటడం ద్వార అల్గోరిథమ్స్ యొక్క కాన్సెప్ట్‌ను నిజ-జీవిత యాక్టివిటీలతో రిలేట్ చేస్తారు. ఇక్కడ లక్ష్యం నిజ-జీవిత పరిస్థితులను ఆన్‌‌లైన్ దృశ్యాలుగా మరియు అటు ఇటు అనువదించడానికి నైపుణ్యాలను అభివృద్ధి చేసుకోవటం ప్రారంభించడం.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">టాన్‌గ్రామ్స్</a><br><small>ఈ పాఠం అల్గోరిథమ్స్ గురించి ఒక ముఖ్యమైనది చూపిస్తుంది. మీరు ఒక అల్గోరిథమ్‌ను సింపుల్‌గా ఉంచినంత కాలం, దానిని ఉపయోగించడానికి చాలా మార్గాలు ఉన్నాయి. అయితే, ప్రతి ఒక్కరూ అదే ఫలితం ఉత్పన్నం చేసేలా మీరు సునిశ్చితం చేసుకోవాలనుకుంటే, అప్పుడు మీ అల్గోరిథమ్‌కు ఎక్కువ వివరాలు అవసరం. టాన్‌గ్రామ్స్‌తో ఆడేటప్పడు విద్యార్థులు సవిస్తార మరియు సాధారణ అల్గోరిథమ్ మధ్య తేడాను నేర్చుకుంటారు.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">కంప్యూటేషనల్ థింకింగ్</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">కంప్యూటేషనల్ థింకింగ్</a><br><small>ఈ యాక్టివిటీ కోసం, సూచనలు ఏవీ ఇవ్వబడలేదు. బదులుగా, గేమ్ ఎలా ఆడాలో కనుగొనడానికి కల్పిత ప్లేయర్లు ఏమి చేశారో ఆ ఉదాహరణలను విద్యార్థులు ఉపయోగిస్తారు. 

ఈ పాఠం, విద్యార్థులకు కంప్యూటేషనల్ థింకింగ్ యొక్క నాలుగు ఆర్ట్స్‌ను (డీకంపోజిజషన్, పాట్రన్ మ్యాచింగ్, అబ్‌స్ట్రాక్షన్ మరియు అల్గోరిథమ్స్) ఒకే అంటుకుని ఉండే యాక్టివిటీలో అభ్యసించే అవకాశం ఇస్తుంది.</td> <td><a href="https://youtu.be/TlAaklrolA0">Lesson Video</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">యాక్షన్‌లో పాఠాన్ని చూడండి</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">యాక్టివిటీ జవాబు కీ </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">మాన్స్టర్స్‌తో కంప్యూటేషనల్ థింకింగ్</a><br><small>కేవలం పేపరు మరియు మార్కర్లు తప్ప మరేమీ లేకుండా, విద్యార్థులు కంప్యూటేషనల్ థింకింగ్ యొక్క నాలుగు స్టెప్స్ నేర్చుకుంటారు. సంక్షిప్త పరిచయం తర్వాత, విద్యార్థులను గ్రూపులుగా విభజించాలి, అక్కడ వారు ఒక నిర్దిష్ట మాన్స్టర్‌ను (ముందుగా ఎంపిక చేసిన మాన్స్టర్స్ నుండి) డ్రా చేయడానికి ఇతర విద్యార్థుల కోసం నిర్దేశాలను సృష్టంచవలసి ఉంటుంది. ఈ మొత్తం టాస్క్ తప్పక డీకంపోజ్ చేయబడాలి, తర్వాత బృందాలు పాట్రన్స్ కోసం కేటలాగ్ లోని అన్ని మాన్స్టర్స్‌ను విశ్లేషిస్తాయి, మాన్స్టర్స్ నుండి సమరూప వివరాలను సంగ్రహిస్తాయి, ఆతర్వాత ఆ సమాచారాన్ని ఒక నిర్దిష్ట మాన్స్టర్ డ్రా చేయడానికి మరొక బృందం కోసం ఒక అల్గోరిథమ్ (నిర్దేశాలు) సృష్టించడానికి ఉపయోగిస్తాయి. అపుడు బృందాలు అల్గోరిథమ్స్‌ను మరొక గ్రూపుతో మార్చుకుంటాయి మరియు ఆ అల్గోరిథమ్ సూచించిన దానిపై ఆధారపడి మాన్స్టర్‌ను డ్రా చేస్తాయి. డ్రాయింగ్ ఒరిజినల్ బృందం ఉద్దేశించినదేనా?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">అన్‌స్పాటెడ్ బగ్స్</a><br><small>ఈ పాఠం డీబగ్గింగ్ స్టెప్స్ గురించి విద్యార్థులను గైడ్ చేస్తుంది. విద్యార్థులు ఈ మంత్రాన్ని నేర్చుకుంటారు: "ఏమి జరిగింది? ఏమి జరుగవలసి ఉండింది? అది మీకు ఏమి చెబుతుంది?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>పెర్సిస్టెన్స్</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">ఒక పునాది నిర్మించడం</a><br><small>కొత్త మరియు పరిష్కరింపబడని సమస్యలు తరచూ చాలా కఠినంగా ఉంటాయి. మనం ఏదైనా సృజనాత్మకమైనది, ఉపయోగకరమైనది మరియు తెలివైనది తయారు చేయడానికి అవకాశం పొందాలనుకుంటే, అప్పుడు మనం కఠినమైన సమస్యలను గట్టిగా ఢీ కొట్టడానికి సిద్ధంగా ఉండాలి, మనం విజయం సాధించడానికి ముందు కొన్నిసార్లు విఫలమైనప్పటికీ. ఈ పాఠంలో, సాధారణ సామగ్రతో విద్యార్థులు ఒక స్ట్రక్చర్ నిర్మిస్తారు. ఈ స్ట్రక్ఛర్ ఒక టెక్స్ట్‌బుక్‌ను పది సెకండ్ల కంటే ఎక్కువ సమయం మోయగలిగే దాని సామర్థ్యం గురించి పరీక్షించబడుతుంది. అత్యధిక విద్యార్థులు మొదటిసారి దీన్ని సరిగా చేయలేరు, కానీ వారు ముందుకు చొచ్చుకు పోవడం మరియు ప్రయత్నిస్తూ ఉండటం ముఖ్యం.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">స్టీవ్ అండ్ బిగ్ ప్రాజెక్టు</a><br><small>ఒక ప్రశ్నకు జవాబిచ్చేటప్పుడు లేదా ఒక ప్రాజెక్టుపై పని చేసేటప్పుడు విద్యార్థులు ఒక అవరోధం ఎదుర్కొంటే, వారు సులువుగా నిరాశకు గురి అవుతారు మరియు దాన్ని వదిలివేస్తారు. నేర్చుకోవడంలో నిరాశ అనేది ఒక ముఖ్యమైన భాగం కావచ్చు అనే ఆలోచనను ఈ పాఠం విద్యార్థులకు పరిచయం చేస్తుంది. ఇక్కడ, సృజనాత్మక ప్రక్రియలో నిరాశ అనేదాన్ని విఫలతకు ఒక సంకేతంగా కాకుండా, ఒక స్టెప్‌గా ప్రదర్శించడం జరుగుతుంది. ఈ పాఠాన్ని ఒకటి లేదా రెండు తరగతి సెషన్లలో పూర్తి చేయవచ్చు. 


మీకు ఎక్కువ సమయం ఉంటే, మార్బల్ రన్ యాక్టివిటీ యొక్క బిల్డింగ్ మరియు రివైజింగ్ ఫేజ్‌ను నిస్సంకోచంగా డ్రా చేయండి.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>ఆబ్‌స్ట్రాక్షన్</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">మ్యాడ్ గ్లిబ్స్</a><br><small>కంప్యూటర్ సైంటిస్ట్ అర్థం చేసుకోవలసిన అత్యంత ముఖ్యమైన నైపుణ్యాలలో అన్‌స్ట్రాక్షన్ ఒకటి. ఇది సమస్యలను సరళం చేస్తుంది మరియు అనవసర రిపిటీషన్‌ను నివారిస్తుంది. ఒక మంచి కోడర్ తాను ఒక ప్రోగ్రామ్ సృష్టించే ప్రతిసారీ అబ్‌స్ట్రాక్షన్ ఉపయోగిస్తారు. ఈ యాక్టివిటీలో మీ విద్యార్థులు తేడాలు చూడటానికి స్టోరీలను విశ్లేషిస్తారు, తద్వారా వారు వారిని వేరుగా అబ్‌స్ట్రాక్ట్ చేయగలుగుతారు. అలా అబ్‌స్ట్రాక్ట్ చేయబడిన స్టోరీలు సరదా కోసం మరియు క్రేజీ కొత్తవాటి కోసం టెంప్లట్‌లు అవుతాయి.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Lesson Video</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">యాక్టివిటీ జవాబు కీ</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">మదింపు జవాబు కీ </a></td>  </tr>
<tr>   <th id=t07>వేరియబుల్స్</th>​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">ఎన్‌వలప్ వేరియబుల్స్</a><br><i>*సరఫరాలు: ఎన్‌వలప్‌లు (1-4/2-4 గ్రూపు)</i><br><small>నంబర్లు మరియు పదాలు లాంటి విలువలకు వేరియబుల్స్‌ను ప్లేస్‌హోల్డర్లుగా ఉపయోగించడం జరుగుతుంది. వేరియబుల్స్ ప్రోగ్రామింగ్‌లో చాలా స్వేచ్ఛ ఇస్తాయి. ఒక పద సమూహాన్ని అనేకసార్లు టైప్ చేయడానికి లేదా ఒక అర్థం కాని నంబరును గుర్తుంచుకోవడడానికి బదులు, కంప్యూటర్ సైంటిస్ట్‌లు వాటికి సంబంధించిన వేరియబుల్స్ ఉపయోగించవచ్చు. ఈ పాఠం వేరియబుల్స్ అంటే ఏమిటో మరియు మనం వివిధ మార్గాల్లో వాటిని ఎలా ఉపయోగించవచ్చో వివరించడంలో సహాయపడుతుంది. 
అర్థం చేసుకోవడానికి వేరియబుల్స్ అనే ఆలోచన సులువైన కాన్సెప్ట్ కాదు, కాబట్టి పాఠం ముగింపులో చర్చించడం కోసం పుష్కలంగా సమయం ఇవ్వాలని మేము సిఫారసు చేస్తాము.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

