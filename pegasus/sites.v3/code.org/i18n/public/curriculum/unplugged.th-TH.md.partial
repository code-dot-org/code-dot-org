---
title: พื้นฐานของวิทยาการคอมพิวเตอร์แบบออฟไลน์
video_player: true
theme: responsive
---

# พื้นฐานของวิทยาการคอมพิวเตอร์แบบออฟไลน์

เราได้รวบรวมรายชื่อบทเรียนแบบออฟไลน์ทั้งหมดที่เราจัดเตรียมไว้ให้กับคุณเพื่อใช้ในชั้นเรียนเรียบร้อยแล้ว คุณสามารถสอนพื้นฐานของวิทยาการคอมพิวเตอร์ได้แล้ว ไม่ว่าคุณจะมีคอมพิวเตอร์ในชั้นเรียนหรือไม่ก็ตาม!
<br>
<div class="col-50">
ทั้งนี้ เราใช้คำว่า “ออฟไลน์” สำหรับบทเรียนที่นักเรียนไม่ต้องทำบนคอมพิวเตอร์ นักเรียนจะได้ใช้ดินสอและกระดาษ บล็อกหรือแบบจำลองทำงานบ่อย ๆ  ซึ่งเป็นเจตนาของเราที่ต้องการให้นักเรียนได้ใช้การสัมผัสและการเคลื่อนไหวของร่างกาย ซึ่งจะช่วยให้นักเรียนแยกแยะแนวคิดที่สลับซับซ้อนที่เชื่อมโยงกับชีวิตของตนเองได้ <br><br>บทเรียนแบบออฟไลน์มีประโยชน์เพราะช่วยสร้างและรักษาบรรยากาศความร่วมมือภายในชั้นเรียนได้มากเป็นพิเศษ และยังเป็นประสบการณ์สำคัญที่มีความหมาย ที่คุณอ้างอิงถึงได้ทุกเมื่อเมื่อแนะนำแนวคิดที่เป็นนามธรรมมากยิ่งขึ้น แต่ละกิจกรรมเหล่านี้นำมาใช้เดี่ยว ๆ หรือร่วมกับบทเรียนวิทยาการคอมพิวเตอร์อื่นได้หากมีแนวคิดที่เกี่ยวข้องกัน
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;4 ขวบขึ้นไป, ภาษาอังกฤษเท่านั้น
</div>

<div style="clear: both;"></div>

***
## บทเรียนแบบออฟไลน์ในพื้นฐานด้านวิทยาการคอมพิวเตอร์สำหรับปี 2021-22
คุณจะพบบทเรียนต่อไปนี้ใน <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">พื้นฐานด้านวิทยาการคอมพิวเตอร์สำหรับปี 2021-22</a>
<br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>คอร์ส</th>    <th><center><big>แผนการเรียนการสอน</th>     <th width=10%><center><big>Concept</th>    <th width=20%><center><big>วิดีโอ</th>     <tr>    <th rowspan="3" id="t01">คอร์ส A</th>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - แผนที่สุดหรรษา</a><br><small>บทเรียนแบบออฟไลน์นี้จะรวบรวมนักเรียนเข้าด้วยกันผ่านงานง่าย ๆ: พา "เจ้าเฉิ่ม" ไปหาผลไม้ นักเรียนจะได้ฝึกเขียนคำสั่งที่แน่นอนขณะที่ทำงานเพื่อแปลคำสั่งเป็นสัญลักษณ์ที่ให้ไว้ หากโค้ดมีปัญหา นักเรียนควรช่วยกันค้นหาบักและหาวิธีแก้ไข </td><td>การจัดลำดับ</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>  </tr>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - ลูปแสนสนุก</a><br><small>กิจกรรมนี้เหมือนกับการกลับไปเยือนแผนที่สุดหรรษา ในตอนนี้ นักเรียนจะได้ใช้โค้ดเพื่อไขปริศนาที่ใหญ่ขึ้นและยาวขึ้น ซึ่งจะช่วยให้นักเรียนได้เห็นประโยชน์จากโครงสร้างต่าง ๆ จนสามารถเขียนโค้ดที่ยาวขึ้นได้ด้วยวิธีการที่ง่ายลง</td><td>ลูป</td> <td><img src="/images/a7.png" width="90%"></td>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - เดอะ บิ๊ก อีเวนท์ จูเนียร์</a><br><small>เหตุการณ์เป็นวิธีที่ยอดเยี่ยมในการเพิ่มความหลากหลายให้กับอัลกอริทึมที่เขียนไว้ล่วงหน้า บางครั้งคุณอาจต้องการให้โปรแกรมสามารถตอบสนองผู้ใช้ได้ตรงกับที่ผู้ใช้ต้องการ ซึ่ง ณ จุดนี้ เหตุการณ์จะช่วยได้ </td><td>เหตุการณ์</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>  </tr>       <tr>    <th rowspan="3" id="t02">คอร์ส B</th>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - ขยับหน่อยสิ ขยับหน่อย</a><br><small>บทเรียนนี้จะเตรียมนักเรียนให้พร้อมทางด้านจิตใจก่อนฝึกเขียนโค้ดที่เป็นเนื้อหาหลักตลอดคอร์สนี้ นักเรียนที่แบ่งออกเป็นกลุ่มเล็ก ๆ จะใช้กิจกรรมที่เน้นการเคลื่อนไหวของร่างกายเพื่อเขียนโปรแกรมให้เพื่อนในห้องค่อย ๆ ก้าวจากที่หนึ่งไปอีกที่หนึ่งจนกว่าจะไปถึงเป้าหมาย </td><td>การจัดลำดับ</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - มาวนลูปกัน</a><br><small>เมื่อเราเริ่มเขียนโปรแกรมที่มีความน่าสนใจขึ้นและยาวขึ้น โค้ดก็มักจะมีรายการซ้ำกันมากขึ้นเรื่อย ๆ ซึ่งในบทเรียนนี้ นักเรียนจะเข้าใจได้ว่าเราจะใช้ลูปเพื่อถ่ายทอดคำสั่งที่มีรายการซ้ำกันมากมายได้ง่ายขึ้นได้ด้วยการค้นหารูปแบบที่ซ้ำกันที่อยู่ภายในท่าเต้นเป็นหลัก </td><td>ลูป</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - แอปที่ใช่</a><br><small>ในบทเรียนนี้ นักเรียนจะเข้าใจว่าวิทยาการคอมพิวเตอร์สามารถช่วยผู้คนในโลกความเป็นจริงได้ อันดับแรก นักเรียนจะแสดงความรู้สึกร่วมกับผู้ใช้สมาร์ทโฟนหลายคนที่เราสมมุติขึ้นเพื่อช่วยให้พวกเขาค้นหา "แอปที่ใช่" ที่ตอบสนองความต้องการของตน หลังจากนั้น นักเรียนจะได้ฝึกแสดงความเห็นใจและความคิดสร้างสรรค์เพื่อร่างแอปสำหรับสมาร์ทโฟนของตนเองที่ตอบโจทย์ความต้องการของผู้ใช้คนอื่น ๆ เพิ่มขึ้นอีกหนึ่งคน </td><td>ผลกระทบจากการใช้คอมพิวเตอร์</td> <td><img src="/images/b10.png" width="90%"></td>  </tr>       <tr>    <th rowspan="4" id="t03">คอร์ส C</th>    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - หุ่นยนต์เพื่อนรักของฉันชื่อจูเนียร์</a><br><i>*อุปกรณ์: แก้วพลาสติก (10 ใบ/นักเรียนหนึ่งกลุ่มกลุ่มละ 2-3 คน)</i><br><small>เมื่อใช้สัญลักษณ์ชุดหนึ่งแทนตำแหน่งของโค้ด นักเรียนจะออกแบบอัลกอริทึมเพื่อสั่งให้ "หุ่นยนต์" เรียงแก้วเป็นชั้น ๆ ในรูปแบบที่ไม่เหมือนกันได้ นักเรียนจะสลับกันเป็นหุ่นยนต์และทำตามคำสั่งนี้และตอบโต้อัลกอริทึมที่เพื่อนในห้องกำหนดขึ้นเท่านั้น เนื้อหาส่วนนี้จะสอนให้นักเรียนเห็นถึงความเชื่อมโยงระหว่างสัญลักษณ์และการกระทำ ข้อแตกต่างระหว่างอัลกอริทึมและโปรแกรม และทักษะการดีบักที่มีค่า </td><td>การจัดลำดับ</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>  </tr>   <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - หุ่นยนต์เพื่อนรักจอมซ่าของฉันชื่อจูเนียร์</a><br><i>*อุปกรณ์: แก้วกระดาษ (20 ใบ/นักเรียนหนึ่งกลุ่มกลุ่มละ 4 คน)</i><br><small>ภาพรวมให้นักเรียนใช้กิจกรรม "เพื่อนหุ่นยนต์ของฉัน" ที่มีอยู่เดิมเป็นพื้นฐาน เพื่อคิดงานดีไซน์ที่ใหญ่ขึ้นและสลับซับซ้อนยิ่งขึ้น นักเรียนจำเป็นต้องระบุถึงรูปแบบที่ซ้ำไปซ้ำมาภายในชุดคำสั่งที่สามารถแทนที่ด้วยลูปไว้ก่อนที่จะเขียนโปรแกรมให้ "หุ่นยนต์" ของตนคิดงานดีไซน์ที่ใหญ่ขึ้นได้จนเสร็จสมบูรณ์ </td><td>ลูป</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>  </tr>       <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - เหตุการณ์สำคัญ</a><br><small>อีกไม่นานต่อจากนี้ นักเรียนจะได้รู้จักกับเหตุการณ์ ซึ่งก็คือวิธีที่ดีมากเพื่อเพิ่มความยืดหยุ่นให้กับอัลกอริทึมที่เขียนไว้แล้วล่วงหน้า บางครั้งคุณอาจต้องการให้โปรแกรมสามารถตอบสนองผู้ใช้ได้ตรงกับที่ผู้ใช้ต้องการ ซึ่ง ณ จุดนี้ "เหตุการณ์" จะช่วยให้โปรแกรมมีความน่าสนใจและโต้ตอบได้มากขึ้น </td><td>เหตุการณ์</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>   </tr>        </tr>      <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - กำไลไบนารี</a><br><i>*อุปกรณ์: ปากกามาร์กเกอร์ อุปกรณ์อื่น – ลูกปัดสีดำ 18 ลูก/สีขาว 18 ลูก, ลวดกำมะหมี่สำหรับนักเรียนคนละ 1 เส้น</i><br><small>ไบนารีมีความสำคัญมากในโลกคอมพิวเตอร์ คอมพิวเตอร์ส่วนใหญ่ในปัจจุบันนี้จัดเก็บข้อมูลทุกประเภทไว้ในรูปแบบไบนารี บทเรียนนี้จะช่วยชี้ให้เห็นว่าเราสามารถเปลี่ยนบางอย่างในชีวิตจริงได้อย่างไรก่อนแปลงเป็นชุดของคำสั่งเปิดและปิด </td><td>ไบนารี</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>  </tr>         <tr>    <th rowspan="3" id="t04">คอร์ส D</th>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - การเขียนโปรแกรมบนกระดาษกราฟ<br></a><small>"การเขียนโปรแกรม" ให้คนหนึ่งเป็นคนวาดรูปนั้นคือการเปิดโอกาสให้นักเรียนได้เข้าใจแนวคิดหลักบางประการของการเขียนโปรแกรมในรูปแบบที่สนุกสนานและเข้าถึงได้ โดยการเรียนรู้ในห้องเรียนจะเริ่มจากการให้นักเรียนใช้สัญลักษณ์เพื่อสอนเพื่อน ๆ ระบายสีสี่เหลี่ยมจัตุรัสที่อยู่บนกระดาษกราฟเพื่อวาดออกมาเป็นภาพที่ใกล้เคียงกับภาพที่มีอยู่มากที่สุด หากมีเวลาเหลือ แนะนำให้บทเรียนนี้รวมภาพที่นักเรียนวาดขึ้นมาเองด้วย </td><td>การจัดลำดับ</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - ฝึกเขียนโปรแกรม<br></a><small>กิจกรรมนี้จะเริ่มจากบทเรียนสั้น ๆ ว่าด้วยการดีบักและการไม่ย่อท้อ ก่อนใช้เวลาที่เหลือให้คุ้มค่าด้วยการแบ่งนักเรียนออกเป็นกลุ่มเพื่อให้ช่วยกันเขียนโปรแกรมให้กับคำสั่งหนึ่ง </td><td>การจัดลำดับ</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>      </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - เงื่อนไขด้วยการ์ด</a><br><small>บทเรียนนี้จะอธิบายว่าเราจะใช้เงื่อนไขอย่างไรเพื่อเขียนโปรแกรมให้ตรงกับข้อมูลเฉพาะที่มีอยู่ เราไม่มีข้อมูลทั้งหมดที่ต้องการอยู่ในมือเสมอไปเมื่อเขียนโปรแกรม บางครั้งคุณจะต้องการสิ่งที่ต่างออกไปในสถานการณ์หนึ่งมากกว่าในอีกสถานการณ์หนึ่งแม้คุณไม่ทราบว่าสถานการณ์ใดที่จะเป็นจริงเมื่อคุณใช้โค้ด ตรงจุดนี้เองที่เงื่อนไขเข้ามามีส่วนเกี่ยวข้อง เพราะเงื่อนไขจะยอมให้คอมพิวเตอร์ทำการตัดสินใจโดยดูจากข้อมูลที่เป็นจริงในตอนที่คุณกำลังใช้โค้ด +</td><td>เงื่อนไข</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>    </tr>         <tr>    <th rowspan="3" id="t05">คอร์ส E</th>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - การแชร์ดิจิทัล</a><br><i>*อุปกรณ์: สมาร์ทโฟนหรือแท็บเล็ต</i><br><small>บทเรียนนี้พัฒนาขึ้นมาจากพื้นฐานวิทยาการคอมพิวเตอร์โดยทีมที่ดูแลเรื่องลิขสิทธิ์และความคิดสร้างสรรค์ เพื่อช่วยให้นักเรียนเข้าใจความท้าทายและประโยชน์ของการเคารพสิทธิ์การเป็นเจ้าของและลิขสิทธิ์ โดยเฉพาะในสภาพแวดล้อมดิจิทัล ควรสนับสนุนให้นักเรียนเคารพสิทธิ์ของศิลปินว่านี่คือส่วนสำคัญของการเป็นพลเมืองดิจิทัลที่มีจริยธรรม </td><td>พลเมืองดิจิทัล</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - การเขียนเพลง</a><br><small>หนึ่งในโครงสร้างที่โดดเด่นที่สุดของโลกวิทยาการคอมพิวเตอร์คือฟังก์ชั่น ทั้งนี้ ฟังก์ชั่น (ที่บางครั้งเรียกว่า กระบวนการ) คือโปรแกรมขนาดเล็กจิ๋วที่คุณใช้ครั้งแล้วครั้งเล่าภายในโปรแกรมที่ใหญ่ขึ้นของคุณ บทเรียนนี้จะช่วยให้นักเรียนเข้าใจได้ง่าย ๆ ว่า เหตุใดการรวมโค้ดมากมายในรูปของฟังก์ชั่นคือวิธีการฝึกที่มีประโยชน์ </td><td>ฟังก์ชั่น</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 - การออกแบบสำหรับการช่วยการเข้าถึง</a><br><small>ในบทเรียนนี้ นักเรียนจะได้ศึกษาเรื่องการช่วยการเข้าถึงและคุณค่าของการมีความรู้สึกร่วมผ่านการระดมความคิดและการออกแบบโซลูชั่นที่เข้าถึงได้สำหรับแอปสมมุติ </td><td>ผลกระทบจากการใช้คอมพิวเตอร์</td><td><img src="/images/e18.png" width="90%"></td>  </tr>    </tr>         <tr>    <th rowspan="3" id="t06">คอร์ส F</th>           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 -เรื่องราวเติมเต็มพื้นที่ว่าง</a><br><i>*อุปกรณ์: ซองจดหมาย 6 ซอง (อุปกรณ์อื่นที่เหมาะสม: กระดาษหรือบัตรดัชนีที่พับครึ่ง)</i><br><small>นักเรียนจะได้ใช้การเติมเรื่องราวที่ว่างเปล่า (คล้ายกับ Mad Libs®) เป็นบริบทเพื่อทำความเข้าใจวิธีที่คอมพิวเตอร์รับและจัดเก็บข้อมูลจากผู้ใช้ ก่อนใช้ข้อมูลดังกล่าวภายหลังในขณะที่รันโปรแกรม
   </td><td>ตัวแปร</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>    </tr>        <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - ความสนุกจาก For Loop</a><br><i>*อุปกรณ์: ลูกเต๋า (ลูกเต๋า 3 ลูก/นักเรียนหนึ่งกลุ่มกลุ่มละ 2-4 คน)</i><br><small>เรารู้ว่าเราสามารถใช้ลูปทำอะไรซ้ำไปซ้ำมาได้ไม่รู้จบ แต่ตอนนี้ สิ่งที่เรากำลังจะได้เรียนรู้คือวิธีการใช้ลูปที่มีโครงสร้างสุดพิเศษอยู่ภายใน โครงสร้างแบบใหม่นี้จะช่วยให้นักเรียนเขียนโค้ดที่ทรงพลังและมีพลวัตรมากยิ่งขึ้น </td><td>For Loop</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - อินเทอร์เน็ต </a><br><small>แม้ผู้คนมากมายใช้อินเทอร์เน็ตทุกวัน แต่มีไม่มากหรอกที่รู้ว่าอินเทอร์เน็ตทำงานอย่างไร ในบทเรียนนี้ นักเรียนจะได้ลองท่องโลกอินเทอร์เน็ต ควบคู่กับการศึกษาเรื่องการเชื่อมต่อ, URL, ที่อยู่ไอพีและ DNS </td><td>ข้อมูล</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## บทเรียนแบบออฟไลน์เพิ่มเติม

บทเรียนต่อไปนี้จัดแบ่งเป็นหมวดหมู่ไว้ตามแนวคิด และพบได้จากภายในคอร์สพื้นฐานด้านวิทยาการคอมพิวเตอร์ในเวอร์ชันก่อน แหล่งข้อมูลเพิ่มเติมที่คุณอาจใช้อ้างอิงได้เมื่อวางแผนใช้บทเรียนเหล่านี้ได้แก่:
* [คู่มือหลักสูตรสำหรับคอร์ส A-F ของปี 2019](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [รายการอุปกรณ์ประกอบคอร์ส A-F ของปี 2019](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [รายการของ Amazon สำหรับคอร์สปี 2019](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [คู่มือหลักสูตรสำหรับคอร์ส A-F ของปี 2018](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [คู่มือหลักสูตรสำหรับคอร์ส A-F ของปี 2017 (เวอร์ชัน 2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [คู่มือหลักสูตรสำหรับคอร์ส 1-4](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [แฟลชการ์ด CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>แนวคิด</th>    <th width=65%><center><big>Lesson Plan <br><small> แผนการเรียนการสอนประกอบด้วยแหล่งข้อมูลเพิ่มเติม (เช่น สไลด์ วิดีโอ ปุ่มคำตอบ เป็นต้น)
</th>     <th><center><big>แหล่งข้อมูล</th>     <tr>    <th rowspan="2" id=t07 width=5%>พลเมืองดิจิทัล</th>    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>  </tr>  <tr>      <td colspan="2">*การศึกษาโดยหลักสามัญสำนึก (Common Sense Education) มี <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">หลักสูตรพลเมืองดิจิทัลครบทั้งหลักสูตร</a>ที่รวมกิจกรรมแบบออฟไลน์มากมาย</td>    <tr>    <th id=t07>ไบนารี</th>        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">ภาพไบนารี </a><br><small>*อุปกรณ์: ไม่บังคับ - จัดกลุ่มไอเท็มที่ตรงกันข้ามกันเพื่อแสดงให้นักเรียนดู คนจำนวนมากมองว่าไบนารีมีแค่เลขศูนย์กับเลขหนึ่งเท่านั้น แต่นักเรียนจะได้รู้จักแนวคิดที่ว่าเราสามารถนำเสนอข้อมูลผ่านตัวเลือกไบนารีมากมาย บทเรียนนี้จึงนำไอเดียดังกล่าวมาใช้ในระดับที่สูงขึ้นไปอีกขั้นโดยแสดงให้เห็นว่าคอมพิวเตอร์ใช้วิธีใดเพื่อจัดเก็บข้อมูลที่สลับซับซ้อน (เช่น ภาพและสี) ไว้ในรูปแบบไบนารี </td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>ลูป</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">เพื่อนหุ่นยนต์จอมซ่า</a><br><small>นักเรียนจะรู้จักกับความเรียบง่ายและอรรถประโยชน์ของลูปเมื่อใช้ภาษาจาก "เพื่อนหุ่นยนต์จอมซ่า” เพื่อ “เขียนโปรแกรม” ให้เพื่อน ๆ เมื่อนักเรียนรู้จักกับลูปแล้ว นักเรียนจะสร้างโครงสร้างที่ใหญ่ขึ้นในเวลาที่เร็วขึ้น
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>ฟังก์ชั่น</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">มารู้จักกับซันแคทเซอร์</a><br><small>ในบทเรียนนี้ นักเรียนจะได้ทำกระจกสีแขวนหรือที่เรียกว่าซันแคทเซอร์จากลวดหรือเชือกเส้นเล็ก ลูกปัดและชาร์มแบบพิเศษ นักเรียนจะทำตามขั้นตอนที่ซ้ำกัน ก่อนตอบคำถามว่าชุด “ทักษะ” ใดที่ซ้ำกันไปมาหลายครั้ง เมื่อนักเรียนระบุทักษะเหล่านั้นได้แล้ว ให้เรียกใช้ทักษะเหล่านั้นจากโปรแกรมหลัก ก่อนจะมีการบันทึกขั้นตอนที่สวยงามนี้ลงบนกระดาษแผ่นเดียวขณะที่นักเรียนทำสิ่งประดิษฐ์นี้ สุดท้ายนักเรียนจะได้ทราบขั้นตอนสุดท้ายของโปรแกรม ไม่ว่าจะใช้อุปกรณ์ใดไม่ว่าจะเป็นลวดหรือเชือกเส้นเล็ก ลูกปัดและชาร์ม ขั้นตอนนี้จะประสบผลสำเร็จได้หากนักเรียนสามารถ “แยกแยะ” รายละเอียดของวัสดุจำเพาะของตน และเรียกชื่ออุปกรณ์ที่นักเรียนแต่ละคนนำมาด้วยคำที่อาจยังคลุมเครืออยู่ การใช้ตัวพักตำแหน่งทั่วไปนี้ถือเป็นบทเกริ่นนำที่สวยงามของตัวแปร </td> <td><a href="https://youtu.be/d1MdyeXy0v0">Lesson Video</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">ดูบทเรียนขณะถ่ายทอดจริง</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">กุญแจสู่คำตอบของกิจกรรม <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">กุญแจสู่คำตอบของการประเมิน</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">แต่งเพลงด้วยพารามิเตอร์</a><br><small>หนึ่งในโครงสร้างที่โดดเด่นที่สุดของโลกวิทยาการคอมพิวเตอร์คือฟังก์ชั่น ทั้งนี้ ฟังก์ชั่น (ที่บางครั้งเรียกว่า กระบวนการ) คือโปรแกรมขนาดเล็กจิ๋วที่คุณใช้ครั้งแล้วครั้งเล่าภายในโปรแกรมที่ใหญ่ขึ้นของคุณ บทเรียนนี้จะช่วยให้นักเรียนเข้าใจได้ง่าย ๆ ว่า เหตุใดการรวมโค้ดมากมายในรูปของฟังก์ชั่นคือวิธีการฝึกที่มีประโยชน์ และนักเรียนจะใช้โครงสร้างเหล่านั้นได้อย่างไรแม้โค้ดที่อยู่รวมกันเป็นกลุ่มก้อนนี้แตกต่างกันเพียงเล็กน้อย
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>อัลกอริทึม</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">การแข่งลูกเต๋า</a><br><small>ในบทเรียนนี้ นักเรียนจะได้เชื่อมโยงแนวคิดของอัลกอริทึมกลับไปที่กิจกรรมที่เกิดขึ้นจริงด้วยการเล่นเกม "การแข่งลูกเต๋า" โดยมีเป้าหมายเพื่อเริ่มต้นสร้างทักษะในการแปลสถานการณ์ในโลกความจริงสู่สถานการณ์จำลองในโลกออนไลน์ และจากโลกออนไลน์สู่โลกความจริงด้วย
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">หุ่นยนต์เพื่อนรัก</a><br><small>ใช้ปุ่มสัญลักษณ์ที่กำหนดไว้ล่วงหน้าเพื่อให้นักเรียนหาคำตอบให้ได้ว่าจะทำอย่างไรจะช่วยให้เพื่อนในห้องสามารถทำงานเฉพาะงานหนึ่งให้สำเร็จลุล่วงได้โดยไม่ต้องออกคำสั่งใดเลย เนื้อหาส่วนนี้จะสอนให้นักเรียนเห็นถึงความเชื่อมโยงระหว่างสัญลักษณ์และการกระทำ ข้อแตกต่างระหว่างอัลกอริทึมและโปรแกรม และทักษะการดีบักที่มีค่า </td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">อัลกอริทึมในชีวิตจริง: เครื่องบินกระดาษ</a><br><small>ในบทเรียนนี้ นักเรียนจะนำเอาแนวคิดของอัลกอริทึมมาเชื่อมโยงกับกิจกรรมที่เกี่ยวข้องกับชีวิตจริงในแต่ละวัน หลังจากอธิบายเรื่องอัลกอริทึมจบแล้ว ให้นักเรียนใช้อัลกอริทึมเพื่อทำเครื่องบินกระดาษ โดยมีเป้าหมายเพื่อเริ่มต้นสร้างทักษะในกาารแปลสถานการณ์ในโลกที่แท้จริงสู่สถานการณ์จำลองในโลกออนไลน์ และจากสถานการณ์ในโลกออนไลน์สู่โลกแห่งความเป็นจริง </td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">อัลกอริทึมในชีวิตจริง: หว่านเมล็ด</a><br><small>ในบทเรียนนี้ นักเรียนจะนำเอาแนวคิดของอัลกอริทึมมาเชื่อมโยงกับกิจกรรมที่เกี่ยวข้องกับชีวิตจริงในแต่ละวันด้วยการปลูกเมล็ดพันธุ์พืชจริง ๆ เป้าหมายในที่นี้คือการเริ่มต้นการสร้างทักษะในการแปลงสถานการณ์จริงบนโลกให้เป็นเรื่องราวออนไลน์ และจากสถานการณ์ในโลกออนไลน์สู่โลกแห่งความเป็นจริง </td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">แทนแกรม</a><br><small>บทเรียนนี้จะอธิบายถึงความสำคัญบางเรื่องของอัลกอริทึม คุณจะใช้อัลกอริทึมได้หลายวิธีมากหากคุณทำให้อัลกอริทึมเป็นเรื่องง่าย ๆ ไม่สลับซับซ้อน แต่หากคุณต้องการให้ทุกคนได้ผลลัพธ์ที่เหมือนกัน อัลกอริทึมของคุณต้องมีรายละเอียดมากขึ้นกว่าเดิม นักเรียนจะได้ศึกษาถึงความแตกต่างระหว่างอัลกอริทึมทั่วไปและแบบที่มีรายละเอียดขณะที่ไขปริศนาแทมแกรม </td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">การคิดคำนวณ</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">การคิดคำนวณ</a><br><small>ไม่มีคำสั่งเตรียมไว้ให้สำหรับกิจกรรมนี้ แต่จะให้นักเรียนใช้ตัวอย่างสิ่งที่ผู้เล่นที่สมมติขึ้นทำไว้เพื่อหาคำตอบว่าจะเล่นเกมกันอย่างไร บทเรียนนี้จะเปิดโอกาสให้นักเรียนได้ฝึกศิลปะ 4 อย่างของวิทยาการคำนวณ (การแยกย่อย การจับคู่รูปแบบ การคิดเชิงนามธรรม และอัลกอริทึม) ภายในกิจกรรมหนึ่งที่สัมพันธ์กัน </td> <td><a href="https://youtu.be/TlAaklrolA0">วิดีโอบทเรียน</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">ดูบทเรียนขณะใช้สอน</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">กุญแจสู่คำตอบของกิจกรรม</a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">การคิดเชิงคำนวณอย่างเป็นระบบไปพร้อมกับเจ้าสัตว์ประหลาด</a><br><small>แค่กระดาษและปากกามาร์กเกอร์เท่านั้น นักเรียนก็สามารถเรียนรู้สี่ขั้นตอนของการคิดเชิงคำนวณอย่างเป็นระบบ หลังจากบทนำสั้น ๆ นักเรียนจะได้แบ่งกลุ่ม และออกคำสั่งให้นักเรียนคนอื่น ๆ วาดรูปสัตว์ประหลาดตัวใดตัวหนึ่ง (จากรายการสัตว์ประหลาดที่เตรียมไว้ให้) งานทั้งหมดที่ต้องทำคือการแยกย่อย เพื่อให้แต่ละกลุ่มวิเคราะห์รูปแบบจากสัตว์ประหลาดทุกตัวที่อยู่ในรายการ แยกรายละเอียดที่คล้ายกันออกจากสัตว์ประหลาด แล้วนำข้อมูลที่ได้มาสร้างเป็นอัลกอริทึม (ทิศทาง) เพื่อให้อีกทีมหนึ่งวาดภาพสัตว์ประหลาดในแบบใดแบบหนึ่งเป็นการเฉพาะ หลังจากนั้นแต่ละทีมจะเปลี่ยนอัลกอริทึมกับอีกกลุ่ม และวาดสัตว์ประหลาดตามอัลกอริทึมที่ได้รับ ภาพที่วาดออกมาจะเหมือนกับที่ทีมที่ออกคำสั่งต้องการหรือไม่ </td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">บักที่รอดหูรอดตาไป</a><br><small>บทเรียนนี้จะช่วยให้นักเรียนได้เรียนรู้ขั้นตอนการตรวจแก้จุดบกพร่องหรือการดีบัก (debug) นักเรียนจะได้เรียนรู้จากสิ่งที่เรียกได้ว่าเป็นคัมภีร์ว่า: "เกิดอะไรขึ้น? หรืออะไรจะเกิดขึ้น? หรือสิ่งนั้นบอกอะไรให้กับคุณได้บ้าง?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>การไม่ย่อท้อ</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">สร้างฐานราก</a><br><small>ปัญหาใหม่ที่ยังไม่มีทางออกเป็นอะไรที่ยากเย็นแสนเข็ญ หากเราอยากจะมีโอกาสได้ทำบางอย่างอย่างสร้างสรรค์ มีประโยชน์และชาญฉลาด เราอาจจะต้องเผชิญหน้ากับปัญหาที่ยุ่งยากนั้นแม้จะหมายถึงความล้มเหลวสองหรือสามครั้งก่อนประสบความสำเร็จ ในบทเรียนนี้ นักเรียนจะได้สร้างโครงสร้างที่ใช้วัสดุทั่ว ๆ ไป ก่อนจะทดสอบโครงสร้างดังกล่าวว่าจะสามารถประคองหนังสือเรียนไว้ได้เกิน 10 วินาทีหรือไม่ ซึ่งนักเรียนเกือบทั้งชั้นจะไม่สามารถทำได้ในครั้งแรก แต่สิ่งสำคัญคือไม่ถอดใจและพยายามต่อไป </td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">สตีวี่และโปรเจกต์ยักษ์</a><br><small>เมื่อนักเรียนเผชิญกับอุปสรรคในขณะที่กำลังตอบคำถามหรือทำงานอยู่กับโปรเจกต์ เป็นธรรมดาที่พวกเขาจะผิดหวังและล้มเลิกความตั้งใจ บทเรียนนี้จะสอนนักเรียนให้รู้ว่าอุปสรรคความยุ่งยากนั้นอาจเป็นส่วนที่สำคัญของการเรียนรู้ เพราะที่นี่ ความท้อแท้ใจนั้นถูกมองว่าเป็นขั้นตอนหนึ่งในกระบวนการสร้างสรรค์มากกว่าที่จะเป็นสัญญาณของความล้มเหลว บทเรียนนี้สามารถนำเสนอได้ในเวลาหนึ่งคาบเรียนหรือสองคาบเรียน หากคุณมีเวลามากขึ้น ก็สามารถใช้เวลาให้เต็มที่ได้เลยโดยเน้นไปที่ขั้นตอนการสร้างและทบทวนกิจกรรม Marble Run </td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>การคิดเชิงนามธรรม</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>การคิดเชิงนามธรรมเป็นหนึ่งในทักษะที่สำคัญที่สุดที่นักวิทยาการคอมพิวเตอร์ควรทำความเข้าใจ การคิดเชิงนามธรรมทำให้ปัญหายุ่งยากน้อยลงและป้องกันไม่ให้เหตุการณ์นี้เกิดขึ้นอีกโดยไม่จำเป็น นักเขียนโค้ดที่ดีจะใช้การคิดเชิงนามธรรมแทบจะทุกครั้งที่สร้างโปรแกรม กิจกรรมนี้จะให้นักเรียนวิเคราะห์เรื่องราวเพื่อแยกแยะความแตกต่างออกมา เรื่องราวส่วนที่แยกวิเคราะห์ออกมานั้นจะกลายเป็นเทมเพลตเพื่อเติมความสนุกสนานและและเฟี้ยวฟ้าวให้กับเทมเพลตอันใหม่ </td> <td><a href="https://youtu.be/TctGRrUdkcc">Lesson Video</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">กุญแจสู่คำตอบของกิจกรรม</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">กุญแจสู่คำตอบของการประเมิน</a></td>  </tr>
<tr>   <th id=t07>ตัวแปร</th>     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">ตัวแปรที่อยู่ในซองจดหมาย</a><br><i>*อุปกรณ์: ซองจดหมาย (1-4 ซอง/นักเรียนหนึ่งกลุ่มกลุ่มละ 2-4 คน)</i><br><small>ตัวแปรนำมาใช้เป็นตัวพักตำแหน่งให้กับค่าต่าง ๆ เช่น ตัวเลขหรือคำ ตัวแปรช่วยให้การเขียนโปรแกรมทำได้อย่างไม่มีขีดจำกัด เพราะแทนที่เราต้องพิมพ์วลีหนึ่งหลาย ๆ ครั้งหรือจดจำตัวเลขที่คลุมเครือ นักวิทยาการคอมพิวเตอร์กลับใช้ตัวแปรเพื่ออ้างอิงถึงข้อมูลเหล่านั้น ด้วยเหตุนี้ บทเรียนนี้จึงจะช่วยอธิบายความหมายของคำว่าตัวแปร และวิธีการต่าง ๆ ที่เราจะนำตัวแปรมาใช้ อย่างไรก็ตาม เราแนะนำให้คุณจัดเวลาไว้ให้มากพอเพื่อพูดคุยถึงเรื่องนี้ในตอนท้ายของบทเรียนเนื่องจากเรื่องนี้ไม่ใช่แนวคิดที่ทำความเข้าใจได้ง่าย </td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

