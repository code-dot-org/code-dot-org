---
title: CS Fundamentals - Безмашинні вправи
video_player: true
theme: responsive
---

# CS Fundamentals - Безмашинні вправи

Ми склали список усіх наших уроків без використання комп'ютера, щоб ви могли використовувати їх у своєму класі. Тепер ви можете викладати основи інформатики незалежно від того, чи є у вашому класі комп'ютери чи ні!
<br>
<div class="col-50">
Ми називаємо уроки, на яких учні не працюють за комп'ютером, “безмашинними.” Учні при цьому часто працюють з олівцем і папером або використовують підручні матеріали.  Це спеціально розроблені кінестетичні активності, які допомагають учням засвоювати складні поняття так, щоб вони бачили їх стосунок до власного життя. <br><br>
Уроки без комп'ютерів особливо корисні для створення і підтримки атмосфери співпраці в класі, а також є корисним досвідом, на який ви зможете посилатися, коли розглядатимете більш абстрактні поняття. Кожне з цих завдань можна використовувати як окремо, так і в поєднанні з іншими уроками інформатики, присвяченими суміжним поняттям.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Вік 4+, тільки англійською
</div>

<div style="clear: both;"></div>

***
## Безмашинні вправи в CS Fundamentals 2022-23
Ці уроки можна знайти в <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">CS Fundamentals 2022-23</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: var(--brand_primary_default);
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Курс</th>
    <th><center><big>План уроку</th>
    <th width=10%><center><big>Поняття</th>
    <th width=20%><center><big>Відео</th>
     <tr>
    <th rowspan="3" id="t01">Курс A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Веселі карти </a><br><small>Цей безмашинний урок об'єднує команди для виконання простого завдання: провести"флурбі" до фрукту. Учні будуть практикуватись у написанні точних інструкцій, працюючи над переведенням інструкцій у надані символи. Якщо в коді виникають проблеми, учні також повинні працювати разом, щоб розпізнати помилки та знайти рішення.</td><td>Послідовність</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Веселі цикли</a><br><small>Ця вправа повертає нас до "Веселих карт". Цього разу учні будуть розв'язувати більші та довші головоломки за допомогою свого коду, що допоможе їм побачити корисність структур, які дозволяють писати довший код у простіший спосіб.</td><td>Цикли</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - Велика молодша подія</a><br><small>Події - це чудовий спосіб урізноманітнити заздалегідь написаний алгоритм. Іноді нам потрібно, щоб наша програма могла реагувати на запити користувача саме тоді, коли цього хоче він. Саме для цього й існують події.</td><td>Події</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Курс B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Рухайся, рухайся</a><br><small>Цей урок допоможе учням ментально підготуватися до вправ з кодування, з якими вони стикатимуться протягом усього курсу. У невеликих командах учні будуть використовувати фізичну активність, щоб запрограмувати своїх однокласників обережно переходити з місця на місце, поки не буде досягнута мета.</td><td>Послідовність</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Зациклюємось</a><br><small>Коли ми починаємо писати довші та цікавіші програми, наш код часто містить багато повторень. На цьому уроці учні дізнаються про те, як можна використовувати цикли, щоб легше передавати інструкції, які часто повторюються, дивлячись на повторювані патерни рухів у танці.</td><td>Цикли</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - Ідеальний застосунок</a><br><small>На цьому уроці учні зрозуміють, що інформатика може допомагати людям у реальному житті. Спочатку учні мають проявити емпатію до кількох вигаданих користувачів смартфонів, щоб допомогти їм знайти "ідеальний застосунок", який відповідатиме їхнім потребам. Потім учні вправляються в емпатії та креативності, аби створити власний застосунок для смартфона, який відповідає потребам ще одного користувача.</td><td>Вплив комп'ютерних технологій</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Курс C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - Мої молодші друзі-роботи</a><br><i>*Матеріали та приладдя: Пластикові стаканчики (10 на групу з 2-3 осіб)</i><br><small>Використовуючи набір символів замість коду, учні розроблятимуть алгоритми, щоб навчити "робота" складати стаканчики у різні фігури. Учні по черзі виконуватимуть роль робота, реагуючи лише на алгоритм, визначений їхніми однолітками. Цей сегмент навчає учнів зв'язку між символами та діями, різниці між алгоритмом та програмою, а також цінній навичці налагодження.</td><td>Послідовністьь</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - Мої молодші друзі-роботи та цикли</a><br><i>*Матеріали та приладдя: Паперові стаканчики (20 на групу з 4 осіб)</i><br><small>Огляд
Спираючись на початкову вправу "Мої друзі-роботи", учні працюють з більшими та складнішими моделями. Для того, щоб запрограмувати своїх "роботів" на створення цих більших моделей, учням потрібно буде знайти в інструкціях повторювані шаблони, які можна замінити циклом.</td><td>Цикли</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - Велика подія</a><br><small>Незабаром учні дізнаються, що події - це чудовий спосіб додати гнучкості заздалегідь написаному алгоритму. Іноді нам потрібно, щоб наша програма могла реагувати на запити користувача саме тоді, коли цього хоче він. Події можуть зробити вашу програму цікавішою та інтерактивнішою.</td><td>Події</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Двійкові браслети</a><br><i>*Матеріали та приладдя: маркери. Додатково - 18 чорних/18 білих намистин, 1 очищувач для трубочок на учня</i><br><small> Двійкова система числення надзвичайно важлива у світі комп'ютерів. Більшість комп'ютерів сьогодні зберігають різну інформацію у двійковій формі. Цей урок допомагає продемонструвати, як можна взяти щось із реального життя і перетворити це на серію сигналів увімкнено і вимкнено.</td><td>Двійкова система</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Курс D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Програмування по клітинках<br></a><small>"Програмуючи" один одного малювати малюнки, учні отримують можливість познайомитися з деякими основними поняттями програмування у веселій та доступній формі. Заняття розпочнеться з того, що учні за допомогою символів будуть давати один одному вказівки розфарбовувати квадрати на папері в клітинку, намагаючись відтворити вже існуючий малюнок. Якщо є час, урок можна завершити зображеннями, які учні створять самостійно.</td><td>Послідовність</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Естафетне програмування<br></a><small>Це завдання розпочнеться з короткого уроку про налагодження та наполегливість, а потім швидко перейде до перегонів на час, коли учні об'єднаються в команди і працюватимуть разом над написанням програми по одній інструкції за один раз.</td><td>Послідовність</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Умови з картами</a><br><small>Цей урок демонструє, як можна використовувати умовні оператори для адаптації програми до певної інформації. Ми не завжди володіємо всією інформацією, яка нам потрібна при написанні програми. Іноді нам захочеться зробити щось відмінне в одній ситуації, ніж в іншій, навіть якщо ми не знаємо, яка ситуація станеться при виконанні нашого коду. Ось тут і з'являються умовні оператори. Умовні оператори дозволяють комп'ютеру приймати рішення, ґрунтуючись на інформації, яка є істинною в той момент часу, коли виконується наш код.+</td><td>Умовні оператори</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Курс E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Написання пісень</a><br><small>Однією з найпрекрасніших структур у світі інформатики є функція. Функції (іноді їх називають процедурами) - це міні-програми, які можна використовувати знову і знову всередині нашої основної програми. Цей урок допоможе учням інтуїтивно зрозуміти, чому об'єднання фрагментів коду у функції може бути такою корисною практикою.</td><td>Функції</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - Доступний дизайн</a><br><small>На цьому уроці учні дізнаються про доступність та цінність емпатії через мозковий штурм та розробку доступних рішень для гіпотетичних застосунків.</td><td>Вплив комп'ютерних технологій</td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - Обмін та поширення онлайн</a><br><i>*Матеріали та приладдя: Смартфон або планшет</i><br><small>Цей урок, запозичений для курсу "Основи інформатики" від команди "Авторське право і креативність", має на меті допомогти учням зрозуміти виклики та переваги поваги до права власності та авторського права, особливо в цифровому середовищі. Слід заохочувати учнів поважати права митців як важливу складову прояву етичного цифрового громадянства.</td><td>Цифрове громадянсто</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Курс F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Історії з порожніми конвертами</a><br><i>*Матеріали та приладдя: 6 конвертів (також підійдуть: папір або картки, складені навпіл)</i><br><small>Учні використовуватимуть історії із заповненням пропусків (подібні до Mad Libs®) як контекст для розуміння того, як комп'ютери приймають і зберігають введені користувачем дані, а потім використовують їх під час виконання програми.
   </td><td>Змінні</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - Ігри з циклами</a><br><i>*Матеріали та приладдя: Кубики (3 кубики на групу з 2-4 осіб)</i><br><small>Ми знаємо, що цикли дозволяють нам робити щось знову і знову, але зараз ми навчимося використовувати цикли, в які вбудовані додаткові структури. Ці нові структури дозволять учням створювати більш потужний та динамічний код.</td><td>Цикли for</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - Інтернет</a><br><small>Незважаючи на те, що багато людей користуються інтернетом щодня, мало хто знає, як він працює. На цьому уроці учні уявлятимуть, що вони подорожують інтернетом, дізнаючись про з'єднання, URL-адреси, IP-адреси та систему доменних імен DNS.</td><td>Дані</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## Додаткові безмашинні уроки

Наступні уроки згруповані за поняттями, які можна знайти в попередніх версіях наших курсів "CS Fundamentals". Додаткові ресурси, з якими ви можете ознайомитися, коли плануєте використовувати ці уроки, включають в себе такі:
* [Курс A-F 2019 Методичні рекомендації до навчальної програми](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [Курс A-F 2019 Список матеріалів](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [Курс 2019 Списки Amazon](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [Курс A-F 2018 Методичні рекомендації до навчальної програми](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [Курс A-F 2017 Методичні рекомендації до навчальної програми (версія 2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Курс 1-4 Методичні рекомендації до навчальної програми](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Флеш-картки CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Поняття</th>
    <th width=65%><center><big>План уроку <br>
<small> План уроку містить додаткові ресурси (слайди, відео, ключі з відповідями тощо).
</th>
    <th><center><big>Ресурси</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Цифрове громадянство</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Краудсорсинг</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education має <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">повну навчальну програму з цифрового громадянства</a>, яка включає багато завдань, що не потребують наявності комп'ютера.</td>
    <tr>
    <th id=t07>Двійкова система</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Двійкові зображення </a><br><small>*Матеріали та приладдя: Необов'язково - Групування протилежних об'єктів для демонстрації учням. Хоча багато людей вважають, що двійковий код - це лише нулі та одиниці, учні дізнаються, що інформація може бути представлена у вигляді різноманітних двійкових варіантів. Цей урок розвиває це поняття ще на один крок далі, оскільки він ілюструє, як комп'ютер може зберігати навіть більш складну інформацію (наприклад, зображення та кольори) у двійковому форматі.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>Цикли</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Мої циклічні друзі-роботи</a><br><small>Тут учні вивчають простоту і корисність циклів, "програмуючи" своїх друзів за допомогою мови з "Моїх друзів-роботів" Після знайомства із циклами учні побачать, що вони можуть будувати більші структури швидше.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>Функції</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">Функціональні ловці променів</a><br><small>На цьому уроці учні виготовлять ловця променів з ниток, бісеру та спеціального амулету. Учні виконають низку повторюваних кроків, а потім їх попросять визначити певні набори "навичок", які повторюються кілька разів. Як тільки ці навички будуть визначені, вони будуть запущені з основної програми, і весь прекрасний процес створення буде записаний на одному аркуші паперу. Фінальна програма буде орієнтована на весь клас, незалежно від типу ниток, намистин та амулетів. Щоб ефективно це зробити, учні повинні будуть "абстрагуватися" від деталей своїх конкретних матеріалів і створити розмиті терміни для індивідуальних матеріалів. Таке використання типових заповнювачів є чудовим вступом до змінних.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Відео уроку</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Дивіться урок у дії</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Ключ з відповідями до завдання<a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Ключ з відповідями для оцінювання</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Написання пісень з параметрами</a><br><small>Однією з найпрекрасніших структур у світі інформатики є функція. Функції (іноді їх називають процедурами) - це міні-програми, які можна використовувати знову і знову всередині нашої основної програми. Цей урок допоможе учням інтуїтивно зрозуміти, чому об'єднання фрагментів коду у функції є такою корисною практикою, і як вони можуть використовувати ці структури, навіть якщо фрагменти коду дещо відрізняються.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>Алгоритми</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Гра в кості</a><br><small>На цьому уроці учні пов'язуватимуть поняття алгоритмів з реальним життям, граючи в гру в кості. Мета полягає в тому, щоб почати розвивати навички перенесення реальних ситуацій в онлайн-сценарії і навпаки.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Мої друзі-роботи</a><br><small>Використовуючи заздалегідь визначений ключ-символ, ваші учні зрозуміють, як спрямовувати один одного для виконання конкретних завдань без використання жодних словесних команд. Цей сегмент вчить учнів зв'язку між символами та діями, різниці між алгоритмом та програмою, а також цінній навичці налагодження.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Алгоритми з реального життя: Паперові літачки</a><br><small>У цьому уроці учні пов'яжуть поняття алгоритмів з повсякденною діяльністю. Після обговорення алгоритмів учні робитимуть паперові літачки, використовуючи алгоритм. Мета полягає в тому, щоб почати розвивати навички перенесення реальних ситуацій в онлайн-сценарії і навпаки.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Алгоритми реального життя: Посади насінину</a><br><small>У цьому уроці учні пов'яжуть поняття алгоритмів з повсякденною, реальною діяльністю, посіявши справжнє зернятко. Мета полягає в тому, щоб почати розвивати навички перенесення реальних ситуацій в онлайн-сценарії і навпаки.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Танграми</a><br><small>Цей урок показує нам дещо важливе про алгоритми. Якщо алгоритм простий, то існує безліч способів його використання. Однак, якщо ви хочете переконатися, що всі отримують однаковий результат, тоді ваш алгоритм потребує більшої деталізації. Під час гри з танграмами учні дізнаються про різницю між детальним та загальним алгоритмом.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">Комп'ютерне мислення</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">Комп'ютерне мислення</a><br><small>Для цього завдання не надається жодних інструкцій. Замість цього учні будуть використовувати приклади того, що робили уявні гравці, щоб зрозуміти, як грати в цю гру. Цей урок дає учням можливість попрактикувати чотири напрямки обчислювального мислення (декомпозиція, зіставлення шаблонів, абстрагування та алгоритми) в одному комплексному завданні.</td> <td><a href="https://youtu.be/TlAaklrolA0">Відео уроку</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Дивіться урок у дії</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Ключ з відповідями до завдання </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Комп'ютерне мислення та монстри</a><br><small>Не маючи нічого, окрім паперу та маркерів, учні вивчать чотири складові обчислювального мислення. Після короткого вступу учні мають бути поділені на групи, де вони повинні будуть створити інструкції для інших учнів, щоб намалювати певного монстра (з каталогу заздалегідь вибраних монстрів). Все завдання має бути декомпоноване, тоді команди будуть аналізувати всіх монстрів у каталозі на наявність закономірностей, виокремлювати схожі деталі у монстрів, а потім використовувати цю інформацію для створення алгоритму (інструкції) для іншої команди, щоб намалювати певного монстра. Потім команди поміняються алгоритмами з іншою групою і намалюють монстра на основі того, що вказує алгоритм. Чи відповідає малюнок задуму команди?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Непомічені баги</a><br><small>Цей урок проведе учнів через етапи налагодження. Учні вивчать мантру: "Що сталося? Що мало статися? Про що це нам говорить?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>Наполегливість</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Побудова фундаменту</a><br><small>Нові та невирішені проблеми часто бувають досить складними. Якщо ми хочемо мати хоч якийсь шанс зробити щось креативне, корисне і розумне, ми повинні бути готові вирішувати складні проблеми, навіть якщо це означає, що нам доведеться кілька разів зазнати невдачі, перш ніж ми досягнемо успіху. На цьому уроці учні будуватимуть конструкцію зі звичайних матеріалів. Конструкцію випробують на здатність утримувати підручник більше десяти секунд. Більшість учнів не зможуть зробити це правильно з першого разу, але важливо, щоб вони не зупинялися і продовжували пробувати.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Стіві та великий проєкт</a><br><small>Коли учні стикаються з перешкодою під час відповіді на запитання або роботи над проєктом, їм дуже легко розчаруватися і опустити руки. Цей урок познайомить учнів з ідеєю, що розчарування може бути важливою частиною навчання. Тут розчарування представлене як етап творчого процесу, а не як ознака невдачі. Цей урок можна провести протягом одного або двох занять у класі. Якщо у вас є більше часу, не соромтеся розтягнути фазу побудови та перегляду завдання "Marble Run".</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>Абстрагування</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Абстрагування - одна з найважливіших навичок для фахівця з інформатики. Це спрощує задачі та запобігає непотрібним повторенням. Хороший програмість застосовує абстрагування майже щоразу при створенні програми. Це завдання пропонує учням проаналізувати історії на предмет відмінностей, щоб вони могли абстрагувати їх. Ці абстраговані історії стають шаблонами для нових веселих і божевільних історій.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Відео уроку</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Ключ з відповідями до завдання</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Ключ з відповідями для оцінювання </a></td>
  </tr>
<tr>
   <th id=t07>Змінні</th>
​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Змінні конверту</a><br><i>*Матеріали та приладдя: Конверти (1-4 на групу з 2-4 осіб)</i><br><small>Змінні використовуються як заповнювачі для значень, таких як числа або слова. Змінні дозволяють отримати свободу в програмуванні. Замість того, щоб багато разів набирати фразу або запам'ятовувати незрозуміле число, фахівці з інформатики можуть використовувати змінні для посилання на них. Цей урок допоможе пояснити, що таке змінні і як ми можемо використовувати їх різними способами. Ідею змінних нелегко зрозуміти, тому ми рекомендуємо відвести достатньо часу для обговорення цього наприкінці уроку.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

{{ visit_partial_event_logger }}
