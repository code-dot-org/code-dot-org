---
title: CS Temelleri Bağlantısız
video_player: true
theme: responsive
---

# CS Temelleri Bağlantısız

Sınıfınızda kullanmanız için tüm bağlantısız derslerimizin bir listesini derledik. Artık sınıfınızda bilgisayar olsa da olmasa da bilgisayar biliminin temellerini öğretebilirsiniz!
<br>
<div class="col-50">
Öğrencilerin bilgisayarda çalışmadığı derslere “bağlantısız” diyoruz Öğrenciler genellikle kalem ve kâğıt veya fiziksel manipülatiflerle çalışacaklardır.  Bunlar, öğrencilerin karmaşık kavramları kendi yaşamlarıyla ilgili şekillerde sindirmelerine yardımcı olan kasıtlı olarak yerleştirilmiş kinestetik fırsatlardır. <br><br>
Bağlantısız dersler, işbirlikçi bir sınıf ortamı oluşturmak ve sürdürmek için özellikle yararlıdır ve daha soyut kavramları tanıtırken başvurabileceğiniz faydalı mihenk taşı deneyimleridir. Bu etkinliklerin her biri ya tek başına ya da ilgili kavramlarla ilgili diğer bilgisayar bilimi dersleriyle birlikte kullanılabilir.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;4+ yaş, yalnızca İngilizce
</div>

<div style="clear: both;"></div>

***
## CS Temelleri 2021-22'de bağlantısız dersler
Aşağıdaki dersler <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">CS Temelleri 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Kurs</th>
    <th><center><big>Ders Planı</th> 
    <th width=10%><center><big>Kavram</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Kurs A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - Mutlu Haritalar</a><br><small>Bu bağlantısız ders, ekipleri basit bir görevle bir araya getiriyor: meyvenin "kafasını" almak. Öğrenciler, talimatları sağlanan sembollere çevirmeye çalışırken kesin talimatlar yazma alıştırması yapacaklardır. Kodda sorunlar ortaya çıkarsa, öğrenciler hataları tanımak ve çözümler oluşturmak için birlikte çalışmalıdır.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - Mutlu Döngüler</a><br><small>Bu aktivite Mutlu Haritaları tekrar ziyaret ediyor. Bu sefer, öğrenci koduyla daha büyük, daha uzun bulmacaları çözecek ve daha uzun kodu daha kolay yazabilmelerini sağlayan yapılarda fayda görmelerini sağlayacak.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - Büyük Etkinlik Jr.</a><br><small>Etkinlikler, önceden yazılmış bir algoritmaya çeşitlilik katmanın harika bir yoludur. Bazen programınızın kullanıcıya tam olarak kullanıcı istediği zaman yanıt verebilmesini istersiniz. Etkinlikler bunun içindir.</td><td>Etkinlikler</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - Hareket Ettir, Hareket Ettir</a><br><small>Bu ders, öğrencileri bu kurs boyunca karşılaşacakları kodlama alıştırmalarına zihinsel olarak hazırlamaya çalışacaktır. Küçük ekiplerde öğrenciler, bir hedefe ulaşılana kadar sınıf arkadaşlarını bir yerden bir yere dikkatli bir şekilde adım atacak şekilde programlamak için fiziksel aktiviteyi kullanacaklardır.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - Döngüsel Olmak</a><br><small>Daha uzun ve daha ilginç programlar yazmaya başladığımızda, kodumuz genellikle çok fazla tekrar içerir. Bu derste öğrenciler, bir dansta tekrarlanan hareket kalıplarına bakarak çok tekrarı olan talimatları daha kolay iletmek için döngülerin nasıl kullanılabileceğini öğrenecekler.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - Doğru Uygulama</a><br><small>Bu ders, öğrencilerin bilgisayar biliminin insanlara gerçek hayatta yardımcı olabileceğini fark etmelerini sağlar. İlk olarak, öğrenciler ihtiyaçlarını karşılayan “doğru uygulamayı” bulmalarına yardımcı olmak için birkaç kurgusal akıllı telefon kullanıcısıyla empati kurar. Ardından öğrenciler, ek bir kullanıcının ihtiyaçlarını karşılayan kendi akıllı telefon uygulamalarını tasarlamak için empati ve yaratıcılık kullanırlar.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - Robotik Arkadaşlarım Jr.</a><br><i>*Malzemeler: Plastik bardaklar (10/2-3'lü grup)</i><br><small>Öğrenciler, kod yerine bir dizi sembol kullanarak, bardakları farklı desenlerde istiflemek için bir "robot" talimatı verecek algoritmalar tasarlayacaklar. Öğrenciler sırayla robot olarak katılacak ve yalnızca akranları tarafından tanımlanan algoritmaya yanıt verecek. Bu bölüm öğrencilere semboller ve eylemler arasındaki bağlantıyı, bir algoritma ile bir program arasındaki farkı ve değerli hata ayıklama becerisini öğretir.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr> 
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - Döngüsel Robotik Arkadaşım Jr</a><br><i>*Malzemeler: Kâğıt bardaklar (20/4'lü grup)</i><br><small>Genel Bakışİlk "Robotik Arkadaşlarım" etkinliğini temel alan öğrenciler, daha büyük ve daha karmaşık tasarımlarla uğraşırlar. Bu daha büyük tasarımları tamamlamak üzere "robotlarını" programlamak için, öğrencilerin talimatlarında bir döngü ile değiştirilebilecek tekrarlanan kalıpları tanımlamaları gerekecektir.</td><td>Döngüler</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr> 
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - Büyük Etkinlik</a><br><small>Öğrenciler, etkinliklerin önceden yazılmış bir algoritmaya esneklik eklemenin harika bir yolu olduğunu yakında öğrenecekler. Bazen programınızın kullanıcıya tam olarak kullanıcı istediği zaman yanıt verebilmesini istersiniz. Etkinlikler, programınızı daha ilginç ve etkileşimli hale getirebilir.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr> 
       </tr> 
     <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - İkili Bilezikler</a><br><i>*Malzemeler: İşaretleyiciler. İsteğe bağlı – 18 siyah/18 beyaz boncuk, öğrenci başına 1 boru temizleyici</i><br><small>İkili, bilgisayar dünyasında son derece önemlidir. Günümüzde bilgisayarların çoğu, her türlü bilgiyi ikili biçimde depolar. Bu ders, gerçek hayattan bir şeyler almanın ve onu bir dizi iniş çıkışlara dönüştürmenin nasıl mümkün olduğunu göstermeye yardımcı olur.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Kurs D</th>
    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - Grafik Kâğıdı Programlama<br></a><small>Birbirlerini resim çizmek için "programlayarak", öğrenciler programlamanın bazı temel kavramlarını eğlenceli ve erişilebilir bir şekilde deneyimleme fırsatı elde ederler. Sınıf, öğrencilerin mevcut bir resmi yeniden oluşturma çabası içinde grafik kâğıdındaki kareleri renklendirmeleri için semboller kullanmalarını sağlayarak başlayacaktır. Zaman varsa ders, öğrencilerin kendi oluşturdukları görüntülerle sonlandırılabilir.</td><td>Sıralama</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - Röle Programlama<br></a><small>Bu aktivite, hata ayıklama ve kalıcılık üzerine kısa bir dersle başlayacak, daha sonra öğrenciler ekiplere ayrılarak ve her seferinde bir talimat bir program yazmak için birlikte çalıştıkça hızla zamana karşı bir yarışa geçecektir. </td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - Kartlı Koşullar</a><br><small>Bu ders, bir programı belirli bilgilere uyarlamak için koşul ifadelerinin nasıl kullanılabileceğini gösterir. Bir program yazarken ihtiyacımız olan tüm bilgilere her zaman sahip olamayız. Bazen, kodunuz çalıştığında hangi durumun doğru olacağını bilmeseniz bile, bir durumda diğerinden farklı bir şey yapmak isteyeceksiniz. İşte burada koşullu ifadeler devreye girer. Koşullar, bir bilgisayarın, kodunuz her çalıştırıldığında doğru olan bilgilere dayanarak karar vermesine olanak tanır.+</td><td>Koşullar</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

    </tr>
         <tr>
    <th rowspan="3" id="t05">Kurs E</th>
    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - Dijital Paylaşım</a><br><i>>*Malzemeler: Akıllı telefon veya tablet</i><br><small>Telif Hakkı ve Yaratıcılık ekibi tarafından Bilgisayar Bilimi Temelleri'ne ödünç verilen bu ders, öğrencilerin, özellikle dijital ortamlarda mülkiyet ve telif haklarına saygı duymanın zorluklarını ve faydalarını anlamalarına yardımcı olmak için hazırlanmıştır. Öğrenciler, etik bir dijital vatandaş olmanın önemli bir parçası olarak sanatçıların haklarına saygı duymaya teşvik edilmelidir.</td><td>Digital Citizenship</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - Şarkı yazma</a><br><small>Bilgisayar bilimi dünyasının en görkemli yapılarından biri de fonksiyondur. Fonksiyonlar (bazen prosedürler olarak adlandırılır), daha büyük programınızın içinde tekrar tekrar kullanabileceğiniz mini programlardır. Bu ders, öğrencilerin kod parçalarını fonksiyonlarda birleştirmenin neden bu kadar yararlı bir uygulama olabileceğini sezgisel olarak anlamalarına yardımcı olacaktır.</td><td>Functions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 - Erişilebilirlik için Tasarım</a><br><small>Bu derste öğrenciler, beyin fırtınası yaparak ve varsayımsal uygulamalar için erişilebilir çözümler tasarlayarak erişilebilirlik ve empatinin değeri hakkında bilgi edinecekler.</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width="90%"></td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Kurs F</th>
           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 - Boş Uzay Hikayeleri</a><br><i>*Malzemeler: 6 zarf (ayrıca uygundur: ikiye katlanmış kâğıt veya dizin kartları)</i><br><small>Öğrenciler, bilgisayarların bir kullanıcıdan gelen girdileri nasıl alıp sakladığını anlamak için bir bağlam olarak boşluk doldurma hikayelerini (Mad Libs®'e benzer) kullanacak ve daha sonra bunu bir program çalışırken kullanacaklardır.
   </td><td>Değişkenler</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>  
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - Döngü Eğlencesi İçin</a><br><i>*Malzemeler: Zar (3 zar/2-4'lü grup)</i><br><small>Döngülerin bir şeyleri tekrar tekrar yapmamıza izin verdiğini biliyoruz, ancak şimdi ek yapıları yerleşik olan döngüleri nasıl kullanacağımızı öğreneceğiz. Bu yeni yapılar, öğrencilerin daha güçlü ve dinamik kodlar oluşturmasına olanak sağlayacak.</td><td>Döngüler için</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - İnternet</a><br><small>Birçok insan interneti günlük olarak kullanmasına rağmen, pek çoğu nasıl çalıştığını bilmiyor. Bu derste öğrenciler, bağlantılar, URL'ler, IP Adresleri ve DNS hakkında bilgi edinirken internette akıyormuş gibi yapacaklar.</td><td>Veri</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## Ek Bağlantısız dersler

Aşağıdaki dersler kavrama göre düzenlenmiştir ve CS Temelleri kurslarımızın önceki sürümlerinde bulunabilir. Bu dersleri kullanmayı planlarken danışmak isteyebileceğiniz ek kaynaklar şunları içerir:
* [2019 Kurs A-F Müfredat Rehberi](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Kurs A-F Tedarik Listesi](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 Kurs Amazon Listeleri](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Kurs A-F Müfredat Rehberi](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Kurs A-F Müfredat Rehberi (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Kurs 1-4 Müfredat Rehberi](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF Flashcards](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Kavram</th>
    <th width=65%><center><big>Ders Planı <br>
<small> Ders Planı ek kaynaklar (slaytlar, videolar, cevap anahtarları vb.) içerir.
</th> 
    <th><center><big>Kaynaklar</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Dijital Vatandaşlık</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Sağduyu Eğitimi, pek çok bağımsız etkinliği içeren <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">tam Dijital Vatandaşlık Müfredatı</a> 'na sahiptir.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">İkili Görüntüler </a><br><small>*Malzemeler:İsteğe bağlı - Öğrencilere gösterilecek karşıt öğelerin gruplandırılması. Pek çok kişi ikiliyi kesinlikle sıfırlar ve birler olarak düşünse de, öğrencilere bilginin çeşitli ikili seçeneklerde gösterilebileceği fikri tanıtılacaktır. Bu ders, bir bilgisayarın daha karmaşık bilgileri (görüntüler ve renkler gibi) ikili olarak da nasıl depolayabileceğini gösterdiği için bu kavramı bir adım daha ileri götürür.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>Loops</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Döngüsel Robotik Arkadaşlarım</a><br><small>Burada öğrenciler, "Robotik Arkadaşlarım" bölümündeki dili kullanarak arkadaşlarını "programlayarak" döngülerin basitliğini ve faydasını öğrenirler Döngüler tanıtıldığında, öğrenciler daha büyük yapıları daha hızlı inşa edebileceklerini göreceklerdir.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>Functions</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">Fonksiyonel Güneş Yakalayıcılar</a><br><small>Bu derste öğrenciler ip, boncuk ve özel bir tılsımdan güneş yakalayıcı yapacaklar. Öğrencilerden bir dizi tekrar eden adımı takip edecekler, ardından birkaç kez tekrarlanan belirli “beceri” kümelerini tanımlamaları istenecek. Bu beceriler tanımlandıktan sonra, bir ana programdan çağrılacak ve tüm güzel yaratma süreci tek bir kâğıda kaydedilecektir. Son program, ip, boncuk ve tılsım türü ne olursa olsun tüm sınıfa yönelik olacaktır. Buna etkili bir şekilde izin vermek için, öğrencilerin belirli materyallerinin ayrıntılarını "soyutlamaları" ve bir bireyin malzemeleri için belirsiz terimler oluşturmaları gerekecektir. Genel yer tutucuların bu kullanımı, değişkenlere harika bir giriş niteliğindedir.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Ders Videosu</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Dersi İş Başında Görün</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Etkinlik Cevap Anahtarı <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Değerlendirme Cevap Anahtarı</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Parametrelerle Şarkı Yazma</a><br><small>Bilgisayar bilimi dünyasının en görkemli yapılarından biri de fonksiyondur. Fonksiyonlar (bazen prosedürler olarak adlandırılır), daha büyük programınızın içinde tekrar tekrar kullanabileceğiniz mini programlardır. Bu ders, öğrencilerin kod parçalarını fonksiyonlarda birleştirmenin neden bu kadar yararlı bir uygulama olduğunu ve kod parçaları biraz farklı olduğunda bile bu yapıları nasıl kullanabileceklerini sezgisel olarak anlamalarına yardımcı olacaktır.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>Algoritmalar</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Zar Yarışı</a><br><small>Bu derste öğrenciler, Zar Yarışı oyunu oynayarak algoritma kavramını gerçek yaşam aktiviteleriyle ilişkilendireceklerdir. Buradaki amaç, gerçek dünyadaki durumları çevrimiçi senaryolara veya tam tersine çevirme becerilerini geliştirmeye başlamaktır.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Robotik Arkadaşlarım</a><br><small>Öğrencileriniz, önceden tanımlanmış bir sembol tuşu kullanarak, herhangi bir sözlü komut kullanmadan belirli görevleri gerçekleştirmek için birbirlerine nasıl rehberlik edeceklerini anlayacaklardır. Bu bölüm öğrencilere semboller ve eylemler arasındaki bağlantıyı, bir algoritma ile bir program arasındaki farkı ve değerli hata ayıklama becerisini öğretir.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Gerçek Hayat Algoritmaları: Kâğıt Uçaklar</a><br><small>Bu derste öğrenciler algoritma kavramını günlük aktivitelerle ilişkilendireceklerdir. Algoritmaları tartıştıktan sonra öğrenciler bir algoritma kullanarak kâğıt uçaklar yapacaklar. Buradaki amaç, gerçek dünya durumlarını çevrimiçi senaryolara veya tam tersine çevirme becerilerini geliştirmeye başlamaktır.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Gerçek Hayat Algoritmaları: Bir Tohum Ekin</a><br><small>Bu derste öğrenciler, gerçek bir tohum ekerek algoritma kavramını günlük, gerçek yaşam aktiviteleriyle ilişkilendireceklerdir. Buradaki amaç, gerçek dünyadaki durumları çevrimiçi senaryolara veya tam tersine çevirme becerilerini geliştirmeye başlamaktır.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangramlar</a><br><small>Bu ders bize algoritmalar hakkında önemli bir şey gösteriyor. Bir algoritmayı basit tuttuğunuz sürece, onu kullanmanın birçok yolu vardır. Ancak, herkesin aynı sonucu ürettiğinden emin olmak istiyorsanız, algoritmanızın daha fazla ayrıntıya ihtiyacı vardır. Öğrenciler, tangramlarla oynarken ayrıntılı ve genel bir algoritma arasındaki farkı öğreneceklerdir.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">Bilişimsel Düşünme</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">Bilişimsel Düşünme</a><br><small>Bu aktivite için hiçbir talimat sağlanmamıştır. Bunun yerine öğrenciler, oyunu nasıl oynayacaklarını bulmak için hayali oyuncuların yaptıklarına dair örnekler kullanacaklardır. Bu ders öğrencilere bilişimsel düşünmenin dört sanatını (ayrıştırma, örüntü eşleştirme, soyutlama ve algoritmalar) tek bir birleşik aktivitede uygulama fırsatı verir.</td> <td><a href="https://youtu.be/TlAaklrolA0">Ders Videosu</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Dersi İş Başında Görün</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Etkinlik Cevap Anahtarı </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Canavarlarla Bilişimsel Düşünme</a><br><small>Kâğıt ve işaretleyicilerden başka bir şey olmadan, öğrenciler bilgi işlemsel düşünmenin dört adımını öğrenecekler. Kısa bir girişten sonra, öğrenciler diğer öğrencilerin belirli bir canavarı (önceden seçilmiş canavarlardan oluşan bir katalogdan) çizmeleri için talimatlar oluşturmaları gereken gruplara ayrılmalıdır. Tüm görev ayrıştırılmalıdır, daha sonra ekipler katalogdaki tüm canavarları desenler için analiz edecek, canavarlardan benzer detayları soyutlayacak, sonra bu bilgiyi başka bir ekibin belirli bir canavarı çizmesi için bir algoritma (yönler) oluşturmak için kullanacak. Ekipler daha sonra algoritmaları başka bir grupla değiştirecek ve bu algoritmanın gösterdiğine göre canavarı çizecek. Çizim orijinal ekibin amaçladığı gibi mi?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Tespit Edilmemiş Hatalar</a><br><small>Bu ders, öğrencilere hata ayıklama adımlarında rehberlik edecektir. Öğrenciler şu mantrayı öğrenecekler: "Ne oldu? Ne olması gerekiyordu? Bu size ne anlatıyor?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>Kalıcılık</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">TemelOluşturma</a><br><small>Yeni ve çözülmemiş problemler genellikle oldukça zordur. Yaratıcı, kullanışlı ve zekice bir şey yapma şansına sahip olmak istiyorsak, başarılı olmadan önce birkaç kez başarısız olmak anlamına gelse bile zor sorunlara saldırmaya istekli olmalıyız. Bu derste öğrenciler ortak malzemelerle bir yapı inşa edecekler. Yapı, bir ders kitabını on saniyeden fazla tutma kabiliyeti açısından test edilecektir. Çoğu öğrenci bunu ilk seferde doğru anlamayacaktır, ancak çabalamaları ve denemeye devam etmeleri önemlidir.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie ve Büyük Proje</a><br><small>Öğrenciler bir soruyu cevaplarken veya bir proje üzerinde çalışırken bir engelle karşılaştıklarında, hayal kırıklığına uğramaları ve pes etmeleri çok kolaydır. Bu ders öğrencilere hayal kırıklığının öğrenmenin önemli bir parçası olabileceği fikrini tanıtacaktır. Burada hayal kırıklığı, başarısızlığın bir işareti olarak değil, yaratıcı süreçte bir adım olarak sunulur. Bu ders bir veya iki derslik oturumlarda yapılabilir. Daha fazla zamanınız varsa, Mermer Koşusu etkinliğinin yapım ve gözden geçirme aşamasını çizmekten çekinmeyin.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>Soyutlama</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">Çılgın Glib'ler</a><br><small>Soyutlama, bir bilgisayar bilimcisinin anlaması gereken en önemli becerilerden biridir. Problemleri basitleştirir ve gereksiz tekrarları önler. İyi bir kodlayıcı, hemen hemen her program oluşturduğunda soyutlamayı kullanır. Bu aktivite, öğrencilerinizin hikâyeleri farklılıklar için analiz etmelerini sağlayacak ve böylece onları soyutlayabileceklerdir. Bu soyutlanmış hikâyeler, eğlenceli ve çılgın yenileri için şablonlar haline geliyor.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Ders Videosu</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Etkinlik Cevap Anahtarı</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Değerlendirme Cevap Anahtarı </a></td>
  </tr>
<tr>
   <th id=t07>Variables</th>
​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Zarf Değişkenleri</a><br><i>*Malzemeler: Zarflar (1-4/2-4'lü grup)</i><br><small>Değişkenler, sayılar veya kelimeler gibi değerler için yer tutucu olarak kullanılır. Değişkenler programlamada çok fazla özgürlük sağlar. Bilgisayar bilimcileri, bir cümleyi birçok kez yazmak veya belirsiz bir sayıyı hatırlamak yerine, bunlara referans vermek için değişkenleri kullanabilir. Bu ders, değişkenlerin ne olduğunu ve bunları birçok farklı şekilde nasıl kullanabileceğimizi açıklamaya yardımcı olur. Değişkenler fikri kavranması kolay bir kavram değildir, bu nedenle dersin sonunda tartışma için bolca zaman ayırmanızı öneririz.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

