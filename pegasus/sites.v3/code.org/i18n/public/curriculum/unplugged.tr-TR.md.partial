---
title: CS Temelleri Bağlantısız
video_player: true
theme: responsive
---

# CS Temelleri Bağlantısız

Sınıfınızda kullanmanız için tüm bağlantısız derslerimizin bir listesini derledik. Artık sınıfınızda bilgisayar olsa da olmasa da bilgisayar biliminin temellerini öğretebilirsiniz!
<br>
<div class="col-50">
Öğrencilerin bilgisayarda çalışmadığı derslere “bağlantısız” diyoruz Öğrenciler genellikle kalem ve kâğıt veya fiziksel manipülatiflerle çalışacaklardır.  Bunlar, öğrencilerin karmaşık kavramları kendi yaşamlarıyla ilgili şekillerde sindirmelerine yardımcı olan kasıtlı olarak yerleştirilmiş kinestetik fırsatlardır. <br><br>
Bağlantısız dersler, işbirlikçi bir sınıf ortamı oluşturmak ve sürdürmek için özellikle yararlıdır ve daha soyut kavramları tanıtırken başvurabileceğiniz faydalı mihenk taşı deneyimleridir. Bu etkinliklerin her biri ya tek başına ya da ilgili kavramlarla ilgili diğer bilgisayar bilimi dersleriyle birlikte kullanılabilir.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;4+ yaş, yalnızca İngilizce
</div>

<div style="clear: both;"></div>

***
## CS Temelleri 2022-23'te bağlantısız dersler
Aşağıdaki dersler şurada bulunabilir: <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">CS Temelleri 2022-23</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Öğrenciler, talimatları sağlanan sembollere çevirmeye çalışırken kesin talimatlar yazma alıştırması yapacaklardır. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. Bazen programınızın kullanıcıya tam olarak kullanıcı istediği zaman yanıt verebilmesini istersiniz. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. İlk olarak, öğrenciler ihtiyaçlarını karşılayan “doğru uygulamayı” bulmalarına yardımcı olmak için birkaç kurgusal akıllı telefon kullanıcısıyla empati kurar. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Öğrenciler sırayla robot olarak katılacak ve yalnızca akranları tarafından tanımlanan algoritmaya yanıt verecek. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Bazen programınızın kullanıcıya tam olarak kullanıcı istediği zaman yanıt verebilmesini istersiniz. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. İsteğe bağlı – 18 siyah/18 beyaz boncuk, öğrenci başına 1 boru temizleyici</i><br><small>İkili, bilgisayar dünyasında son derece önemlidir. Günümüzde bilgisayarların çoğu, her türlü bilgiyi ikili biçimde depolar. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. Sınıf, öğrencilerin mevcut bir resmi yeniden oluşturma çabası içinde grafik kâğıdındaki kareleri renklendirmeleri için semboller kullanmalarını sağlayarak başlayacaktır. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. Bir program yazarken ihtiyacımız olan tüm bilgilere her zaman sahip olamayız. Bazen, kodunuz çalıştığında hangi durumun doğru olacağını bilmeseniz bile, bir durumda diğerinden farklı bir şey yapmak isteyeceksiniz. İşte burada koşullu ifadeler devreye girer. Koşullar, bilgisayarın, kodunuz her çalıştırıldığında doğru olan bilgilere dayanarak karar vermesine olanak tanır.+</td><td>Koşullar</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Kurs E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Şarkı Yazma</a><br><small>Bilgisayar bilimi dünyasının en harika yapılarından biri de fonksiyondur. Fonksiyonlar (bazen prosedürler olarak adlandırılır), daha büyük programınızın içinde tekrar tekrar kullanabileceğiniz mini programlardır. Bu ders, öğrencilerin kod parçalarını birleştirerek fonksiyonlar oluşturmanın neden bu kadar yararlı bir uygulama olabileceğini sezgisel olarak anlamalarına yardımcı olacaktır.</td><td>Fonksiyonlar</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
   </tr>
   <tr>
     <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - Erişilebilirlik için Tasarım</a><br><small>Bu derste, öğrenciler beyin fırtınası yaparak ve varsayımsal uygulamalar için erişilebilir çözümler tasarlayarak erişilebilirlik ve empatinin değeri hakkında bilgi edinecekler.</td><td>Hesaplamanın Etkileri</td><td><img src="/images/e18.png" width ="90%"></td>
   <tr>
     <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - Dijital Paylaşım</a><br><i>*Malzemeler: Akıllı telefon veya tablet</i><br><small>Telif Hakkı ve Yaratıcılık ekibi tarafından Bilgisayar Bilimi Temelleri'ne ödünç verilen bu ders, öğrencilerin, özellikle dijital ortamlarda mülkiyet ve telif hakkına saygı duymanın zorluklarını ve faydalarını anlamalarına yardımcı olmak için hazırlanmıştır. Öğrenciler, etik kurallarına uyan bir dijital vatandaş olmanın önemli bir parçası olarak sanatçıların haklarına saygı duymaya teşvik edilmelidir.</td><td>Dijital Vatandaşlık</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
   </tr>
     </tr>
          <tr>
     <th rowspan="3" id="t06">Kurs F</th>
            <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Boş Alan Hikayeleri</a><br><i>*Malzemeler: 6 zarf (ayrıca uygun: ikiye katlanmış kağıt veya dizin kartları)</i><br><small>Öğrenciler, bilgisayarların kullanıcıdan gelen girdiyi nasıl alıp kaydettiğini, ardından bir program çalışırken bu girdiyi nasıl kullandığını anlamak için bağlam olarak boşluk doldurma hikayelerini (Mad Libs®'e benzer) kullanacaklardır.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. Bu yeni yapılar, öğrencilerin daha güçlü ve dinamik kodlar oluşturmasına olanak sağlayacak.</td><td>Döngüler için</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><<a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - İnternet</a><br><small>Birçok insan interneti her gün kullanmasına rağmen, pek çoğu nasıl çalıştığını bilmiyor. Bu derste öğrenciler, bağlantılar, URL'ler, IP Adresleri ve DNS hakkında bilgi edinirken internette akıyormuş gibi yapacaklar.</td><td>Veri</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## Ek Bağlantısız dersler

Aşağıdaki dersler kavrama göre düzenlenmiştir ve CS Temelleri kurslarımızın önceki sürümlerinde bulunabilir. Bu dersleri kullanmayı planlarken danışmak isteyebileceğiniz ek kaynaklar şunları içerir:
* [2019 Kurs A-F Müfredat Rehberi](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Kurs A-F Tedarik Listesi](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 Kurs Amazon Listeleri](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Kurs A-F Müfredat Rehberi](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Kurs A-F Müfredat Rehberi (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Kurs 1-4 Müfredat Rehberi](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF Flashcards](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Kavram</th>
    <th width=65%><center><big>Ders Planı <br>
<small> Ders Planı ek kaynaklar (slaytlar, videolar, cevap anahtarları vb.) içerir.
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. Pek çok kişi ikiliyi kesinlikle sıfırlar ve birler olarak düşünse de, öğrencilere bilginin çeşitli ikili seçeneklerde gösterilebileceği fikri tanıtılacaktır. Bu ders, bir bilgisayarın daha karmaşık bilgileri (görüntüler ve renkler gibi) ikili olarak da nasıl depolayabileceğini gösterdiği için bu kavramı bir adım daha ileri götürür.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>Loops</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Döngüsel Robotik Arkadaşlarım</a><br><small>Burada öğrenciler, "Robotik Arkadaşlarım" bölümündeki dili kullanarak arkadaşlarını "programlayarak" döngülerin basitliğini ve faydasını öğrenirler Döngüler tanıtıldığında, öğrenciler daha büyük yapıları daha hızlı inşa edebileceklerini göreceklerdir.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>Functions</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">Fonksiyonel Güneş Yakalayıcılar</a><br><small>Bu derste öğrenciler ip, boncuk ve özel bir tılsımdan güneş yakalayıcı yapacaklar. Öğrencilerden bir dizi tekrar eden adımı takip edecekler, ardından birkaç kez tekrarlanan belirli “beceri” kümelerini tanımlamaları istenecek. Bu beceriler tanımlandıktan sonra, bir ana programdan çağrılacak ve tüm güzel yaratma süreci tek bir kâğıda kaydedilecektir. Son program, ip, boncuk ve tılsım türü ne olursa olsun tüm sınıfa yönelik olacaktır. Buna etkili bir şekilde izin vermek için, öğrencilerin belirli materyallerinin ayrıntılarını "soyutlamaları" ve bir bireyin malzemeleri için belirsiz terimler oluşturmaları gerekecektir. Genel yer tutucuların bu kullanımı, değişkenlere harika bir giriş niteliğindedir.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Ders Videosu</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Dersi İş Başında Görün</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Etkinlik Cevap Anahtarı <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Değerlendirme Cevap Anahtarı</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Parametrelerle Şarkı Yazma</a><br><small>Bilgisayar bilimi dünyasının en görkemli yapılarından biri de fonksiyondur. Fonksiyonlar (bazen prosedürler olarak adlandırılır), daha büyük programınızın içinde tekrar tekrar kullanabileceğiniz mini programlardır. Bu ders, öğrencilerin kod parçalarını fonksiyonlarda birleştirmenin neden bu kadar yararlı bir uygulama olduğunu ve kod parçaları biraz farklı olduğunda bile bu yapıları nasıl kullanabileceklerini sezgisel olarak anlamalarına yardımcı olacaktır.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>Algoritmalar</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Zar Yarışı</a><br><small>Bu derste öğrenciler, Zar Yarışı oyunu oynayarak algoritma kavramını gerçek yaşam aktiviteleriyle ilişkilendireceklerdir. Buradaki amaç, gerçek dünyadaki durumları çevrimiçi senaryolara veya tam tersine çevirme becerilerini geliştirmeye başlamaktır.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Robotik Arkadaşlarım</a><br><small>Öğrencileriniz, önceden tanımlanmış bir sembol tuşu kullanarak, herhangi bir sözlü komut kullanmadan belirli görevleri gerçekleştirmek için birbirlerine nasıl rehberlik edeceklerini anlayacaklardır. Bu bölüm öğrencilere semboller ve eylemler arasındaki bağlantıyı, bir algoritma ile bir program arasındaki farkı ve değerli hata ayıklama becerisini öğretir.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Gerçek Hayat Algoritmaları: Kâğıt Uçaklar</a><br><small>Bu derste öğrenciler algoritma kavramını günlük aktivitelerle ilişkilendireceklerdir. Algoritmaları tartıştıktan sonra öğrenciler bir algoritma kullanarak kâğıt uçaklar yapacaklar. Buradaki amaç, gerçek dünya durumlarını çevrimiçi senaryolara veya tam tersine çevirme becerilerini geliştirmeye başlamaktır.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Gerçek Hayat Algoritmaları: Bir Tohum Ekin</a><br><small>Bu derste öğrenciler, gerçek bir tohum ekerek algoritma kavramını günlük, gerçek yaşam aktiviteleriyle ilişkilendireceklerdir. Buradaki amaç, gerçek dünyadaki durumları çevrimiçi senaryolara veya tam tersine çevirme becerilerini geliştirmeye başlamaktır.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangramlar</a><br><small>Bu ders bize algoritmalar hakkında önemli bir şey gösteriyor. Bir algoritmayı basit tuttuğunuz sürece, onu kullanmanın birçok yolu vardır. Ancak, herkesin aynı sonucu ürettiğinden emin olmak istiyorsanız, algoritmanızın daha fazla ayrıntıya ihtiyacı vardır. Öğrenciler, tangramlarla oynarken ayrıntılı ve genel bir algoritma arasındaki farkı öğreneceklerdir.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">Bilişimsel Düşünme</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">Bilişimsel Düşünme</a><br><small>Bu aktivite için hiçbir talimat sağlanmamıştır. Bunun yerine öğrenciler, oyunu nasıl oynayacaklarını bulmak için hayali oyuncuların yaptıklarına dair örnekler kullanacaklardır. Bu ders öğrencilere bilişimsel düşünmenin dört sanatını (ayrıştırma, örüntü eşleştirme, soyutlama ve algoritmalar) tek bir birleşik aktivitede uygulama fırsatı verir.</td> <td><a href="https://youtu.be/TlAaklrolA0">Ders Videosu</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Dersi İş Başında Görün</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Etkinlik Cevap Anahtarı </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Canavarlarla Bilişimsel Düşünme</a><br><small>Kâğıt ve işaretleyicilerden başka bir şey olmadan, öğrenciler bilgi işlemsel düşünmenin dört adımını öğrenecekler. Kısa bir girişten sonra, öğrenciler diğer öğrencilerin belirli bir canavarı (önceden seçilmiş canavarlardan oluşan bir katalogdan) çizmeleri için talimatlar oluşturmaları gereken gruplara ayrılmalıdır. Tüm görev ayrıştırılmalıdır, daha sonra ekipler katalogdaki tüm canavarları desenler için analiz edecek, canavarlardan benzer detayları soyutlayacak, sonra bu bilgiyi başka bir ekibin belirli bir canavarı çizmesi için bir algoritma (yönler) oluşturmak için kullanacak. Ekipler daha sonra algoritmaları başka bir grupla değiştirecek ve bu algoritmanın gösterdiğine göre canavarı çizecek. Çizim orijinal ekibin amaçladığı gibi mi?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Tespit Edilmemiş Hatalar</a><br><small>Bu ders, öğrencilere hata ayıklama adımlarında rehberlik edecektir. Öğrenciler şu mantrayı öğrenecekler: "Ne oldu? Ne olması gerekiyordu? Bu size ne anlatıyor?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>Kalıcılık</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">TemelOluşturma</a><br><small>Yeni ve çözülmemiş problemler genellikle oldukça zordur. Yaratıcı, kullanışlı ve zekice bir şey yapma şansına sahip olmak istiyorsak, başarılı olmadan önce birkaç kez başarısız olmak anlamına gelse bile zor sorunlara saldırmaya istekli olmalıyız. Bu derste öğrenciler ortak malzemelerle bir yapı inşa edecekler. Yapı, bir ders kitabını on saniyeden fazla tutma kabiliyeti açısından test edilecektir. Çoğu öğrenci bunu ilk seferde doğru anlamayacaktır, ancak çabalamaları ve denemeye devam etmeleri önemlidir.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie ve Büyük Proje</a><br><small>Öğrenciler bir soruyu cevaplarken veya bir proje üzerinde çalışırken bir engelle karşılaştıklarında, hayal kırıklığına uğramaları ve pes etmeleri çok kolaydır. Bu ders öğrencilere hayal kırıklığının öğrenmenin önemli bir parçası olabileceği fikrini tanıtacaktır. Burada hayal kırıklığı, başarısızlığın bir işareti olarak değil, yaratıcı süreçte bir adım olarak sunulur. Bu ders bir veya iki derslik oturumlarda yapılabilir. Daha fazla zamanınız varsa, Mermer Koşusu etkinliğinin yapım ve gözden geçirme aşamasını çizmekten çekinmeyin.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>Soyutlama</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">Çılgın Glib'ler</a><br><small>Soyutlama, bir bilgisayar bilimcisinin anlaması gereken en önemli becerilerden biridir. Problemleri basitleştirir ve gereksiz tekrarları önler. İyi bir kodlayıcı, hemen hemen her program oluşturduğunda soyutlamayı kullanır. Bu aktivite, öğrencilerinizin hikâyeleri farklılıklar için analiz etmelerini sağlayacak ve böylece onları soyutlayabileceklerdir. Bu soyutlanmış hikâyeler, eğlenceli ve çılgın yenileri için şablonlar haline geliyor.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Ders Videosu</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Etkinlik Cevap Anahtarı</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Değerlendirme Cevap Anahtarı </a></td>
  </tr>
<tr>
   <th id=t07>Variables</th>
​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Zarf Değişkenleri</a><br><i>*Malzemeler: Zarflar (1-4/2-4'lü grup)</i><br><small>Değişkenler, sayılar veya kelimeler gibi değerler için yer tutucu olarak kullanılır. Değişkenler programlamada çok fazla özgürlük sağlar. Bilgisayar bilimcileri, bir cümleyi birçok kez yazmak veya belirsiz bir sayıyı hatırlamak yerine, bunlara referans vermek için değişkenleri kullanabilir. Bu ders, değişkenlerin ne olduğunu ve bunları birçok farklı şekilde nasıl kullanabileceğimizi açıklamaya yardımcı olur. Değişkenler fikri kavranması kolay bir kavram değildir, bu nedenle dersin sonunda tartışma için bolca zaman ayırmanızı öneririz.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

