---
title: آموزش اصول پایه علوم کامپیوتر بدون رایانه
video_player: true
theme: responsive
---

# آموزش اصول پایه علوم کامپیوتر بدون رایانه

ما مجموعه‌ای از تمام درسهای بدون رایانه برای استفاده سر کلاس درسی شما را فراهم کرده‌ایم. حالا شما میتوانید اصول پایه علوم کامپیوتر را بی توجه به وجود رایانه سر کلاس بیاموزید!
<br>
<div class="col-50">
ما درسهایی که دانش‌آموزان برای آنها نیاز به رایانه ندارند را درسهای بدون رایانه (یا از پریز کشیده) مینامیم. دانش‌آموزان در این کلاسها معمولاً با مداد و کاغذ و یا دیگر وسایل فیزیکی کار میکنند.  ضمناً تعمداً بخشهایی مستلزم تحرک فیزیکی گنجانده شده تا دانش‌آموزان مفاهیم پیچیده را به شکلی که با زندگی روزمره‌شان ارتباط پیدا کند فرا بگیرند. <br><br>
درسهای بدون رایانه بویژه برای ایجاد و مدیریت محیطی مشارکتی در کلاس سودمندند و تجربیاتی دست اول هستند که وقتی مفاهیم انتزاعی‌تر را می‌آموزید به کارتان می‌آیند. هریک از این فعالیتها را میتوان به تنهایی و یا با دیگر دروس علوم کامپیوتر که مفاهیمی نزدیک به اینها دارند مطالعه کرد.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;سن 4 سال به بالا، زبان: فقط انگلیسی
</div>

<div style="clear: both;"></div>

***
## درسهای بدون رایانه در مورد اصول پایه علوم کامپیوتری 2022-23
دروس زیر را میتوان در <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">اصول پایه علوم کامپیوتری 2022-23</a> یافت. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>دوره</th>
    <th><center><big>برنامه درس</th>
    <th width=10%><center><big>مفهوم</th>
    <th width=20%><center><big>ویدئو</th>
     <tr>
    <th rowspan="3" id="t01">دوره A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - نقشه‌های شاد</a><br><small>این درس تیمها را باهم متحد میکند تا کاری ساده انجام دهند: "فلارب" را به میوه برسانند. دانش‌آموزان در کنار ترجمه دستورالعملها به نمادهای داده شده تمرین میکنند دستورالعملهایی دقیق بنویسند. اگر مشکلی در کد بروز کرد، دانش‌آموزان باید کنار هم کار کند و باگ سیستم را شناسایی کرده و راه‌حل را ارائه دهند.</td><td>توالی دستورات برنامه</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - حلقه‌های شاد</a><br><small>این فعالیت در ادامه نقشه‌های شاد است. اینبار دانش‌آموزان با کدهایشان پازلهای بزرگتر و طولانی‌تری را حل می‌کنند و به این ترتیب کاربرد ساختارها را برای نوشتن کدهای بلندتر به شکلی ساده‌تر لمس خواهند کرد.</td><td>حلقه‌ها</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - آقای رویداد بزرگ دوم.</a><br><small>رویدادها راهی عالی برای افزودن تنوع به الگوریتمهای از پیش نوشته شده هستند. گاهی تمایل دارید برنامه‌تان دقیقاً وقتی کاربر تمایل دارد به او پاسخ بدهد. کار رویداد این است.</td><td>رویدادها</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">دوره B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - حرکتش بده، حرکتش بده It</a><br><small>این درس برای آماده‌سازی ذهنی دانش‌آموزان است تا آماده تمرینهای کدنویسی که در طول این دوره با آنها موجه میشوند باشند. در تیمهای کوچک، دانش‌آموزان با کمک فعالیتهای فیزیکی میتوانند طوری برنامه‌ریزی کنند که همکلاسیهایشان با دقت از جایی به جای دیگر گام بردارند تا به هدف برسند.</td><td>توالی دستورات برنامه</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - استفاده از حلقه</a><br><small>وقتی شروع به نوشتن برنامه‌های طولانیتر و جالبتر میکنیم کد ما اغلب شامل کارهای  تکراری زیادی خواهد بود. در این درس، دانش‌آموزان یاد میگیرند چگونه حلقه‌ها را میتوان بکار گرفت تا به دستورهای برنامه فرمان داد بارها تکرار شوند. درست مثل تکرار الگوهای حرکتی رقص.</td><td>حلقه‌ها</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - برنامه صحیح</a><br><small>این درس برای این است که به دانش‌آموزان یاد دهد میتوان از علوم کامپیوتر در زندگی واقعی بهره گرفت. نخست، دانش‌آموزان با برخی کاربران خیالی تلفن هوشمند همدلی خواهند کرد تا بتوانند به آنها در انتخاب برنامه صحیح که نیازهایشان را پوشش دهند، کمک کنند. بعد، دانش‌آموزان با کمک همدلی و خلاقیت خود سعی میکنند با کمک اپ تلفن هوشمند خود نیازهای یک کاربر دیگر را پاسخ دهند.</td><td>تاثیرات محاسبه</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">دوره C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - دوستان رباتیک و کوچک من Jr.</a><br><i>*لوازم موردنیاز: فنجان پلاستیکی (ده عدد/ در دسته‌های 2 و 3 تایی)</i><br><small>دانش‌آموزان با استفاده از مجموعه‌ای از نمادها به جای کد، الگوریتمهایی طراحی میکنند که به ربات دستور دهد فنجانها را به شکل الگوهای متفاوت روی هم قرار دهد. دانش‌آموزان نوبتی به جای ربات نقش ایفا خواهند کرد و تنها به الگوریتمی که دوستانشان تعیین کرده‌اند پاسخ میدهند. این بخش به دانش‌آموزان یاد میدهد ارتباطی بین نمادها و عملها پیدا کنند و تفاوت بین یک الگوریتم و برنامه را درک کنند و مهارتهای با ارزشی درباره اشکال زدایی از برنامه کسب کنند.</td><td>توالی دستورات برنامه</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - دوست رباتیک و کوچک من</a><br><i>*لوازم موردنیاز: فنجان پلاستیکی (بیست عدد/ در دسته‌های 4 تایی)</i><br><small>این برنامه مشابه فعالیت "دوستان رباتیک کوچک من" به دانش‌آموزان کمک میکند طراحیهای پیچیده‌تر و بزرگتری را اجرا کنند. برای اینکه دانش‌آموزان بتوانند برنامه‌ریزی کنند تا "رباتشان" مسائل بزرگتر خود را حل کند، نیاز دارند الگوهای تکرار شونده را در دستوراتشان شناسایی کرده و آنها را با حلقه جایگزین کنند.</td><td>حلقه‌ها</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - رویداد بزرگ</a><br><small>دانش‌آموزان بزودی می‌آموزند رویدادها راهی خوب برای افزایش انعطاف به الگوریتمهای از پیش نوشته‌شان هستند. گاهی تمایل دارید برنامه‌تان دقیقاً وقتی کاربر تمایل دارد به او پاسخ بدهد. رویدادها میتوانند برنامه شما را جذابتر و واکنشگرا کنند.</td><td>رویدادها</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - دستبندهای دودویی</a><br><i>*لوازم موردنیاز: چند ماژیک علامت زن. انتخابی - 18 تسبیح سیاه/سفید، یک لوله پاک کنبرای هر دانش‌آموز</i><br><small>دودویی در دنیای رایانه‌ها اهمیت بسیار زیادی دارد. اغلب رایانه‌های امروزی هر نوع اطلاعاتی را به شکل دودویی در خود ذخیره می‌سازند. این درس نشان میدهد چگونه میتوان چیزی را از دنیای واقعی دریافت کرد و آنرا به شکل سریهای روشن و خاموش تبدیل کرد.</td><td>دودویی</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">دوره D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - برنامه‌نویسی روی کاغذ رسم<br></a><small>دانش‌آموزان با "برنامه‌نویسی" همدیگر به یکدیگر دستور میدهند تصاویری را رسم کنند و به این ترتیب برخی مفاهیم اساسی برنامه‌نویسی را به شکلی در دسترس و جالب تجربه کنند. این کلاس به این شکل آغاز میشود که به دانش‌آموزان گفته می‌شود با کمک نمادها به یکدیگر دستور دهند تا مربعهای رنگی روی کاغذ رسم بکشند تا بتوانند تصویری موجود را دوباره‌سازی کنند. اگر زمان موجود باشد میتوان درس را با نمایش تصاویری که دانش‌آموزان خود خلق کرده‌اند خاتمه داد.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - برنامه‌نویسی رله<br></a><small>این فعالیت با درس کوتاهی درباره اشکالزدایی از برنامه و پشتکار در برنامه‌نویسی شروع میشود، بعد دانش‌آموزان در تیمهایی تقسیم شده و هر تیم سعی میکند نوبتی و در زمان کمتر با کمک دیگران خط به خط دستورات برنامه‌ای را بنویسد.</td><td>توالی دستورات برنامه</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - جملات شرطی با کمک کارتها</a><br><small>این درس نشان میدهد چطور جملات شرطی را میتوان بکار بست تا برنامه با توجه به اطلاعات خاصی کار کند. وقتی برنامه می‌نویسیم همیشه تمام اطلاعات در دسترس ما نیست. گاهی اوقات در موقعیتی میخواهید کاری جز موقعیت دیگر اجرا کنید حتی اگر ندانید وقتی کد برنامه اجرا میشود کدام موقعیت برقرار خواهد بود. اینجاست که شرطها وارد برنامه می‌شوند. شرطها با توجه به اطلاعاتی که در زمان اجرای کد شما صحیح هستند به کامپیوتر اجازه تصمیم‌گیری را میدهند.+</td><td>شرطها</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">دوره E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - ترانه‌نویسیSongwriting</a><br><small>یکی از شگفت‌انگیزترین ساختارهای دنیای علوم کامپیوتری تابع است. توابع (گاهی رویه‌ها خوانده میشوند) برنامه‌های کوچکی هستند که میتوان بارها و بارها آنها را داخل برنامه‌ای بزرگتر استفاده کرد. این درس به دانش‌آموزان کمک میکند به شکل حسی درک کنند چرا ترکیب بخشهایی از کد و تولید تابع میتواند مفید فایده باشد.</td><td>توابع</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - طراحی برای دسترسی‌پذیری</a><br><small>در این درس دانش‌آموزان در مورد دسترسی‌پذیری و ارزش همراهی با کمک طوفان فکری و طراحی راه‌حلهای در دسترس در جهت تولید اپهای فرضی آموزش میبینند.</td><td>تاثیرات محاسبه</td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - اشتراک‌گذاری دیجیتال</a><br><i>*لوازم موردنیاز: تلفن هوشمند یا تبلت</i><br><small>این درس به منظور کمک به دانش‌آموزان در درک چالشها و منافع احترام به حق چاپ و مالکیت و استفاده از خلاقیت بویژه در محیطهای دیجیتال، توسط تیم علوم کامپیوتری فراهم شده است. دانش‌آموزان بعنوان بخش مهمی از اخلاق دیجیتال شهروندی تشویق به رعایت حقوق هنرمندان میشوند.</td><td>شهروندی دیجیتال</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">دوره F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -داستانهای فضاهای خالی</a><br><i>*لوازم موردنیاز: 6 پاکت(همچنین:کاغذ یا مقوای یادداشت، تا شده از وسط)</i><br><small>دانش‌آموزان از داستانهای "جای خالی را پر کن" (مشابه بازی مد لیبز) استفاده میکنند تا بفهمند رایانه چطور داده‌های ورودی از طرف کاربر را ذخیره میکند و بعد آن ورودیها را زمان اجرای برنامه استفاده میکند.
   </td><td>متغیرها</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - برای حلقه‌های جذاب</a><br><i>*لوازم موردنیاز: تاس (3 تاس/گروه‌های 2 تا 4 تایی)</i><br><small>میدانیم حلقه‌ها اجازه میدهند دستورهایی را بارها و بارها اجرا کنیم. اما حالا میخواهیم به حلقه‌هایی بپردازیم که ساختارهایی علاوه بر ساختارهای معمول حلقه‌ها دارند. این ساختارهای جدید به دانش‌آموزان کمک میکنند کدی را تولید کنند که نیرومندتر و پویاتر است.</td><td>برای حلقه‌ها</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - اینترنت</a><br><small>با وجود اینکه افراد زیادی هر روز از اینترنت استفاده میکنند تعداد کمی نحوه کار آنرا میدانند. در این درس دانش‌آموزان وانمود میکنند اطلاعاتی هستند که در اینترنت در حال حرکتند و در این حین در مورد اتصالات، آدرس سامانه‌ها، آدرسهای اینترنتی و سرویسهای نام دامنه می‌آموزند.</td><td>داده</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## دروس بی‌رایانه‌ی مکمل

دروس بعدی با توجه به مفهوم و دامنه کارکردشان مرتب شده‌اند و در دوره‌های قبلی آموزش اصول مقدماتی علوم کامپیوتر ما هم موجودند. منابع اضافی که میتوانند برای برنامه‌ریزی شما در مورد تحصیل این دروس بکارتان بیاییند اینها هستند:
* [راهنمای برنامه آموزشی دوره‌های A-F سال 2019](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [لیست لوازم لازم برای طی دوره‌های A-F سال 2019](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [فهرستهای دوره‌های سال 2019 آمازون](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [راهنمای برنامه آموزشی دوره‌های A-F سال 2018](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [راهنمای برنامه آموزشی دوره‌های A-F سال 2017 (نسخه 2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [راهنمای برنامه آموزشی دوره‌های 1-4](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [فلش کارتهای CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>موضوع</th>
    <th width=65%><center><big>پلن درسی <br>
<small> پلن درسی شامل منابع اضافی هم میشود (نظیر اسلایدها، ویدئوها، کلید سوالات و غیره).
</th>
    <th><center><big>منابع</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>شهروندی دیجیتال</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">جمع‌سپاری</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*آموزش گروه Common Sense <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">برنامه آموزشی کامل شهروندی دیجیتال</a> دارد که فعالیتهای بدون رایانه‌ی زیادی را شمال میشوند.</td>
    <tr>
    <th id=t07>دودویی</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">تصاویر دودویی </a><br><small>*لوازم موردنیاز:انتخابی - گروه‌هایی از آیتمهای مختلف برای نمایش به دانش‌آموزان. با وجود اینکه بسیاری فکر میکنند دودویی لزوماً یعنی صفر و یک، به دانش‌آموزان یاد داده میشود اطلاعات را میتوان به شکلهای دودویی متفاوتی نمایش داد. این درس پا را فراتر گذاشته و به نشان میدهد رایانه چطور اطلاعات پیچیده‌تر (مثل تصاویر و رنگها) را به شکل دودویی ذخیره میکند.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>حلقه‌ها</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">دوستان حلقه‌ای رباتیک من</a><br><small>در اینجا، دانش‌آموزان سادگی و کاربرد حلقه‌ها را با "برنامه‌نویسی" دوستانشان با کمک زبان "برنامه دوستان رباتیک من" فرا میگیرند. وقتی حلقه‌ها به دانش‌آموزان ارائه شدند، آنها متوجه خواهند شد میتوان با حلقه‌ها ساختارهای بزرگتر را با سرعت بیشتری تولید کرد.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>توابع</a></a></th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">نورگیرهای تابعی</a><br><small>در این درس، دانش‌آموزان با کمک سیم، مهره و یک آویز مخصوص یک نورگیر میسازند. دانش‌آموزان چند مرحله تکرارشونده را دنبال میکنند و بعد در مورد مجموعه "مهارتهایی" که چندبار تکرار کرده‌اند از آنها سوال پرسیده می‌شود. بمحض آنکه مهارتهای تکراری مشخص شدند، آن مهارتها از برنامه اصلی صدا زده شده و کل پروسه زیبای تولید روی یک برگ کاغذ ثبت خواهد شد. برنامه نهایی با توجه به نوع سیمها، مهره‌ها، و آویزها طوری طراحی میشود که به کار تمام کلاس بیاید. برای اینکه این اتفاق بیفتد لازم است تا دانش‌آموزان جزئیات لوازم مصرفی خود را حذف کرده و برای مواد مصرفی خود از مفاهیم مبهم استفاده کنند. اینجا محل مناسبی برای نوشتن مقدمه‌ای جالب درباره متغیرهاست.</td><td><a href="https://youtu.be/d1MdyeXy0v0">ویدئوی درس</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">درس را در عمل ببینید</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">کلید سوالات فعالیت <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">کلید سوالات ارزیابی</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">ترانه‌نویسی همراه پارامترها</a><br><small>یکی از بارزترین ساختارهای دنیای علوم کامپیوتر تابع است. توابع (گاهی رویه‌ها خوانده میشوند) برنامه‌های کوچکی هستند که میتوان بارها و بارها آنها را داخل برنامه‌ای بزرگتر استفاده کرد. این درس به دانش‌آموزان کمک میکند به شکل حسی درک کنند چرا ترکیب چند تکه کد به شکل تابع کاری سودمند است، و چگونه میتوان این ساختارها را حتی زمانی که تکه‌های کد باهم کمی تفاوت دارند هم بکار گرفت.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>الگوریتمها</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">مسابقه تاس ریختن</a><br><small>در این درس دانش‌آموزان مفاهیم الگوریتمها را با کمک بازی تاس ریختن به فعالیتهای دنیای واقعی ارتباط میدهند. هدف در اینجا آغاز ایجاد مهارتهایی برای ترجمه موقعیتهای دنیای واقعی به سناریوهای آنلاین و برعکس است.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">دوستان رباتیک من</a><br><small>دانش‌آموزان شما با استفاده از نمادهای از پیش تعریف شده یاد میگیرند چگونه میتوانند به همدیگر کمک کنند تا بدون هرگونه دستور کلامی فعالیتهای خاصی را انجام دهند. این بخش به دانش‌آموزان می‌آموزد ارتباط بین نمادها و اعمال را درک کنند و تفاوت بین الگوریتم و برنامه و مهارت ارزشمند اشکالزدایی از برنامه‌ها را بیاموزند.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">الگوریتمهای دنیای واقعی: هواپیماهای کاغذی</a><br><small>در این درس دانش‌آموزان مفهوم الگوریتم را به فعالیتهای روزمره نسبت میدهند. دانش‌آموزان بعد از بحث درباره الگوریتمها با کمک الگوریتم هواپیماهای کاغذی خواهند ساخت. هدف ایجاد مهارتهایی برای ترجمه موقعیتهای دنیای واقعی به سناریوهای آنلاین و برعکس است.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">الگوریتمهای دنیای واقعی: کاشت دانه گیاهان</a><br><small>در این درس دانش‌آموزان با کاشت دانه گیاهان مفهوم الگوریتم را با فعالیتهای روزمره دنیای واقعی ارتباط میدهند. هدف در اینجا ایجاد مهارتهایی برای ترجمه موقعیتهای دنیای واقعی به سناریوهای آنلاین و برعکس است.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">تنگرام (بازی چینی)</a><br><small>در این درس برخی نکات مهم درباره الگوریتمها را شاهد خواهیم بود. تا زمانی که الگوریتم را ساده نگهدارید راه‌های زیادی برای استفاده از آن وجود خواهد داشت. با این حال، اگر میخواهید اطمینان یابید پروسه اجرایی همه نتیجه یکسانی داشته باشد باید الگوریتمتان جزئیات بیشتری داشته باشد. دانش‌آموزان در حین بازی با تنگرام تفاوت بین الگوریت عمومی و الگوریتم همراه با جزئیات را درک خواهند کرد.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">تفکر محاسباتی</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">تفکر محاسباتی</a><br><small>برای این فعالیت راهنمایی ارائه نشده است. به جای آن دانش‌آموزان برای اینکه بفهمند نحوه بازی به چه صورت است مثالهایی که بازیگران خیالی اجرا کرده‌اند را استفاده خواهند کرد. این درس به دانش‌آموزان فرصت این را میدهد تا چهار عمل تفکر محاسباتی را در خلال یک فعالیت ترکیبی تمرین کنند (تجریه یا فاکتورگیری، تطابق الگو، انتزاع و الگوریتمها).</td> <td><a href="https://youtu.be/TlAaklrolA0">ویدئوی درس</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">درس را عملی مشاهده کنید</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">کلید پاسخ فعالیت </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">تفکر محاسباتی با هیولاها</a><br><small>دانش‌آموزان تنها با کمک کاغذ و ماژیک چهار مرحله تفکر محاسباتی را یاد میگیرند. بعد از یک مقدمه‌ی کوتاه دانش‌آموزان به گروه‌هایی تقسیم میشوند و سعی میکنند دیگران را هدایت کنند تا هیولایی خاص را نقاشی کنند (از کاتالوگی از هیولاهای از پیش انتخاب شده). کل فعالیت باید به بخشهایی تقسیم شود و بعد تیمها تمام هیولاهای کاتالوگ را برای یافتن الگوها و جزئیات انتزاعی مشابه در هیولاها زیر و رو میکنند و بعد آن اطلاعات را برای ایجاد الگوریتمهایی (هدایتگرهایی) جهت کمک به تیمهای دیگر برای کشیدن هیولایی خاص بکار میگیرند. سپس تیمها الگوریتمهایشان را باهم عوض میکنند و بر اساس آنچه الگوریتم مشخص کرده هیولا را رسم میکنند. آیا نقاشی همانی شد که تیم اصلی دوست داشت بشود؟</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">حشرات بی خال</a><br><small>این درس کمک میکند دانش‌آموزان مراحل دیباگ (رفع اشکال برنامه) را یاد بگیرند. دانش‌آموزان جمله‌ی جادویی "چه اتفاقی افتاد؟ قرار بود چه اتفاقی بیفتد؟ و این اتفاق به شما چه چیزی میگوید؟" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>پافشاری</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">پایه‌ریزی</a><br><small>مسائل تازه و حل نشده اغلب راه‌حل مشکلی دارند. اگر بخواهیم شانس این را داشته باشیم که چیزی خلاقانه، کاربردی و هوشمندانه خلق کنیم، نیاز به پشتکار در حمله به مسائل مشکل داریم حتی اگر پیش از موفقیت چندبار شکست بخوریم. در این درس، دانش‌آموزان ساختمانی را با کمک مواد معمولی خواهند ساخت. مقاومت ساختمان با قرار دادن یک کتاب درسی روی آن برای بیش از ده ثانیه تست خواهد شد. بیشتر دانش‌آموزان بار اول در حل این مسئله موفق نخواهند شد، اما مهم این است که همه تلاش خود را کنند.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">استیوی و پروژه بزرگ</a><br><small>وقتی دانش‌آموزان در زمان پاسخ به یک سوال یا کار روی پروژه به مانعی برخورد میکنند امکان دلسرد شدن و رها کردن مسئله از سوی آنها وجود دارد. این درس دانش‌آموزان را با این نکته که دلسردی بخش مهمی از فرآیند یادگیریست آشنا میسازد. در اینجا دلسردی به جای نشانه‌ی شکست، گامی در پردازش خلاقانه محسوب گردیده است. این درس را میتوان در یک یا دو جلسه کلاسی اجرا کرد. اگر زمان بیشتری دارید میتوانید ساختمانتان را مستحکمتر کنید و یا فعالیت فرار مرمر را به شکلی جدید انجام دهید.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>انتزاع</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">بی قیدهای دیوانه</a><br><small>انتزاع یکی از مهمترین مهارتهاییست که یک استاد کامپیوتر باید بداند. این کار مسئله را ساده کرده و جلوی تکرارهای غیر ضروری را میگیرد. یک کدنویس خوب تقریباً هر زمان که برنامه‌ای خلق میکند از انتزاع در آن استفاده میکند. این فعالیت به دانش‌آموزان این امکان را میدهد که داستانها را بر اساس تفاوتهای آنها باهم مورد تحلیل قرار دهند تا بتوانند آنها را از هم جدا کنند. آن داستانهای انتزاعی قالبهایی برای داستانهای جالب و دیوانه‌وار بعدی خواهند بود.</td><td><a href="https://youtu.be/TctGRrUdkcc">ویدئوی درس</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">پاسخنامه فعالیت</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">پاسخنامه ارزیابی</a></td>
  </tr>
<tr>
   <th id=t07>متغیرها</th>
     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">متغیرهای مربوط به پاکت</a><br><i>*مواد لازم: پاکت (1-4/در دسته‌های 2-4 تایی)</i><br><small>متغیرها محل نوشتن مقادیری نظیر تعداد واژه‌ها هستند. متغیرها آزادی عمل زیادی در برنامه‌نویسی در اختیار ما قرار می‌دهند. دانشمندان کامپیوتر به جای اینکه یک عبارت را بارها و بارها تایپ کنند یا عددی مبهم را حفظ کنند، میتوانند از متغیرها برای ارجاع به آنها استفاده کنند. این درس کمک میکند توضیح دهیم متغیرهایی چیستند و چگونه میتوانیم به شکلهای مختلف از آنها استفاده کنیم. فهم ایده متغیرها ساده‌ نیست، بنابراین توصیه میکنیم زمان زیادی را برای بحث درباره متغیرها در پایان درس اختصاص دهید.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

{{ visit_partial_event_logger }}
