---
title: Podstawy informatyki bez komputera
video_player: true
theme: responsive
---

# Podstawy informatyki bez komputera

Przygotowaliśmy listę wszystkich naszych lekcji bez komputera, które możesz wykorzystać w swojej klasie. Teraz możesz uczyć podstaw informatyki, niezależnie od tego, czy masz komputery w klasie, czy nie!
<br>
<div class="col-50">
Lekcje, podczas których uczniowie nie pracują na komputerze, nazywamy „bez komputera” (unplugged). Uczniowie często pracują z ołówkiem i papierem lub fizycznymi manipulacjami.  Są to celowo umieszczone możliwości kinestetyczne, które pomagają uczniom przetrawić skomplikowane pomysły w sposób, który odnosi się do ich własnego życia. <br><br>
Lekcje bez komputera są szczególnie przydatne do budowania i utrzymywania środowiska w klasie opartego na współpracy, a także stanowią przydatne doświadczenia, do których można się odnieść przy wprowadzaniu bardziej abstrakcyjnych pojęć. Każde z tych zajęć można wykorzystać samodzielnie lub z innymi lekcjami informatyki na temat pokrewnych pojęć.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;W wieku powyżej 4 lat, tylko po angielsku
</div>

<div style="clear: both;"></div>

***
## Lekcje bez komputera w ramach kursu Podstawy informatyki 2021-22
Następujące lekcje można znaleźć w <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">Podstawy informatyki 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Kurs</th>
    <th><center><big> Plan lekcji</th> 
    <th width=10%><center><big>Pojęcia</th>
    <th width=20%><center><big>Film</th>
     <tr>
    <th rowspan="3" id="t01">Kurs A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - Szczęśliwe mapy</a><br><small>Ta lekcja bez komputerów łączy zespoły, które mają proste zadanie: doprowadzić "flurb" do owocu. Uczniowie będą ćwiczyć pisanie dokładnych instrukcji, pracując nad tłumaczeniem instrukcji na dostarczone symbole. Jeśli pojawią się problemy w kodzie, uczniowie powinni również współpracować, by wykryć błędy i utworzyć rozwiązania.</td><td>Sekwencjonowanie</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
   </tr>
   <tr>
     <td width=40%><a href="https://curriculum.code.org/csf-20/coursea/7/">A.7 – Wesołe pętle</a><br><small>Ta aktywność powraca do Szczęśliwych Map. Tym razem uczniowie będą rozwiązywać większe, dłuższe łamigłówki za pomocą swoich kodów, co wskaże im użyteczność struktur, które umożliwiają łatwiej pisać dłuższy kod.</td><td>Pętle</td> <td><img src="/images/a7.png" width="90%"></td>
   <tr>
     <td width=40%><a href="https://curriculum.code.org/csf-20/coursea/11/">A.11 — Wielkie zdarzenie Jr.</a><br><small >Zdarzenia to świetny sposób na urozmaicenie wstępnie napisanego algorytmu. Czasami chcesz, aby Twój program był w stanie reagować na użytkownika, gdy on tego chce. Po to są zdarzenia.</td><td>Zdarzenia</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
   </tr>
        <tr>
     <th rowspan="3" id="t02">Kurs B</th>
     <td><a href="https://curriculum.code.org/csf-20/courseb/2/">B.2 – Przenieś, przenieś</a><br><small>Ta lekcja służy mentalnemu przygotowaniu uczniów do ćwiczeń z kodowania, które napotkają podczas tego kursu. W małych zespołach uczniowie będą wykorzystywać aktywności fizyczne, aby zaprogramować swoich kolegów z klasy, aby ostrożnie przechodzili z miejsca na miejsce, aż do osiągnięcia celu.</td><td>Sekwencjonowanie</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }} </td>
   </tr>
   <tr>
     <td><a href="https://curriculum.code.org/csf-20/courseb/6/">B.6 — Zapętla się</a><br><small>Gdy zaczynamy pisać dłuższe i ciekawsze programy, nasz kod często zawiera dużo powtórzeń. Na tej lekcji uczniowie dowiedzą się, jak można wykorzystać pętle do łatwiejszego zapisywania instrukcji, które mają dużo powtórzeń, patrząc na powtarzające się ruchy w tańcu.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
   <tr>
     <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 – Odpowiednia aplikacja</a><br><small>Na tej lekcji uczniowie poznają, jak informatyka może pomagać ludziom w życiu. Po pierwsze, uczniowie wczuwają się w kilku fikcyjnych użytkowników smartfonów, aby pomóc im znaleźć „właściwą aplikację”, która odpowiada ich potrzebom. Następnie uczniowie ćwiczą empatię i kreatywność, aby naszkicować własną aplikację na smartfony, która odpowiada na potrzeby jednego dodatkowego użytkownika.</td><td>Wpływ informatyki</td> <td><img src="/images/b10.png " width="90%"></td>
   </tr>
        <tr>
     <th rowspan="4" id="t03">Kurs C</th>
     <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 – Moi robotyczni przyjaciele Jr.</a><br><i>*Przybory: Plastikowe kubki (10/grupa po 2-3)</i><br><small>Używając zestawu symboli zamiast kodu, uczniowie zaprojektują algorytmy nakazujące „robotowi” układanie kubków w różne wzory. Uczniowie na zmianę uczestniczą jako robot, odpowiadając tylko na algorytm zdefiniowany przez ich rówieśników. Ten segment uczy uczniów związku między symbolami a działaniami, różnicy między algorytmem a programem oraz cennej umiejętności debugowania.</td><td>Sekwencjonowanie</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
   </tr>
   <tr>
    <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 – Mój Loopy Robotic Friend Jr</a><br><i>*Przybory: Kubki papierowe (20/grupę 4)</i><br><small>Przegląd
Opierając się na początkowej aktywności „Moi Robotyczni Przyjaciele”, uczniowie zajmują się większymi i bardziej złożonymi projektami. Aby zaprogramować swoje „roboty” do ukończenia tych większych projektów, uczniowie będą musieli zidentyfikować powtarzające się układy w swoich instrukcjach, które mogą być zastąpione pętlą.</td><td>Pętle</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
   </tr> <tr>
    <td><a href="https://curriculum.code.org/csf-20/coursec/14/">C.11 — Wielkie zdarzenie</a><br><small>Uczniowie wkrótce dowiedzą się, że zdarzenia to świetny sposób na zwiększenie elastyczności wstępnie napisanego algorytmu. Czasami chcesz, aby Twój program był w stanie reagować na użytkownika, gdy on tego chce. Zdarzenia mogą uczynić Twój program bardziej interesującym i interaktywnym.</td><td>Zdarzenia</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr> 
       </tr> 
     <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - Binarne bransoletki</a><br><i>*Dostawy: Markery. Opcjonalnie – 18 czarnych/18 białych koralików, 1 czyścik do fajek na ucznia</i><br><small>Binarność jest niezwykle ważna w świecie komputerów. Większość dzisiejszych komputerów przechowuje różnego rodzaju informacje w postaci binarnej. Ta lekcja pomaga pokazać, jak można wziąć coś z prawdziwego życia i przełożyć na serię włączeń i wyłączeń.</td><td>Binarny</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Kurs D</th>
    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 — Programowanie na papierze milimetrowym<br></a><small>Przez „programowanie” jednego, by rysował obrazki, uczniowie mają okazję poznać niektóre podstawowe pojęcia programowania w zabawny i przystępny sposób. Zajęcia rozpoczną się od instruowania się uczniów nawzajem, jak pokolorować kwadraty na papierze milimetrowym, aby odtworzyć istniejący obraz. Jeśli jest czas, lekcja może zakończyć się obrazami, które uczniowie tworzą sami.</td><td>Sekwencjonowanie</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
   </tr>
   <tr>
     <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - Programowanie przekaźników<br></a><small>Te zajęcia rozpoczynają się krótką lekcją na temat debugowania i wytrwałości, a następnie szybko przechodzi w wyścig z czasem, gdy uczniowie dzielą się na zespoły i pracują razem, aby napisać program instrukcja po instrukcji.</td><td>Sekwencjonowanie</td><td >{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
       </tr>
   <tr>
     <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 – Warunki z kartami</a><br><small>Ta lekcja pokazuje, jak instrukcje warunkowe mogą być użyte do dostosowania programu do określonych informacji. Nie zawsze mamy wszystkie informacje, których potrzebujemy podczas pisania programu. Czasami będziesz chciał zrobić coś innego w jednej sytuacji niż w innej, nawet jeśli nie wiesz, jaka sytuacja będzie prawdziwa po uruchomieniu kodu. Tu właśnie wkraczają instrukcje warunkowe. Warunki umożliwiają komputerowi podjęcie decyzji na podstawie informacji, które są prawdziwe za każdym razem, gdy uruchamiany jest kod.+</td><td>Warunki</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

     </tr>
          <tr>
     <th rowspan="3" id="t05">Kurs E</th>
     <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 – Udostępnianie cyfrowe</a><br><i>*Przybory: smartfon lub tablet</i><br><small>Wypożyczona do Podstaw informatyki przez zespół z Prawa autorskiego i kreatywności, ta lekcja ma pomóc uczniom zrozumieć wyzwania i korzyści płynące z poszanowania własności i praw autorskich, szczególnie w środowiskach cyfrowych. Należy zachęcać uczniów do poszanowania praw artystów jako ważnej części bycia etycznym obywatelem cyfrowym.</td><td>Cyfrowe obywatelstwo</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
   </tr>
   <tr>
     <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - Pisanie piosenek</a><br><small>Jedną z najwspanialszych struktur w świecie informatyki jest funkcja. Funkcje (czasami nazywane procedurami) to miniprogramy, których możesz używać wielokrotnie w swoim większym programie. Ta lekcja pomoże uczniom intuicyjnie zrozumieć, dlaczego łączenie fragmentów kodu w funkcje może być tak pomocną praktyką.</td><td>Funkcje</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 – Projektowanie pod kątem ułatwień dostępu</a><br><small>Na tej lekcji uczniowie dowiedzą się o dostępności i wartości empatii poprzez burzę mózgów i projektowanie dostępnych rozwiązań dla hipotetycznych aplikacji.</td><td>Wpływ informatyki</td><td><img src="/images/e18.png" width ="90%"></td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Kurs F</th>
           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 – Puste historie kosmiczne</a><br><i>*Przybory: 6 kopert (również: papier lub fiszki, złożone na pół)</i><br><small>Uczniowie wykorzystają historie do wypełniania pustych miejsc (podobne do Mad Libs®) jako kontekstu do zrozumienia, jak komputery i przechowują dane od użytkownika, a następnie używają ich później podczas uruchamiania programu.
   </td><td>Zmienne</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>  
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - Zabawa w pętle</a><br><i>*Zapasy: kości (3 kości na grupę po 2–4 uczniów)</i><br><small>Wiemy, że pętle pozwalają nam robić rzeczy w kółko , ale teraz nauczymy się używać pętli, które mają wbudowane dodatkowe struktury. Te nowe struktury pozwolą uczniom tworzyć kod, który jest bardziej wydajny i dynamiczny.</td><td>Pętle "dla"</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - Internet</a><br><small>Mimo że wiele osób korzysta z Internetu na co dzień, niewiele osób wie, jak on działa. Podczas tej lekcji uczniowie będą udawać, że przepływają przez Internet, cały czas ucząc się o połączeniach, adresach URL, adresach IP i DNS.</td><td>Dane</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## Dodatkowe lekcje bez komputera

Poniższe lekcje są zorganizowane według pojęć i można je znaleźć we wcześniejszych wersjach naszych kursów Podstawy informatyki. Dodatkowe zasoby, z których możesz skorzystać, gdy planujesz skorzystać z tych lekcji, obejmują:
* [2019 Kurs A-F Przewodnik po kursie](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Kurs A-F Lista dostaw](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) |F [2019 Listy kursów Amazon](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Kurs A-F Przewodnik po programie nauczania](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Kurs A-F Przewodnik po programie nauczania (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Kurs 1-4 Przewodnik po programie nauczania](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF Fiszki](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Pomysł</th>
     <th width=65%><center><big>Plan lekcji <br>
<small> Plan lekcji zawiera dodatkowe zasoby (slajdy, filmy, klucze odpowiedzi itp.).
</th>
     <th><center><big>Zasoby</th>
      <tr>
     <th rowspan="2" id=t07 width=5%>Obywatelstwo cyfrowe</th>
     <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</ td>
   </tr>
   <tr>
       <td colspan="2">*Popularna edukacja obejmuje <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">pełny program nauczania obywatelstwa cyfrowego</a>, w tym wiele działań bez komputera.</td>
     <tr>
     <th id=t07>Sekwencjonowanie</th>
         <td><a href="https://curriculum.code.org/csf-20/coursec/16/">Binarne obrazy </a><br><small>*Dostawy: Opcjonalnie — grupowanie przeciwległych elementów do wyświetlenia uczniom.</td> Chociaż wiele osób myśli o układzie binarnym głównie jako zerach i jedynkach, uczniom zostaną przedstawione pomysły, jak informacje mogą być reprezentowane na wiele różnych binarnych sposobów. Ta lekcja idzie o krok dalej, ponieważ pokazuje, jak komputer może przechowywać jeszcze bardziej złożone informacje (takie, jak obrazy i kolory) również w postaci binarnej.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
  </tr>
     <tr>
     <th id=t07>Pętle</th>
         <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Mój Loopy Robotic Friends</a><br><small>Tutaj uczniowie uczą się prostoty i użyteczności pętli, „programując” swoich znajomych za pomocą języka z „My Robotic Friends” Po wprowadzeniu pętli uczniowie przekonają się, że mogą szybciej budować większe programy.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>Funkcje</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">Funkcjonalni łapacze słońca</a><br><small>Na tej lekcji uczniowie wykonają łapacz słońca ze sznurka, koralików i specjalnej zawieszki. Uczniowie wykonają serię powtarzających się kroków, a następnie zostaną poproszeni o zidentyfikowanie pewnych zestawów „umiejętności”, które są powielane kilka razy. Gdy te umiejętności zostaną zdefiniowane, zostaną wywołane z głównego programu, a cały piękny proces tworzenia zostanie zapisany na jednej kartce papieru. Ostateczny program będzie skierowany do całej klasy, bez względu na ich rodzaj sznurka, koralików i zawieszek. Aby skutecznie na to pozwolić, uczniowie będą musieli „wyabstrahować” szczegóły swoich konkretnych materiałów i stworzyć niejasne terminy dotyczące zaopatrzenia danej osoby. Takie użycie ogólnych symboli zastępczych jest wspaniałym wprowadzeniem do zmiennych.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Film z lekcji</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Zobacz trwającą lekcję</a><br><a href="https://www.code.org/curriculum/course3/4/Key- Activity4-FunctionalSuncatchers.pdf">Klucz odpowiedzi do zadania <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Klucz odpowiedzi do sprawdzianu</a></td >
   </tr>
   <tr>
     <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Pisanie piosenek z parametrami</a><br><small>Jedną z najwspanialszych struktur w świecie informatyki jest funkcja. Funkcje (czasami nazywane procedurami) to miniprogramy, których możesz używać wielokrotnie w swoim większym programie. Ta lekcja pomoże uczniom intuicyjnie zrozumieć, dlaczego łączenie fragmentów kodu w funkcje jest tak przydatną praktyką i jak mogą używać tych struktur, nawet jeśli fragmenty kodu są nieco inne.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>Algorytmy</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Dice Race</a><br><small>Podczas tej lekcji uczniowie powiążą pojęcie algorytmów z rzeczywistymi aktywnościami, grając w grę Dice Race. Celem tutaj jest rozpoczęcie budowania umiejętności przekładania rzeczywistych sytuacji na scenariusze online i odwrotnie.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
   </tr>
   <tr>
     <td><a href="https://curriculum.code.org/csf-18/coursee/1">Moi znajomi od robotów</a><br><small>Używając wstępnie zdefiniowanego klucza, Twoi uczniowie dowiedzą się, jak wspierać się nawzajem, aby wykonać określone zadania bez używania poleceń słownych. Ten segment uczy uczniów związku między symbolami a działaniami, różnicy między algorytmem a programem oraz cennej umiejętności debugowania.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
   </tr>
     <tr>
     <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Algorytmy z życia wzięte: papierowe samoloty</a><br><small>Podczas tej lekcji uczniowie będą odnosić pojęcia związane z algorytmami do codziennych aktywności. Po omówieniu algorytmów, uczniowie wykonają papierowe samoloty według algorytmu. Celem tutaj jest rozpoczęcie budowania umiejętności przekładania sytuacji ze świata rzeczywistego na scenariusze online i odwrotnie.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
   </tr>
     <tr>
     <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Algorytmy z życia codziennego: zasadź ziarno</a><br><small>Podczas tej lekcji uczniowie powiążą pojęcie algorytmów z codziennymi, rzeczywistymi czynnościami, zasiewając prawdziwe ziarna. Celem tutaj jest rozpoczęcie budowania umiejętności przekładania rzeczywistych sytuacji na scenariusze online i odwrotnie.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
   </tr>
     <tr>
     <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangramy</a><br><small>Ta lekcja przekazuje nam coś ważnego na temat algorytmów. Tak długo, jak utrzymujesz algorytm, by był prosty, istnieje wiele sposobów jego użycia. Jeśli jednak chcesz mieć pewność, że wszyscy uzyskają ten sam wynik, Twój algorytm potrzebuje więcej szczegółów. Uczniowie poznają różnicę między szczegółowym a ogólnym algorytmem podczas zabawy z tangramami.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
   </tr>
   </tr>
     <tr>
   </tr>
     </tr>
      <th id=t07 rowspan="4">Myślenie komputacyjne</th>
         <tr>
         <td><a href="https://code.org/curriculum/course3/1/Teacher">Myślenie komputacyjne</a><br><small>W przypadku tego ćwiczenia nie podano żadnych instrukcji. Zamiast tego uczniowie wykorzystają przykłady tego, co zrobili wyimaginowani gracze, aby dowiedzieć się, jak grać w tę grę. Ta lekcja daje uczniom możliwość ćwiczenia czterech sztuk myślenia komputacyjnego (dekompozycji, dopasowywania wzorca, abstrakcji i algorytmów) w jednym spójnym działaniu.</td> <td><a href="https://youtu.be/ TlAaklrolA0">Film o lekcji</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Zobacz lekcję w działaniu</a><br><a href=" https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Klucz odpowiedzi </a></td>
         </tr>
         <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Myślenie komputacyjne z potworami</a><br><small>Z samym papierem i markerami uczniowie poznają cztery kroki myślenia komputacyjnego. Po krótkim wprowadzeniu uczniowie powinni zostać podzieleni na grupy, w których będą musieli stworzyć innym uczniom wskazówki, jak narysować konkretnego potwora (z katalogu wcześniej wybranych potworów). Całe zadanie należy rozłożyć, a następnie zespoły przeanalizują wszystkie potwory w katalogu pod kątem wzorców, wyabstrahują podobne szczegóły z potworów, a następnie wykorzystają te informacje do stworzenia algorytmu (wskazówek) dla innej drużyny, aby narysowała określonego potwora. Zespoły następnie zamieniają algorytmy z inną grupą i rysują potwora na podstawie tego, co wskazuje ten algorytm. Czy rysunek jest zgodny z zamierzeniami pierwotnego zespołu?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
     <tr>
     <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Niewykryte błędy</a><br><small>Ta lekcja poprowadzi uczniów przez kolejne etapy debugowania . Uczniowie poznają mantrę: „Co się stało? Co miało się wydarzyć? Co ci to mówi?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>Wytrwałość</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Budowanie podstaw</a><br><small>Nowe i nierozwiązane problemy są często dość trudne. Jeśli chcemy mieć jakąkolwiek szansę na zrobienie czegoś kreatywnego, użytecznego i mądrego, musimy być gotowi do zaatakowania trudnych problemów, nawet jeśli oznacza to porażkę kilka razy, zanim nam się uda. Podczas tej lekcji uczniowie będą budować strukturę z popularnych materiałów. Konstrukcja zostanie przetestowana pod kątem zdolności do trzymania podręcznika przez ponad dziesięć sekund. Większość uczniów nie zrozumie tego dobrze za pierwszym razem, ale ważne jest, aby starali się i próbowali dalej.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
   </tr>
   <tr>
  <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie i wielki projekt</a><br><small>Gdy uczniowie napotkają barierę odpowiadając na pytanie lub pracując nad projektem, tak łatwo jest im się frustrować i rezygnować. Ta lekcja wprowadzi uczniów w ideę, że frustracja może być ważną częścią nauki. Tutaj frustracja jest przedstawiana jako krok w procesie twórczym, a nie oznaka porażki. Tę lekcję można przeprowadzić w ciągu jednej lub dwóch sesji klasowych. Jeśli masz więcej czasu, nie krępuj się narysować fazy budowania i rewizji aktywności Marble Run.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
   </tr>
      <th id=t07>Abstrakcja</th>
     <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Abstrakcja jest jedną z najważniejszych umiejętności rozumowania i rozumienia w informatyce. Upraszcza problemy i zapobiega niepotrzebnym powtórzeniom. Dobry programista używa abstrakcji prawie za każdym razem, gdy tworzy program. Ta aktywność sprawi, że Twoi uczniowie przeanalizują historie pod kątem różnic, aby mogli je wyabstrahować. Te abstrakcyjne historie stają się szablonami zabawnych i szalonych nowych historii.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Film z lekcjami</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Klucz odpowiedzi na zadania</a><br><a href="https://www.code.org/curriculum /course4/5/Key-Assessment5-MadGlibs.pdf">Klucz odpowiedzi na ocenę </a></td>
   </tr>
<tr>
    <th id=t07>Zmienne</th>
​ <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Zmienne kopertowe</a><br><i>*Przybory: Koperty (1-4/grupę 2-4)</i><br><small>Zmienne są używane jako symbole zastępcze dla wartości, takich jak liczby lub słowa. Zmienne umożliwiają dużą swobodę w programowaniu. Zamiast wielokrotnie wpisywać frazę lub zapamiętywać różne liczby, informatycy używają zmiennych, aby się do nich odwoływać. Ta lekcja pomaga wyjaśnić, czym są zmienne i jak możemy ich używać na wiele różnych sposobów. Pojęcie zmiennych nie jest łatwym do zrozumienia pojęciem, dlatego zalecamy pozostawienie dużo czasu na dyskusję pod koniec lekcji.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

