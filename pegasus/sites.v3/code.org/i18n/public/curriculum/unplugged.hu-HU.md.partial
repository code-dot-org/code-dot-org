---
title: Informatika alapjai, unplugged
video_player: true
theme: responsive
---

# Informatika alapjai, unplugged

Összeállítottunk egy listát az összes unplugged leckénkről, amelyeket felhasználhatsz az osztályodban. Mostantól taníthatod az informatika alapjait, akár van számítógép az osztályodban, akár nincs!
<br>
<div class="col-50">
Azokat az órákat, amelyeken a diákok nem számítógépen dolgoznak, „unplugged” tevékenységnek nevezzük A diákok gyakran dolgoznak ceruzával és papírral vagy egyéb fizikai eszközökkel.  Ezek szándékosan elhelyezett kinesztetikus lehetőségek, amelyek segítenek a tanulóknak a bonyolult fogalmakat a saját életükhöz kapcsolódó módon feldolgozni. <br><br>Az unplugged leckék különösen hasznosak az együttműködő osztálytermi környezet kialakításához és fenntartásához, és hasznos élmények, amelyekre az elvontabb fogalmak bevezetésekor hivatkozni lehet. E tevékenységek mindegyike használható önmagában vagy más, kapcsolódó fogalmakkal foglalkozó informatikaórákkal együtt.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Korosztály 4+, csak angol
</div>

<div style="clear: both;"></div>

***
## Unplugged leckék az informatika alapjaihoz, 2021-22
A következő leckék itt találhatók: <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">Informatika alapjai, 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Kurzus</th>    <th><center><big>Óravázlat</th>     <th width=10%><center><big>Fogalom</th>    <th width=20%><center><big>Videó</th>     <tr>    <th rowspan="3" id="t01">A kurzus</th>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - Boldog térképek</a><br><small>Ez az unplugged lecke csapatokat hoz össze egy egyszerű feladattal: juttasd el a „flurb”-ot a gyümölcshöz. A tanulók gyakorolják a pontos utasítások írását, miközben az utasításokat lefordítják a megadott szimbólumokra. Ha a kódban problémák merülnek fel, a tanulóknak együtt kell dolgozniuk a hibák felismerésén és a megoldások kidolgozásán.</td><td>Szekvenciálás</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>  </tr>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - Boldog ciklusok</a><br><small>Ez a tevékenység visszatér a Happy Maps-hez. Ezúttal a diákok nagyobb, hosszabb feladványokat oldanak meg a kódjukkal, ami rávezeti őket a struktúrák hasznosságára, amelyek segítségével könnyebben írhatnak hosszabb kódot.</td><td>Ciklusok</td> <td><img src="/images/a7.png" width="90%"></td>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - A nagy esemény Jr.</a><br><small>Az események ragyogó lehetőséget adnak egy előre megírt algoritmus variálására. Néha szeretnéd, ha programod pontosan akkor tudna reagálni a felhasználó számára, amikor az azt szeretné. Erre vannak az események.</td><td>Események</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>  </tr>       <tr>    <th rowspan="3" id="t02">B kurzus</th>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - Mozgasd, mozgasd</a><br><small>Ez a lecke mentálisan felkészíti a tanulókat a kódolási feladatokra, amelyekkel a tanfolyam során találkozni fognak. Kis csapatokban a diákok fizikai tevékenységgel programozzák osztálytársaikat arra, hogy óvatosan lépkedjenek egyik helyről a másikra, amíg egy célt el nem érnek.</td><td>Szekvenálás</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - Megbolondulok...</a><br><small>Ahogy elkezdünk hosszabb és érdekesebb programokat írni, a kódunk gyakran tartalmaz sok ismétlést. Ebben a leckében a tanulók a táncban ismétlődő mozgásmintákat vizsgálva megismerkednek azzal, hogyan lehet ciklusok segítségével könnyebben kommunikálni a sok ismétlődést tartalmazó utasításokat.</td><td>Ciklusok</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - A megfelelő alkalmazás</a><br><small>Ebben a leckében a tanulók felismerik, hogy az informatika segítheti az embereket a való életben. Először is, a diákok belegondolnak több fiktív okostelefon-felhasználó helyzetébe, hogy segítsenek megtalálni az igényeiknek „megfelelő alkalmazást”. Ezután a diákok beleérzéssel és kreativitással felvázolják saját okostelefon-alkalmazásukat, amely kielégíti egy másik felhasználó igényeit.</td><td>A számítástechnika hatásai</td> <td><img src="/images/b10.png" width="90%"></td>  </tr>       <tr>    <th rowspan="4" id="t03">C kurzus</th>    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - Robot barátaim Jr.</a><br><i>*Kellékek: műanyagpoharak (10 db 2-3 fős csoportonként)</i><br><small>A tanulók kód helyett szimbólumkészletet használva algoritmusokat terveznek, hogy egy „robotot” utasítsanak a poharak különböző mintázatokban történő egymásra helyezésére. A diákok felváltva játsszák a robot szerepét, és csak a társaik által meghatározott algoritmusra reagálnak. Ez a szakasz megtanítja a diákoknak a szimbólumok és a műveletek közötti kapcsolatot, az algoritmus és a program közötti különbséget, valamint a hibakeresés értékes képességét.</td><td>Szekvenálás</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>  </tr>   <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - Ütődött robot barátom Jr</a><br><i>*Kellékek: papírpoharak (20 db 4 fős csoportonként)</i><br><small>ÁttekintésA kezdeti „Robot barátaim” tevékenységre építve a diákok nagyobb és bonyolultabb terveket készítenek. Ahhoz, hogy „robotjaikat” úgy programozhassák, hogy ezeket a nagyobb terveket elkészítsék, a tanulóknak azonosítaniuk kell az utasításaikban az ismétlődő mintákat, amelyeket ciklussal lehet helyettesíteni.</td><td>Ciklusok</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>  </tr>       <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - A Nagy Esemény</a><br><small>A diákok hamarosan megtanulják, hogy az események nagyszerű módon teszik rugalmassá az előre megírt algoritmust. Néha szeretnéd, ha programod pontosan akkor tudna reagálni a felhasználó számára, amikor az azt szeretné. Az események érdekesebbé és interaktívabbá teszik a programodat.</td><td>Események</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>   </tr>        </tr>      <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - Bináris karkötők</a><br><i>*Kellékek: Filctollak. Opcionálisan – 18 fekete/18 fehér gyöngy, 1 csőtisztító diákonként</i><br><small>A bináris számok rendkívül fontosak a számítógépek világában. A számítógépek többsége manapság mindenféle információt bináris formában tárol. Ez a lecke segít bemutatni, hogyan lehet valamit a való életből átvenni és lefordítani egy sor be- és kikapcsolássá.</td><td>Bináris</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>  </tr>         <tr>    <th rowspan="3" id="t04">D kurzus</th>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - Milliméterpapír programozás<br></a><small>Egymás „programozásával” képek rajzolására a diákok lehetőséget kapnak arra, hogy a programozás néhány alapfogalmát szórakoztató és közérthető módon megismerjék. Az óra azzal kezdődik, hogy a tanulók szimbólumok segítségével utasítják egymást, hogy milliméterpapíron négyzeteket színezzenek ki egy meglévő kép reprodukálására törekedve. Ha van idő, az órát a tanulók által készített képekkel is zárhatjuk.</td><td>Szekvenálás</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - Relé programozás<br></a><small>Ez a tevékenység a hibakeresésről és a kitartásról szóló rövid leckével kezdődik, majd gyorsan átmegy versenyfutásba az idővel, amikor a diákok csapatokra oszlanak, és együtt dolgoznak egy program megírásán, utasításonként.</td><td>Szekvenálás</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>      </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - Kondicionálisok kártyákkal</a><br><small>Ez a lecke bemutatja, hogyan használhatók a kondicionálisok egy program adott információkhoz való hozzáigazítására. Nem mindig rendelkezünk minden szükséges információval, amikor programot írunk. Néha egyik helyzetben mást akarsz csinálni, mint a másikban, még akkor is, ha nem tudod, hogy melyik helyzet lesz igaz, amikor a kódod fut. Ekkor jönnek be a kondicionálisok. A kondicionálisok lehetővé teszik a számítógép számára, hogy a kód futtatásakor mindig igaz információ alapján hozzon döntést.+</td><td>Kondicionálisok</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>    </tr>         <tr>    <th rowspan="3" id="t05">E kurzus</th>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - Digitális megosztás</a><br><i>*Kellékek: Okostelefon vagy tablet</i><br><small>Ennek a leckének, amelyet a Copyright and Creativity csapata kölcsönzött a Computer Science Fundamentals-nak, az a célja, hogy segítse a tanulókat megérteni a tulajdonjog és a szerzői jogok tiszteletben tartásának kihívásait és előnyeit, különösen digitális környezetben. A diákokat ösztönözni kell a művészek jogainak tiszteletben tartására, ami az etikus digitális állampolgárság fontos része.</td><td>Digitális állampolgárság</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - Dalírás</a><br><small>Az informatika világának egyik legcsodálatosabb struktúrája a függvény. A függvények (néha eljárásoknak is nevezik őket) olyan mini programok, amelyeket újra és újra használhatsz a nagyobb programodon belül. Ez a lecke segít a tanulóknak intuitív módon megérteni, hogy miért lehet hasznos gyakorlat a kódrészletek függvényekké való összeállítása.</td><td>Függvények</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 - Tervezés akadálymentesítésért</a><br><small>Ebben a leckében a diákok az akadálymentesítésről és az empátia értékéről tanulnak a hipotetikus alkalmazásokhoz való ötletelésen és akadálymentes megoldások tervezésén keresztül.</td><td>A számítástechnika hatásai</td><td><img src="/images/e18.png" width="90%"></td>  </tr>    </tr>         <tr>    <th rowspan="3" id="t06">F kurzus</th>           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 - Kitöltendő történetek</a><br><i>*Kellékek: 6 boríték (szintén alkalmas: papír vagy kartonlapok, félbehajtva).</i><br><small>A tanulók a kitöltendő történetek (a Mad Libs®-hez hasonlóan) segítségével megértik, hogy a számítógépek hogyan fogadják és tárolják a felhasználó által megadott adatokat, majd később, a program futtatásakor hogyan használják fel azokat.
   </td><td>Változók</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>    </tr>        <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - A ciklusos szórakozásért</a><br><i>*Kellékek: Dobókocka (3 dobókocka/2-4 fős csoportonként)</i><br><small>Tudjuk, hogy a ciklusok segítségével újra és újra elvégezhetünk dolgokat, de most megtanuljuk, hogyan használjunk olyan ciklusokat, amelyekben extra struktúrák vannak beépítve. Ezek az új struktúrák lehetővé teszik a tanulók számára, hogy erősebb és dinamikusabb kódot hozzanak létre.</td><td>A ciklusokért</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - Az Internet</a><br><small>Bár sokan használják naponta az internetet, nem sokan tudják, hogyan működik. Ebben a leckében a tanulók úgy tesznek, mintha az interneten közlekednének, miközben megismerkednek a kapcsolatokkal, az URL-címekkel, az IP-címekkel és a DNS-sel.</td><td>Adatok</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## További unplugged leckék

A következő leckék fogalmak szerint vannak rendszerezve, és megtalálhatók az informatika alapjai tanfolyamaink korábbi verzióiban. A leckék használatának tervezésekor további forrásokat is érdemes áttanulmányozni:
* [2019-es kurzus A-F tantervi útmutató](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019-es kurzus A-F ellátási lista](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019-es kurzus Amazon listák](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018-as kurzus A-F tantervi útmutató](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017-es kurzus A-F tantervi útmutató (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [1-4 kurzus tantervi útmutató](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF tanulókártyák](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Fogalom</th>    <th width=65%><center><big>Óravázlat <br><small> Az óravázlat további forrásokat tartalmaz (diák, videók, válaszkulcsok stb.).
</th>     <th><center><big>Források</th>     <tr>    <th rowspan="2" id=t07 width=5%>Digitális állampolgárság</th>    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>  </tr>  <tr>      <td colspan="2">*A Common Sense Education rendelkezik egy <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">teljes digitális állampolgárság tantervvel</a>, amely számos, unplugged tevékenységet tartalmaz.</td>    <tr>    <th id=t07>Bináris</th>        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Bináris képek </a><br><small>*Kellékek:Opcionális - Ellentétes elemek csoportosítása a tanulók számára. Bár sokan úgy gondolnak a bináris számokra, mint szigorúan nullákra és egyesekre, a tanulók megismerkednek azzal a gondolattal, hogy az információ többféle bináris opcióban is ábrázolható. Ez a lecke egy lépéssel továbbviszi ezt a koncepciót, mivel bemutatja, hogy a számítógép még összetettebb információkat (például képeket és színeket) is képes binárisan tárolni.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>Ciklusok</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Ütődött robot barátaim</a><br><small>Itt a diákok megtanulják a ciklusok egyszerűségét és hasznosságát azáltal, hogy „programozzák” barátaikat a „Robotbarátaim” nyelvének használatával A ciklusok bevezetése után a tanulók azt fogják tapasztalni, hogy gyorsabban tudnak nagyobb szerkezeteket építeni.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Függvények</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">Funkcionális napellenzők</a><br><small>Ebben a leckében a tanulók egy napellenzőt készítenek zsinórból, gyöngyökből és egy különleges varázslatból. A tanulók egy sor ismétlődő lépést követnek, majd arra kérik őket, hogy azonosítsanak bizonyos, többször megismételt „készségeket”. Miután ezeket a készségeket meghatároztuk, egy főprogramból hívjuk meg őket, és az egész gyönyörű alkotási folyamatot egyetlen lapon rögzítjük. A végső program az egész osztálynak szól, függetlenül attól, hogy milyen típusú zsinórokat, gyöngyöket és varázslatokat használnak. Ennek hatékony lehetővé tétele érdekében a tanulóknak „el kell vonatkoztatniuk” konkrét anyagaik részleteitől, és az egyén kellékeire vonatkozó homályos kifejezéseket kell alkotniuk. Az általános helyőrző elemek használata csodálatos bevezetés a változókba.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Lecke videó</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Lásd a leckét óra közben</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Tevékenység válaszkulcs <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Értékelés válaszkulcs</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Dalírás paraméterekkel</a><br><small>Az informatika világának egyik legcsodálatosabb struktúrája a függvény. A függvények (néha eljárásoknak is nevezik őket) olyan mini programok, amelyeket újra és újra használhatsz a nagyobb programodon belül. Ez a lecke segít a tanulóknak intuitív módon megérteni, hogy miért olyan hasznos gyakorlat a kódrészek függvényekké való kombinálása, és hogyan használhatják ezeket a struktúrákat akkor is, ha a kódrészek kissé eltérőek.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Algoritmusok</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Dobókocka-verseny</a><br><small>Ebben a leckében a tanulók az algoritmusok fogalmát a valós tevékenységekhez kapcsolják a dobókocka-verseny játékon keresztül. A cél itt az, hogy elkezdjük kiépíteni azokat a készségeket, amelyekkel a valós helyzeteket online forgatókönyvekre lehet átültetni, és fordítva.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Robotbarátaim</a><br><small>Egy előre meghatározott szimbólumkulcs segítségével a diákok rájönnek, hogyan irányítsák egymást bizonyos feladatok elvégzéséhez anélkül, hogy szóbeli parancsokat használnának. Ez a szakasz megtanítja a diákoknak a szimbólumok és a műveletek közötti kapcsolatot, az algoritmus és a program közötti különbséget, valamint a hibakeresés értékes képességét.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Algoritmusok a valós életből: papírrepülők</a><br><small>Ebben a leckében a tanulók az algoritmusok fogalmát mindennapi tevékenységekhez kapcsolják. Az algoritmusok megbeszélése után a tanulók papírrepülőket készítenek egy algoritmus segítségével. A cél itt az, hogy elkezdjük kiépíteni azokat a készségeket, amelyekkel a valós helyzeteket online forgatókönyvekre lehet átültetni, és fordítva.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Algoritmusok a valós életből: Ültess el egy magot</a><br><small>Ebben a leckében a tanulók az algoritmusok fogalmát a mindennapi, valós életben zajló tevékenységekhez kapcsolják egy valódi mag elültetésével. A cél itt az, hogy elkezdjük kiépíteni azokat a készségeket, amelyekkel a valós helyzeteket online forgatókönyvekre lehet átültetni, és fordítva.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangramok</a><br><small>Ez a lecke valami fontosat mutat meg az algoritmusokról. Amíg az algoritmusod egyszerű, sokféleképpen használhatod. Ha azonban biztos akarsz lenni abban, hogy mindenki ugyanazt az eredményt produkálja, akkor az algoritmusodnak több részletre van szüksége. A diákok megtanulják a különbséget a részletes és az általános algoritmus között, miközben tangramokkal játszanak.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Számítógépes gondolkodás</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Számítógépes gondolkodás</a><br><small>Ehhez a tevékenységhez nincsenek utasítások. Ehelyett a tanulók a képzeletbeli játékosok példái alapján fogják kitalálni, hogyan kell játszani a játékot. Ez a lecke lehetőséget ad a tanulóknak arra, hogy a számítástechnikai gondolkodás négy művészetét (dekompozíció, mintaillesztés, absztrakció és algoritmusok) egyetlen összefüggő tevékenységben gyakorolják.</td> <td><a href="https://youtu.be/TlAaklrolA0">Lecke videó</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Lásd a leckét óra közben</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Tevékenység válaszkulcs </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Számítástechnikai gondolkodás szörnyekkel</a><br><small>Csak papír és filctollak segítségével a diákok megtanulják a számítástechnikai gondolkodás négy lépését. Egy rövid bevezető után a diákokat csoportokra kell osztani, ahol utasításokat kell adniuk a többi diáknak, hogy rajzoljanak le egy adott szörnyet (az előre kiválasztott szörnyek katalógusából). A teljes feladatot szét kell bontani, majd a csapatok a katalógusban található összes szörnyet elemzik, hogy megtalálják a mintákat, hasonló részleteket absztrahálnak a szörnyekből, majd ezeket az információkat felhasználva algoritmust (utasításokat) készítenek egy másik csapat számára egy bizonyos szörny rajzolásához. A csapatok ezután algoritmust cserélnek egy másik csoporttal, és az alapján rajzolják meg a szörnyet, amit az algoritmus mutat. Ez a rajz az, amit az eredeti csapat tervezett?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Felfedezetlen hibák</a><br><small>Ez a lecke végigvezeti a tanulókat a hibakeresés lépésein. A tanulók megtanulják a mantrát: „Mi történt? Minek kellett volna történnie? Mit mond ez neked?” </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Kitartás</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Alap építése</a><br><small>Az új és megoldatlan problémák gyakran nehezek. Ha esélyt akarunk adni valami kreatív, hasznos és okos dolognak, akkor készen kell állnunk arra, hogy nekiugorjunk a nehéz problémáknak, még akkor is, ha többször kudarcot vallunk, mielőtt sikerül. Ebben a leckében a tanulók közönséges anyagokból építenek egy szerkezetet. A szerkezetet abból a szempontból vizsgálják, hogy képes-e több mint tíz másodpercig megtartani egy tankönyvet. A legtöbb diáknak ez nem fog elsőre sikerülni, de fontos, hogy végigcsinálják és tovább próbálkozzanak.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Pisti és a nagy projekt</a><br><small>Ha a diákok egy kérdés megválaszolása vagy egy projekt kidolgozása során akadályba ütköznek, könnyen frusztrálódnak és feladják. Ez a lecke megismerteti a tanulókat azzal a gondolattal, hogy a frusztráció a tanulás fontos része lehet. Itt a frusztráció a kreatív folyamat egyik lépéseként jelenik meg, nem pedig a kudarc jeleként. Ez a lecke egy vagy két tanóra alatt is elvégezhető. Ha több ideje van, nyugodtan húzza ki a Marble Run tevékenység építési és átdolgozási szakaszát.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Absztrakció</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Őrült nagydumások</a><br><small>Az absztrakció az egyik legfontosabb képesség, amelyet egy informatikusnak meg kell értenie. Leegyszerűsíti a problémákat és megelőzi a felesleges ismétléseket. Egy jó programozó szinte minden alkalommal használ absztrakciót, amikor programot készít. Ezzel a tevékenységgel a diákok elemezni fogják a történeteket a különbségek szempontjából, hogy elvonatkoztathassák azokat. Ezek az elvonatkoztatott történetek sablonokká válnak a szórakoztató és őrült új történetekhez.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Lecke videó</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Tevékenység válaszkulcs</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Értékelés válaszkulcs </a></td>  </tr>
<tr>   <th id=t07>Változók</th>     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Borítékváltozók</a><br><i>*Kellékek: Borítékok (1-4 darab/2-4 fős csoportonként)</i><br><small>A változókat olyan értékek helyőrzőjeként használják, mint a számok vagy szavak. A változók nagy szabadságot biztosítanak a programozásban. Ahelyett, hogy sokszor kellene begépelni egy kifejezést, vagy megjegyezni egy zavaros számot, az informatikusok változókkal hivatkozhatnak rájuk. Ez a lecke segít elmagyarázni, hogy mik azok a változók, és hogyan használhatjuk azokat sokféleképpen. A változók fogalmát nem könnyű megérteni, ezért javasoljuk, hogy a lecke végén hagyjunk bőven időt a megbeszélésre.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

