---
title: Informatika alapjai, unplugged
video_player: true
theme: responsive
---

# Informatika alapjai, unplugged

Összeállítottunk egy listát az összes unplugged leckénkről, amelyeket felhasználhatsz az osztályodban. Mostantól taníthatod az informatika alapjait, akár van számítógép az osztályodban, akár nincs!
<br>
<div class="col-50">
Azokat az órákat, amelyeken a diákok nem számítógépen dolgoznak, „unplugged” tevékenységnek nevezzük A diákok gyakran dolgoznak ceruzával és papírral vagy egyéb fizikai eszközökkel.  Ezek szándékosan elhelyezett kinesztetikus lehetőségek, amelyek segítenek a tanulóknak a bonyolult fogalmakat a saját életükhöz kapcsolódó módon feldolgozni. <br><br>Az unplugged leckék különösen hasznosak az együttműködő osztálytermi környezet kialakításához és fenntartásához, és hasznos élmények, amelyekre az elvontabb fogalmak bevezetésekor hivatkozni lehet. E tevékenységek mindegyike használható önmagában vagy más, kapcsolódó fogalmakkal foglalkozó informatikaórákkal együtt.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Korosztály 4+, csak angol
</div>

<div style="clear: both;"></div>

***
## Eszközmentes leckék az Informatika alapjai 2022-23. c. könyvben
A következő leckék az <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">Informatika alapjai 2022-23</a> c. könyvben találhatóak. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: var(--brand_primary_default);
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. A tanulók gyakorolják a pontos utasítások írását, miközben az utasításokat lefordítják a megadott szimbólumokra. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. Néha szeretnéd, ha programod pontosan akkor tudna reagálni a felhasználó számára, amikor az azt szeretné. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. Először is, a diákok belegondolnak több fiktív okostelefon-felhasználó helyzetébe, hogy segítsenek megtalálni az igényeiknek „megfelelő alkalmazást”. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. A diákok felváltva játsszák a robot szerepét, és csak a társaik által meghatározott algoritmusra reagálnak. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Néha szeretnéd, ha programod pontosan akkor tudna reagálni a felhasználó számára, amikor az azt szeretné. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. Opcionálisan – 18 fekete/18 fehér gyöngy, 1 csőtisztító diákonként</i><br><small>A bináris számok rendkívül fontosak a számítógépek világában. A számítógépek többsége manapság mindenféle információt bináris formában tárol. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. Az óra azzal kezdődik, hogy a tanulók szimbólumok segítségével utasítják egymást, hogy milliméterpapíron négyzeteket színezzenek ki egy meglévő kép reprodukálására törekedve. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. Nem mindig rendelkezünk minden szükséges információval, amikor programot írunk. Néha egyik helyzetben mást akarsz csinálni, mint a másikban, még akkor is, ha nem tudod, hogy melyik helyzet lesz igaz, amikor a kódod fut. Ekkor jönnek be a kondicionálisok. A kondicionálisok lehetővé teszik a számítógép számára, hogy a kód futtatásának bármelyik pillanatában igaz információk alapján hozzon döntést.+</td><td>Kondicionálisok</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Dalszerzés</a><br><small>A számítástechnika világának egyik legcsodálatosabb struktúrája a függvény. A függvények (néha eljárásoknak is nevezik őket) olyan mini programok, amelyeket újra és újra használhatsz a nagyobb programodon belül. Ennek a leckének a segítségével a tanulók megismerik, hogy miért hasznos kódrészleteket függvénnyé alakítani.
</td><td>Függvények</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - Akadálymentesítés tervezése</a><br><><small>Ebben a leckében a tanulók az akadálymentesítésről és az empátiáról tanulnak, képzeletbeli  alkalmazásokhoz gyűjtenek ötleteket és terveznek akadálymentes megoldásokat.</td><td>Számítástechnika hatásai</td><td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - Digitális megosztás</a><br><i>*Eszközök: Okostelefon vagy tablet</i><br><small>Az informatika alapjai c. könynek ezt a leckéjét a Copyright and Creativity csapata készítette azzal a céllal, hogy a diákok megismerjék és megértsék, miért kell a tulajdonjogot és a szerzői jogokat tiszteletben tartani, milyen kihívások és előnyök kapcsolódnak hozzá, különösen digitális környezetben. A diákokat ösztönözni kell arra, hogy tartsák tiszteletben a művészek jogait, mert ez fontos része annak, hogy etikus digitális állampolgárként tudjanak viselkedni.</td><td>Digitális állampolgár</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Course F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Történetek az üres térről</a><br><i>*Eszközök: 6 boríték (de megfelelő lehet: papírlap vagy kartonlap, félbehajtva).
</i><br><small>A tanulók az üres térrel kapcsolatos történetek segítségével (a Mad Libs®-hez hasonlóan) megértik, hogy a számítógépek hogyan fogadják be és tárolják el a felhasználók által bevitt inputot, és hogyan használják fel később azt egy program futtatásakor.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. Ezeknek az új struktúráknak a segítségével a tanulók erősebb és dinamikusabb kódot tudnak létrehozni.
</td><td>For ciklusok</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - Az internet</a><br><small>Bár sokan használják naponta az internetet, de csak kevesen tudják, hogyan működik. Ebben a leckében a tanulók úgy tesznek, mintha az interneten közlekednének, miközben megismerkednek a kapcsolatokkal, az URL-címekkel, az IP-címekkel és a DNS-sel.</td><td>Adatok</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## További unplugged leckék

A következő leckék fogalmak szerint vannak rendszerezve, és megtalálhatók az informatika alapjai tanfolyamaink korábbi verzióiban. A leckék használatának tervezésekor további forrásokat is érdemes áttanulmányozni:
* [2019-es kurzus A-F tantervi útmutató](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019-es kurzus A-F ellátási lista](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019-es kurzus Amazon listák](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018-as kurzus A-F tantervi útmutató](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017-es kurzus A-F tantervi útmutató (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [1-4 kurzus tantervi útmutató](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF tanulókártyák](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Fogalom</th>    <th width=65%><center><big>Óravázlat <br><small> Az óravázlat további forrásokat tartalmaz (diák, videók, válaszkulcsok stb.).
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. Bár sokan úgy gondolnak a bináris számokra, mint szigorúan nullákra és egyesekre, a tanulók megismerkednek azzal a gondolattal, hogy az információ többféle bináris opcióban is ábrázolható. Ez a lecke egy lépéssel továbbviszi ezt a koncepciót, mivel bemutatja, hogy a számítógép még összetettebb információkat (például képeket és színeket) is képes binárisan tárolni.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>Ciklusok</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Ütődött robot barátaim</a><br><small>Itt a diákok megtanulják a ciklusok egyszerűségét és hasznosságát azáltal, hogy „programozzák” barátaikat a „Robotbarátaim” nyelvének használatával A ciklusok bevezetése után a tanulók azt fogják tapasztalni, hogy gyorsabban tudnak nagyobb szerkezeteket építeni.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Függvények</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">Funkcionális napellenzők</a><br><small>Ebben a leckében a tanulók egy napellenzőt készítenek zsinórból, gyöngyökből és egy különleges varázslatból. A tanulók egy sor ismétlődő lépést követnek, majd arra kérik őket, hogy azonosítsanak bizonyos, többször megismételt „készségeket”. Miután ezeket a készségeket meghatároztuk, egy főprogramból hívjuk meg őket, és az egész gyönyörű alkotási folyamatot egyetlen lapon rögzítjük. A végső program az egész osztálynak szól, függetlenül attól, hogy milyen típusú zsinórokat, gyöngyöket és varázslatokat használnak. Ennek hatékony lehetővé tétele érdekében a tanulóknak „el kell vonatkoztatniuk” konkrét anyagaik részleteitől, és az egyén kellékeire vonatkozó homályos kifejezéseket kell alkotniuk. Az általános helyőrző elemek használata csodálatos bevezetés a változókba.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Lecke videó</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Lásd a leckét óra közben</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Tevékenység válaszkulcs <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Értékelés válaszkulcs</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Dalírás paraméterekkel</a><br><small>Az informatika világának egyik legcsodálatosabb struktúrája a függvény. A függvények (néha eljárásoknak is nevezik őket) olyan mini programok, amelyeket újra és újra használhatsz a nagyobb programodon belül. Ez a lecke segít a tanulóknak intuitív módon megérteni, hogy miért olyan hasznos gyakorlat a kódrészek függvényekké való kombinálása, és hogyan használhatják ezeket a struktúrákat akkor is, ha a kódrészek kissé eltérőek.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Algoritmusok</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Dobókocka-verseny</a><br><small>Ebben a leckében a tanulók az algoritmusok fogalmát a valós tevékenységekhez kapcsolják a dobókocka-verseny játékon keresztül. A cél itt az, hogy elkezdjük kiépíteni azokat a készségeket, amelyekkel a valós helyzeteket online forgatókönyvekre lehet átültetni, és fordítva.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Robotbarátaim</a><br><small>Egy előre meghatározott szimbólumkulcs segítségével a diákok rájönnek, hogyan irányítsák egymást bizonyos feladatok elvégzéséhez anélkül, hogy szóbeli parancsokat használnának. Ez a szakasz megtanítja a diákoknak a szimbólumok és a műveletek közötti kapcsolatot, az algoritmus és a program közötti különbséget, valamint a hibakeresés értékes képességét.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Algoritmusok a valós életből: papírrepülők</a><br><small>Ebben a leckében a tanulók az algoritmusok fogalmát mindennapi tevékenységekhez kapcsolják. Az algoritmusok megbeszélése után a tanulók papírrepülőket készítenek egy algoritmus segítségével. A cél itt az, hogy elkezdjük kiépíteni azokat a készségeket, amelyekkel a valós helyzeteket online forgatókönyvekre lehet átültetni, és fordítva.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Algoritmusok a valós életből: Ültess el egy magot</a><br><small>Ebben a leckében a tanulók az algoritmusok fogalmát a mindennapi, valós életben zajló tevékenységekhez kapcsolják egy valódi mag elültetésével. A cél itt az, hogy elkezdjük kiépíteni azokat a készségeket, amelyekkel a valós helyzeteket online forgatókönyvekre lehet átültetni, és fordítva.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangramok</a><br><small>Ez a lecke valami fontosat mutat meg az algoritmusokról. Amíg az algoritmusod egyszerű, sokféleképpen használhatod. Ha azonban biztos akarsz lenni abban, hogy mindenki ugyanazt az eredményt produkálja, akkor az algoritmusodnak több részletre van szüksége. A diákok megtanulják a különbséget a részletes és az általános algoritmus között, miközben tangramokkal játszanak.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Számítógépes gondolkodás</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Számítógépes gondolkodás</a><br><small>Ehhez a tevékenységhez nincsenek utasítások. Ehelyett a tanulók a képzeletbeli játékosok példái alapján fogják kitalálni, hogyan kell játszani a játékot. Ez a lecke lehetőséget ad a tanulóknak arra, hogy a számítástechnikai gondolkodás négy művészetét (dekompozíció, mintaillesztés, absztrakció és algoritmusok) egyetlen összefüggő tevékenységben gyakorolják.</td> <td><a href="https://youtu.be/TlAaklrolA0">Lecke videó</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Lásd a leckét óra közben</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Tevékenység válaszkulcs </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Számítástechnikai gondolkodás szörnyekkel</a><br><small>Csak papír és filctollak segítségével a diákok megtanulják a számítástechnikai gondolkodás négy lépését. Egy rövid bevezető után a diákokat csoportokra kell osztani, ahol utasításokat kell adniuk a többi diáknak, hogy rajzoljanak le egy adott szörnyet (az előre kiválasztott szörnyek katalógusából). A teljes feladatot szét kell bontani, majd a csapatok a katalógusban található összes szörnyet elemzik, hogy megtalálják a mintákat, hasonló részleteket absztrahálnak a szörnyekből, majd ezeket az információkat felhasználva algoritmust (utasításokat) készítenek egy másik csapat számára egy bizonyos szörny rajzolásához. A csapatok ezután algoritmust cserélnek egy másik csoporttal, és az alapján rajzolják meg a szörnyet, amit az algoritmus mutat. Ez a rajz az, amit az eredeti csapat tervezett?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Felfedezetlen hibák</a><br><small>Ez a lecke végigvezeti a tanulókat a hibakeresés lépésein. A tanulók megtanulják a mantrát: „Mi történt? Minek kellett volna történnie? Mit mond ez neked?” </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Kitartás</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Alap építése</a><br><small>Az új és megoldatlan problémák gyakran nehezek. Ha esélyt akarunk adni valami kreatív, hasznos és okos dolognak, akkor készen kell állnunk arra, hogy nekiugorjunk a nehéz problémáknak, még akkor is, ha többször kudarcot vallunk, mielőtt sikerül. Ebben a leckében a tanulók közönséges anyagokból építenek egy szerkezetet. A szerkezetet abból a szempontból vizsgálják, hogy képes-e több mint tíz másodpercig megtartani egy tankönyvet. A legtöbb diáknak ez nem fog elsőre sikerülni, de fontos, hogy végigcsinálják és tovább próbálkozzanak.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Pisti és a nagy projekt</a><br><small>Ha a diákok egy kérdés megválaszolása vagy egy projekt kidolgozása során akadályba ütköznek, könnyen frusztrálódnak és feladják. Ez a lecke megismerteti a tanulókat azzal a gondolattal, hogy a frusztráció a tanulás fontos része lehet. Itt a frusztráció a kreatív folyamat egyik lépéseként jelenik meg, nem pedig a kudarc jeleként. Ez a lecke egy vagy két tanóra alatt is elvégezhető. Ha több ideje van, nyugodtan húzza ki a Marble Run tevékenység építési és átdolgozási szakaszát.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Absztrakció</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Őrült nagydumások</a><br><small>Az absztrakció az egyik legfontosabb képesség, amelyet egy informatikusnak meg kell értenie. Leegyszerűsíti a problémákat és megelőzi a felesleges ismétléseket. Egy jó programozó szinte minden alkalommal használ absztrakciót, amikor programot készít. Ezzel a tevékenységgel a diákok elemezni fogják a történeteket a különbségek szempontjából, hogy elvonatkoztathassák azokat. Ezek az elvonatkoztatott történetek sablonokká válnak a szórakoztató és őrült új történetekhez.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Lecke videó</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Tevékenység válaszkulcs</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Értékelés válaszkulcs </a></td>  </tr>
<tr>   <th id=t07>Változók</th>     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Borítékváltozók</a><br><i>*Kellékek: Borítékok (1-4 darab/2-4 fős csoportonként)</i><br><small>A változókat olyan értékek helyőrzőjeként használják, mint a számok vagy szavak. A változók nagy szabadságot biztosítanak a programozásban. Ahelyett, hogy sokszor kellene begépelni egy kifejezést, vagy megjegyezni egy zavaros számot, az informatikusok változókkal hivatkozhatnak rájuk. Ez a lecke segít elmagyarázni, hogy mik azok a változók, és hogyan használhatjuk azokat sokféleképpen. A változók fogalmát nem könnyű megérteni, ezért javasoljuk, hogy a lecke végén hagyjunk bőven időt a megbeszélésre.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

{{ visit_partial_event_logger }}
