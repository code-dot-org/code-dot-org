---
title: Fundamentos de las Ciencias de la Computación - Actividades Desconectadas
video_player: true
theme: responsive
---

# Fundamentos de las Ciencias de la Computación - Actividades Desconectadas

Hemos recopilado una lista de actividades que no requieren conexión al internet para que las pueda usar en su clase. ¡Ahora va a poder enseñar los fundamentos de la ciencias de la computación sin computadoras!
<br>
<div class="col-50">
Las actividades que no requieren computadoras son conocidas como "actividades desconectadas." Los estudiantes usarán materiales de aula como lápiz, papel, etc.  El propósito de estas actividades es de proveer oportunidades cinestésicas para que los estudiantes puedan comprender conceptos abstractos con los materiales que usan en la clase. <br><br>
Las actividades desconectadas fomentan y mantienen el entorno colaborativo en la clase, y son útiles para enseñar los conceptos más complicados. Cada una de estas actividades se puede utilizar sola o con otras lecciones sobre conceptos relacionados.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Edades 4+, solo en Inglés
</div>

<div style="clear: both;"></div>

***
## Actividades desconectadas en Fundamentos de Ciencias de la Computación 2022-23
Puede encontrar las siguientes actividades en <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">Fundamentos de Ciencias de la Computación 2022-23</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: var(--brand_primary_default);
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Los estudiantes practicarán la escritura de instrucciones precisas mientras trabajan para traducir las instrucciones a los símbolos proporcionados. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. A veces deseas que tu programa pueda responder al usuario exactamente cuando el usuario lo desea. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. En primer lugar, los estudiantes se identifican con varios usuarios de smartphones ficticios para ayudarlos a encontrar la "aplicación correcta" que se adapte a sus necesidades. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Los estudiantes se turnarán para ser el robot, respondiendo solo al algoritmo definido por sus compañeros. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. A veces deseas que tu programa pueda responder al usuario exactamente cuando el usuario lo desea. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. Opcional: 18 cuentas negras / 18 blancas, 1 limpiapipas por estudiante</i><br><small>El código binario es extremadamente importante en el mundo de las computadoras. La mayoría de las computadoras actuales almacenan todo tipo de información en forma binaria. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. La clase comenzará con los estudiantes usando símbolos para darse instrucciones entre ellos para colorear cuadrados en un papel cuadriculado, para reproducir la imagen. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. No siempre tenemos toda la información que necesitamos cuando escribimos un programa. A veces, querrás hacer algo diferente en una situación que en otra, incluso si no sabes qué situación se dará cuando se ejecute tu código. Allí entran en juego los condicionales. Los Condicionales permiten a una computadora tomar una decisión, basada en la información que es verdadera cada vez que se ejecuta tu código.+</td><td>Condicionales</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Curso E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Composición de canciones</a><br><small>Una de las estructuras más magníficas en el mundo de la informática es la función. Las funciones (a veces llamadas procedimientos) son mini programas que puedes usar una y otra vez dentro de tu programa principal. Esta lección ayudará a los estudiantes a comprender intuitivamente por qué combinar fragmentos de código en funciones puede ser una práctica tan útil.</td><td>Funciones</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - Diseño para la accesibilidad</a><br><small>En esta lección, los estudiantes aprenderán sobre la accesibilidad y el valor de la empatía a través de una lluvia de ideas y el diseño de soluciones accesibles para aplicaciones hipotéticas.</td><td>Impactos de la computación</td><td><img src="/images/e18.png" width="90%"></td>
         <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - Intercambio digital</a><br><i>*Materiales: teléfono intelgente o tablet</i><br><small>Prestada a Fundamentos de Ciencias de la Computación por el equipo de Derechos de Autor y Creatividad, esta lección tiene como objetivo ayudar a los estudiantes a entender los desafíos y beneficios de respetar la propiedad y los derechos de autor, especialmente en entornos digitales. Se debe alentar a los estudiantes a respetar los derechos de los artistas como una parte importante de ser un ciudadano digital ético.</td><td>Ciudadanía digital</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Curso F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Historias del espacio en blanco</a><br><i>*Materiales: 6 sobres (también pueden ser papel o fichas, doblados por la mitad)</i><br><small>Los estudiantes usarán historias para completar espacios en blanco (similares a Mad Libs®) como contexto para comprender cómo las computadoras toman y almacenan la entrada de un usuario, y luego la usarán más tarde mientras se ejecuta un programa.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. Estas nuevas estructuras permitirán a los estudiantes crear un código más poderoso y dinámico.</td><td>Bucles de tipo For</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - Internet</a><br><small>Aunque mucha gente utiliza Internet a diario, no muchos saben cómo funciona. En esta lección, los estudiantes pretenderán fluir a través de Internet, mientras aprenden sobre conexiones, URL, direcciones IP y DNS.</td><td>Datos</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## Más lecciones sin conexión

Las siguientes lecciones están organizadas por concepto y se pueden encontrar en versiones anteriores de nuestros cursos de Fundamentos de Ciencias de la Computación. Otros recursos que puedes consultar cuando planees usar estas lecciones son:
* [2019 Cursos A-F: guía curricular](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Cursos A-F: lista de materiales](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [Curso 2019: listas de Amazon](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [Cursos A-F 2018: guía curricular](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [Cursos A-F 2017: guía curricular (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Cursos 1-4: guía curricular](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Tarjetas de instrucciones de CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Concepto</th>
    <th width=65%><center><big>Plan de lecciones <br>
<small> El plan de lecciones include otros recursos (diapositivas, videos, guías de respuestas, etc).
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. Aunque muchas personas piensan que el código binario son estrictamente ceros y unos, a los estudiantes se les presentará la idea de que la información se puede representar en una variedad de opciones binarias. Esta lección lleva ese concepto un paso más allá, ya que ilustra cómo una computadora también puede almacenar información aún más compleja (como imágenes y colores) en código binario.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>Bucles</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Mis amigos robóticos Loopy</a><br><small>Aquí, los estudiantes aprenden la simplicidad y la utilidad de los bucles al "programar" a sus amigos mediante el lenguaje de "Mis amigos robóticos." Una vez que se introducen los bucles, los estudiantes descubrirán que pueden crear estructuras más grandes, más rápido.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>Funciones</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">Atrapasoles funcionales</a><br><small>En esta lección, los estudiantes harán un atrapasol con hilo, cuentas y un amuleto especial. Los estudiantes seguirán una serie de pasos repetitivos, y luego se les pedirá que identifiquen ciertos conjuntos de "habilidades" que se duplican varias veces. Una vez que se definan esas habilidades, se llamarán desde un programa principal y todo el hermoso proceso de creación se registrará en una sola hoja de papel. El programa final estará dirigido a toda la clase, sea cual sea el tipo de hilo, cuentas y amuletos. Para permitir esto de manera efectiva, los estudiantes deberán "abstraer" los detalles de sus materiales específicos y crear términos vagos para los materiales de una persona. Este uso de marcadores de posición genéricos es una maravillosa introducción a las variables.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Video de la lección</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Mira la lección en acción</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Guía de respuestas de la actividad <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Guía de respuestas de la evaluación</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Composición de canciones con parámetros</a><br><small>Una de las estructuras más magníficas en las ciencias de la computación es la función. Las funciones (a veces llamadas procedimientos) son mini programas que puedes usar una y otra vez dentro de tu programa principal. Esta lección ayudará a los estudiantes a comprender intuitivamente por qué combinar fragmentos de código en funciones es una práctica tan útil y cómo pueden usar esas estructuras incluso cuando los fragmentos de código son ligeramente diferentes.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>Algoritmos</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Carrera de datos</a><br><small>En esta lección, los estudiantes relacionarán el concepto de algoritmos con actividades de la vida real mediante el juego de carrera de dados. El objetivo aquí es comenzar a mejorar las habilidades para traducir las situaciones del mundo real a escenarios en línea y viceversa.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Mis amigos robóticos</a><br><small>Mediante una tecla de símbolo predefinida, tus estudiantes descubrirán cómo guiarse unos a otros para realizar tareas específicas sin usar ningún comando verbal. Este segmento enseña a los estudiantes la conexión entre símbolos y acciones, la diferencia entre un algoritmo y un programa, y la valiosa habilidad de depuración.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Algoritmos en la vida real: aviones de papel</a><br><small>En esta lección, los estudiantes relacionarán el concepto de algoritmos con las actividades cotidianas. Después de hablar sobre algoritmos, los estudiantes harán aviones de papel mediante un algoritmo. El objetivo aquí es comenzar a desarrollar las habilidades para traducir situaciones del mundo real a escenarios en línea y viceversa.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Algoritmos en la vida real: plantar una semilla</a><br><small>En esta lección, los estudiantes relacionarán el concepto de algoritmos con las actividades cotidianas de la vida real plantando una semilla real. El objetivo aquí es comenzar a desarrollar las habilidades para traducir situaciones del mundo real a escenarios en línea y viceversa.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangramas</a><br><small>Esta lección nos muestra algo importante sobre los algoritmos. Siempre y cuando tu algoritmo sea simple, hay un montón de maneras de usarlo. Sin embargo, si deseas asegurarte de que todos produzcan el mismo resultado, tu algoritmo necesita más detalles. Los estudiantes aprenderán la diferencia entre un algoritmo detallado y uno general mientras juegan con tangramas.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">Pensamiento computacional</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">Pensamiento computacional</a><br><small>Para esta actividad, no se proporcionan instrucciones. En cambio, los estudiantes usarán ejemplos de lo que han hecho jugadores imaginarios para descubrir cómo jugar. Esta lección brinda a los estudiantes la oportunidad de practicar las cuatro artes del pensamiento computacional (descomposición, coincidencia de patrones, abstracción y algoritmos) en una actividad cohesiva.</td> <td><a href="https://youtu.be/TlAaklrolA0">Video de la lección</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Mira la lección en acción</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Guía de respuestas de la actividad </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Pensamiento computacional con monstruos</a><br><small>Con papel y marcadores, los estudiantes aprenderán los cuatro pasos del pensamiento computacional. Después de una breve introducción, los estudiantes deben dividirse en grupos donde tendrán que crear instrucciones para que otros estudiantes dibujen un monstruo específico (de un catálogo de monstruos preseleccionados). Toda la tarea debe descomponerse; luego los equipos analizarán todos los monstruos en el catálogo en busca de patrones, extraerán detalles similares de los monstruos y usarán esa información para crear un algoritmo (instrucciones) para que otro equipo dibuje un monstruo determinado. Luego, los equipos cambiarán algoritmos con otro grupo y dibujarán el monstruo según lo que indique ese algoritmo. ¿El dibujo es lo que pretendía el equipo original?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Errores no detectados</a><br><small>Esta lección guiará a los estudiantes a través de los pasos de la depuración. Los estudiantes aprenderán el mantra: "¿Qué pasó? ¿Qué debía pasar? ¿Qué te dice eso?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>Perseverancia</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Crear un cimiento</a><br><small>Los problemas nuevos y sin resolver suelen ser bastante difíciles. Si queremos tener alguna oportunidad de crear algo útil e inteligente, necesitamos estar dispuestos a abordar los problemas difíciles, incluso si eso significa fallar unas cuantas veces antes de que tengamos éxito. En esta lección, los estudiantes construirán una estructura con materiales comunes. Se evaluará la capacidad de la estructura para sostener un libro de texto durante más de diez segundos. La mayoría de los estudiantes no lo entenderán bien la primera vez, pero es importante que sigan adelante y sigan intentándolo.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie y el gran proyecto</a><br><small>Cuando los estudiantes se topan con un obstáculo mientras responden una pregunta o trabajan en un proyecto, es muy fácil para ellos frustrarse y darse por vencidos. Esta lección presentará a los estudiantes la idea de que la frustración puede ser una parte importante del aprendizaje. Aquí, la frustración se presenta como un paso en el proceso creativo, más que como una señal de fracaso. Esta lección se puede realizar en una o dos clases. Si tienes más tiempo, no dudes en abordar la fase de construcción y revisión de la actividad Carrera de canicas.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>Abstracción</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>La abstracción es una de las habilidades más importantes que debe comprender un experto en ciencias de la computación. Simplifica los problemas y evita repeticiones innecesarias. Un buen programador utiliza la abstracción cada vez que crea un programa. Esta actividad hará que tus estudiantes analicen historias en busca de diferencias para que puedan abstraerlas. Esas historias abstractas se convierten en plantillas para nuevas y divertidas historias.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Video de la lección</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Guía de respuestas de la actividad</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Guía de respuestas de la evaluación </a></td>
  </tr>
<tr>
   <th id=t07>Variables</th>
​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Variables en sobres</a><br><i>*Materiales: sobres (1-4/grupos de 2-4)</i><br><small>Las variables se utilizan como marcadores de posición para valores como números o palabras. Las variables brindan mucha libertad en la programación. En lugar de tener que escribir una frase muchas veces o recordar un número complicado, los expertos en ciencias de la computación pueden usar variables para hacer referencia a ellos. Esta lección ayuda a explicar qué son las variables y cómo podemos usarlas de muchas formas diferentes. La idea de variables no es un concepto fácil de comprender, por lo que recomendamos dejar suficiente tiempo para el debate al final de la lección.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

{{ visit_partial_event_logger }}
