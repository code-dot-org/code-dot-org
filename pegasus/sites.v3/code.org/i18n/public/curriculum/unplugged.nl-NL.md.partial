---
title: CS Fundamentals Unplugged
video_player: true
theme: responsive
---

# CS Fundamentals Unplugged

We hebben een lijst samengesteld van al onze unplugged lessen voor u om te gebruiken in uw klas. Nu kunt u de grondbeginselen van de informatica onderwijzen, of u nu computers in uw klas hebt of niet!
<br>
<div class="col-50">
Lessen waarin leerlingen niet aan een computer werken, noemen we "unplugged" Leerlingen zullen vaak werken met potlood en papier of fysieke acties.  Dit zijn opzettelijk geplaatste kinesthetische mogelijkheden die leerlingen helpen ingewikkelde concepten te verwerken op manieren die verband houden met hun eigen leven. <br><br>
Unplugged-lessen zijn bijzonder nuttig voor het opbouwen en onderhouden van een samenwerkingsklimaat in de klas, en het zijn nuttige toetservaringen waarnaar u kunt verwijzen bij het introduceren van meer abstracte concepten. Elk van deze activiteiten kan op zichzelf worden gebruikt of in combinatie met andere informaticalessen over verwante concepten.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Leeftijd 4+, alleen Engels
</div>

<div style="clear: both;"></div>

***
## Unplugged lessons in CS Fundamentals 2022-23
The following lessons can be found in <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">CS Fundamentals 2022-23</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: var(--brand_primary_default);
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Leerlingen oefenen in het schrijven van precieze instructies terwijl ze werken aan het vertalen van instructies in de gegeven symbolen. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. Soms wil je dat je programma precies op de gebruiker kan reageren wanneer de gebruiker dat wil. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. Eerst leven de leerlingen zich in een aantal fictieve smartphonegebruikers in om hen te helpen de "juiste app" te vinden die aan hun behoeften voldoet. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Leerlingen doen om de beurt mee als de robot en reageren alleen op het algoritme dat door hun medeleerlingen is bepaald. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Soms wil je dat je programma precies op de gebruiker kan reageren wanneer de gebruiker dat wil. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. Optioneel – 18 zwarte/18 witte kralen, 1 pijpenrager per leerling</i><br><small>Binair is uiterst belangrijk in de wereld van computers. De meeste computers slaan tegenwoordig allerlei soorten informatie op in binaire vorm. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. De les begint met leerlingen die elkaar met symbolen instructies geven om vierkantjes op grafiekpapier in te kleuren in een poging een bestaande afbeelding na te maken. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. We hebben niet altijd alle informatie die we nodig hebben bij het schrijven van een programma. Soms zult u in de ene situatie iets anders willen doen dan in de andere, zelfs als u niet weet welke situatie waar zal zijn wanneer uw code wordt uitgevoerd. Dat is waar conditionals in het spel komen. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.+</td><td>Conditionals</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Songwriting</a><br><small>One of the most magnificent structures in the computer science world is the function. Functies (soms procedures genoemd) zijn mini-programma's die je steeds opnieuw kunt gebruiken binnen je grotere programma. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.</td><td>Functions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - Designing for Accessibility</a><br><small>In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps.</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - Digital Sharing</a><br><i>*Supplies: Smartphone or tablet</i><br><small>Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.</td><td>Digital Citizenship</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Course F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Blank Space Stories</a><br><i>*Supplies: 6 envelopes(also suitable:paper or index cards,folded in half)</i><br><small>Students will use fill-in-the-blank stories (similar to Mad Libs®) as a context for understanding how computers take and store input from a user, then use it later as a program runs.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic.</td><td>For Loops</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - The Internet</a><br><small>Even though many people use the internet daily, not very many know how it works. In deze les doen de leerlingen alsof ze door het internet stromen, terwijl ze leren over verbindingen, URL's, IP-adressen en DNS.</td><td>Data</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## Extra Unplugged lessen

De volgende lessen zijn geordend per concept en zijn te vinden in eerdere versies van onze CS Fundamentals-cursussen. Bijkomende bronnen die u misschien wilt raadplegen wanneer u deze lessen gaat gebruiken, zijn onder meer:
* [2019 Course A-F Curriculum Guide](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Course A-F Supply List](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 Course Amazon Lists](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Cursus A-F Curriculum Gids](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Cursus A-F Curriculum Gids (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Cursus 1-4 Curriculum Gids](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF Flashcards](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Concept</th>
    <th width=65%><center><big>Lesplan <br>
<small> Lesplan bevat aanvullende bronnen (dia's, video's, antwoordsleutels enz.).
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. Hoewel veel mensen bij binair denken aan uitsluitend nullen en enen, zullen de leerlingen kennismaken met het idee dat informatie kan worden weergegeven in een verscheidenheid van binaire opties. Deze les gaat nog een stap verder en laat zien hoe een computer nog complexere informatie (zoals afbeeldingen en kleuren) ook binair kan opslaan.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>Lussen</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Mijn lussige robotvriendjes</a><br><small>Hier leren leerlingen de eenvoud en het nut van lussen door hun vrienden te "programmeren" met behulp van de taal uit "Mijn robotvriendjes" Zodra lussen zijn geïntroduceerd, zullen leerlingen merken dat ze sneller grotere structuren kunnen bouwen.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>Functies</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">Functionele zonnevangers</a><br><small>In deze les maken de leerlingen een zonnevanger van touw, kralen en een speciaal bedeltje. De leerlingen volgen een reeks zich herhalende stappen en worden dan gevraagd bepaalde reeksen "vaardigheden" aan te wijzen die verschillende keren worden herhaald. Zodra deze vaardigheden zijn gedefinieerd, zullen zij worden opgeroepen vanuit een hoofdprogramma en zal het hele mooie scheppingsproces worden vastgelegd op één enkel blad papier. Het eindprogramma zal worden afgestemd op de hele klas, ongeacht het soort touw, kralen en bedels. Om dit effectief mogelijk te maken, zullen de leerlingen de details van hun specifieke materialen moeten "abstraheren" en vage termen moeten creëren voor de benodigdheden van een individu. Dit gebruik van generieke plaatshouders is een prachtige introductie tot variabelen.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Lesvideo</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Zie Les in actie</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Antwoordsleutel activiteit <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Antwoordsleutel assessment</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Songwriting met parameters</a><br><small>Een van de prachtigste structuren in de informaticawereld is de functie. Functies (soms procedures genoemd) zijn mini-programma's die je steeds opnieuw kunt gebruiken binnen je grotere programma. Deze les zal de leerlingen helpen intuïtief te begrijpen waarom het combineren van stukken code tot functies zo nuttig is, en hoe ze die structuren kunnen gebruiken zelfs wanneer stukken code maar een beetje verschillen.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>Algoritmen</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Dobbelsteenrace</a><br><small>In deze les zullen de leerlingen het concept van algoritmen koppelen aan activiteiten in het echte leven door het spel Dobbelsteenrace te spelen. Het doel is de vaardigheden te ontwikkelen om situaties uit de echte wereld te vertalen naar onlinescenario's en vice versa.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Mijn robotvriendjes</a><br><small>Met behulp van een vooraf gedefinieerde symboolsleutel zullen uw leerlingen ontdekken hoe ze elkaar kunnen helpen om specifieke taken uit te voeren zonder verbale opdrachten te gebruiken. Dit segment leert de leerlingen het verband tussen symbolen en acties, het verschil tussen een algoritme en een programma, en de waardevolle vaardigheid van debuggen.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Levensechte algoritmen: papieren vliegtuigjes</a><br><small>In deze les brengen de leerlingen het concept van algoritmen terug naar alledaagse activiteiten. Na de bespreking van algoritmen gaan de leerlingen papieren vliegtuigjes maken met behulp van een algoritme. Het doel is om de vaardigheden te ontwikkelen om situaties uit de echte wereld te vertalen naar online scenario's en vice versa.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Levensechte algoritmen: Een zaadje planten</a><br><small>In deze les brengen leerlingen het concept van algoritmen terug naar alledaagse, levensechte activiteiten door een echt zaadje te planten. Het doel hier is een begin te maken met het opbouwen van vaardigheden om situaties uit de echte wereld te vertalen naar online scenario's en vice versa.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangrams</a><br><small>Deze les laat ons iets belangrijks zien over algoritmen. Zolang je een algoritme eenvoudig houdt, zijn er veel manieren om het te gebruiken. Als u er echter zeker van wilt zijn dat iedereen hetzelfde resultaat oplevert, dan moet uw algoritme gedetailleerder zijn. Leerlingen leren al spelend met tangrammen het verschil tussen een gedetailleerd en een algemeen algoritme.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">Computational Thinking</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">Computational Thinking</a><br><small>Voor deze activiteit zijn er geen instructies. In plaats daarvan zullen de leerlingen voorbeelden gebruiken van wat denkbeeldige spelers hebben gedaan om uit te vinden hoe het spel gespeeld moet worden. Deze les geeft leerlingen de kans om de vier vaardigheden van computational thinking (ontleden, patronen vergelijken, abstraheren en algoritmen) te oefenen in één samenhangende activiteit.</td> <td><a href="https://youtu.be/TlAaklrolA0">Lesvideo</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Zie Les in actie</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Antwoordsleutel activiteit </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Computational Thinking met monsters</a><br><small>Met niets anders dan papier en stiften leren leerlingen de vier stappen van computational thinking. Na een korte inleiding worden de leerlingen in groepjes verdeeld, waar ze aanwijzingen moeten maken voor andere leerlingen om een specifiek monster te tekenen (uit een catalogus van vooraf geselecteerde monsters). De hele taak moet worden ontleed, dan moeten de teams alle monsters in de catalogus analyseren op patronen, soortgelijke details uit de monsters abstraheren, en dan die informatie gebruiken om een algoritme (aanwijzingen) te maken voor een ander team om een bepaald monster te tekenen. De teams wisselen dan algoritmen uit met een andere groep en tekenen het monster op basis van wat dat algoritme aangeeft. Is de tekening wat het oorspronkelijke team bedoelde?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Verborgen Bugs</a><br><small>Deze les leidt leerlingen door de stappen van het debuggen. Leerlingen zullen de mantra leren: "Wat is er gebeurd? Wat had er moeten gebeuren? Wat zegt je dat?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>Doorzettingsvermogen</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Een fundament leggen</a><br><small>Nieuwe en onopgeloste problemen zijn vaak behoorlijk moeilijk. Als we enige kans willen maken om iets creatiefs, nuttigs en slims te maken, moeten we bereid zijn om moeilijke problemen aan te pakken, zelfs als dat betekent dat we een paar keer falen voor we slagen. In deze les maken de leerlingen een bouwwerk met gewone materialen. De structuur zal worden getest op zijn vermogen om een tekstboek langer dan tien seconden vast te houden. De meeste leerlingen zullen dit niet de eerste keer goed doen, maar het is belangrijk dat ze doorzetten en blijven proberen.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie en het grote project</a><br><small>Wanneer leerlingen tijdens het beantwoorden van een vraag of het werken aan een project tegen een obstakel aanlopen, raken ze gemakkelijk gefrustreerd en geven ze het op. Deze les zal de leerlingen vertrouwd maken met het idee dat frustratie een belangrijk onderdeel van leren kan zijn. Hier wordt frustratie voorgesteld als een stap in het creatieve proces, eerder dan als een teken van mislukking. Deze les kan in één of twee lesuren worden gegeven. Als u meer tijd hebt, voel u dan vrij om de bouw- en revisiefase van de Marble Run-activiteit uit te tekenen.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>Abstractie</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Abstraheren is een van de belangrijkste vaardigheden die een computerwetenschapper moet begrijpen. Het vereenvoudigt problemen en voorkomt onnodige herhalingen. Een goede programmeur gebruikt abstractie zowat elke keer dat hij een programma maakt. Deze activiteit laat uw leerlingen verhalen analyseren op verschillen, zodat ze die weg kunnen abstraheren. Deze geabstraheerde verhalen worden sjablonen voor leuke en gekke nieuwe verhalen.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Lesvideo</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Antwoordsleutel activiteit</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Antwoordsleutel Assessment </a></td>
  </tr>
<tr>
   <th id=t07>Variabelen</th>
​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Envelop-variabalen</a><br><i>*Benodigdheden: enveloppen (1-4/groep van f 2-4)</i><br><small>Variabelen worden gebruikt als plaatshouders voor waarden zoals getallen of woorden. Variabelen geven veel vrijheid bij het programmeren. In plaats van een zin vele malen te moeten typen of een obscuur getal te moeten onthouden, kunnen computerwetenschappers variabelen gebruiken om ernaar te verwijzen. In deze les wordt uitgelegd wat variabelen zijn en hoe we ze op veel verschillende manieren kunnen gebruiken. Het idee van variabelen is niet eenvoudig te begrijpen, dus we raden aan om aan het einde van de les voldoende tijd voor discussie in te ruimen.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

{{ visit_partial_event_logger }}
