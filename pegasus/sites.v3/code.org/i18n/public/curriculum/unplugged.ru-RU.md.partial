---
title: Основы информатики – урок без компьютера
video_player: true
theme: responsive
---

# Основы информатики – урок без компьютера

Мы составили список всех наших уроков без компьютера, чтобы вы могли использовать их в своем классе. Теперь вы можете преподавать основы информатики независимо от того, есть у вас в классе компьютеры или нет!
<br>
<div class="col-50">
Мы называем уроки, на которых учащиеся не работают на компьютере, «уроками без компьютера» Учащиеся часто используют карандаши и бумагу или физические развивающие материалы.  Это намеренно созданные кинестетические возможности, которые помогают учащимся усвоить сложные понятия так, чтобы они соотносились с их собственной жизнью. <br><br>Урок без компьютера особенно полезны для создания и поддержания атмосферы сотрудничества в классе, а также они являются полезным примером, к которому можно обратиться при введении более абстрактных понятий. Каждое из этих занятий можно использовать как отдельно, так и совместно с другими уроками информатики, посвященными смежным понятиям.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Возраст: 4+, только английский язык
</div>

<div style="clear: both;"></div>

***
## Unplugged lessons in CS Fundamentals 2022-23
The following lessons can be found in <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">CS Fundamentals 2022-23</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Учащиеся будут практиковаться в написании точных инструкций, работая над переводом инструкций в предусмотренные символы. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. Иногда хочется, чтобы твоя программа могла отвечать пользователю именно тогда, когда пользователь хочет этого. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. Сначала учащиеся сопереживают нескольким вымышленным пользователям смартфонов, порядке, чтобы помочь им найти «правильное приложение», отвечающее их потребностям. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Учащиеся будут по очереди исполнять роль «робота», отвечая только на алгоритм, заданный их одноклассниками. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Иногда хочется, чтобы твоя программа могла отвечать пользователю именно тогда, когда пользователь хочет этого. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. Необязательно – 18 черных/18 белых бусин, по 1 ёршику на ученика</i><br><small>Двоичный код чрезвычайно важен в мире компьютеров. Большинство компьютеров сегодня хранят информацию всех видов в двоичной форме. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. Занятие начнется с того, что ученики будут с помощью символов давать друг другу команды по раскрашиванию квадратов на разлинованной бумаге, стараясь воспроизвести имеющееся изображение. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. Мы не всегда располагаем всей необходимой информацией при написании программы. Иногда вы захотите сделать что-то иное в одной ситуации, а не в другой, даже если вы не знаете, какая ситуация будет истинной при выполнении вашего кода. Именно здесь на помощь приходят условные операторы. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.+</td><td>Conditionals</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Songwriting</a><br><small>One of the most magnificent structures in the computer science world is the function. Функции (иногда называемые процедурами) — это мини-программы, которые можно использовать снова и снова внутри большой программы. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.</td><td>Functions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - Designing for Accessibility</a><br><small>In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps.</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - Digital Sharing</a><br><i>*Supplies: Smartphone or tablet</i><br><small>Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.</td><td>Digital Citizenship</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Course F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Blank Space Stories</a><br><i>*Supplies: 6 envelopes(also suitable:paper or index cards,folded in half)</i><br><small>Students will use fill-in-the-blank stories (similar to Mad Libs®) as a context for understanding how computers take and store input from a user, then use it later as a program runs.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic.</td><td>For Loops</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - The Internet</a><br><small>Even though many people use the internet daily, not very many know how it works. В ходе этого урока ученики представят себя плывущими по волнам интернета и познакомятся с соединениями, URL и IP-адресами, а также с DNS.</td><td>Данные</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## Дополнительные уроки без компьютера

Следующие уроки организованы по концепциям и их можно найти в более ранних версиях наших курсов по основам информатики. Дополнительные ресурсы, с которыми вы, возможно, захотите ознакомиться при планировании использования этих уроков, включают в себя:
* [2019 Курс A-F Руководстве по учебному плану](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Курс A-F Список школьных принадлежностей](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 Курс Списки Amazon](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Курс A-F Руководстве по учебному плану](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Курс A-F Руководстве по учебному плану (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Курс 1-4 Руководстве по учебному плану](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Дидактические карточки по Основам информатики](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Понятие</th>    <th width=65%><center><big>План урока <br><small> План урока включает дополнительные ресурсы (слайды, видео, ответы и т. д.).
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. Хотя многие думают о двоичных числах лишь как о нулях и единицах, ученики узнают, что информация может отображаться с помощью нескольких вариантов двоичной записи. На этом уроке будет сделан еще один шаг в углублении понимания данной концепции, и будет показано как компьютер может хранить еще более сложную информацию (такую как изображения и цвета) также с помощью двоичных чисел.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>Циклы</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Мои циклические друзья-роботы</a><br><small>Здесь учащиеся узнают о простоте и полезности циклов, «программируя» своих друзей, используя язык из «Мои друзья-роботы» После введения циклов учащиеся обнаружат, что они могут быстрее создавать большие структуры.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Функции</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">Функциональные витражи</a><br><small>На этом уроке ученики будут создавать витражи из проволоки, бус и особой подвески. Ученики будут выполнять ряд повторяющихся шагов, и затем им будет предложено назвать определенные наборы «навыков», которые повторяются несколько раз. Как только эти навыки будут определены, они будут запускаться из основной программы, и весь интересный процесс создания будет записан на одном листе бумаги. Окончательная программа будет применима для всего класса независимо от типов проволоки, бус и подвесок. Чтобы продуктивно выполнить данное задание, ученикам потребуется «обобщить» свойства своих материалов и создать абстрактные обозначения предметов, используемых отдельными учениками. Использование обобщенных обозначений предметов представляет собой прекрасное введение в переменные.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Видео урока</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Посмотреть урок в действии</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Ключ к ответам для занятия <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Ключ к ответам для задания на проверку знаний</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Написание песен с помощью параметров</a><br><small>Одним из самых великолепных творений мира информатики является функция. Функции (иногда называемые процедурами) — это мини-программы, которые можно использовать снова и снова внутри большой программы. Этот урок поможет ученикам интуитивно понять, почему так полезно объединение фрагментов кода в функции, и каким образом можно использовать эти структуры, даже если такие фрагменты несколько различаются между собой.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Алгоритмы</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Игра в кости</a><br><small>На этом уроке учащиеся поймут связь концепции алгоритмов с повседневными действиями, играя с игральными кубиками. Целью при этом является формирование начальных навыков преобразования ситуаций из реальной жизни в онлайн-сценарии и наоборот.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Мои друзья-роботы</a><br><small>Используя предопределенные символьные ключи, ваши ученики поймут, как направлять друг друга для выполнения конкретных задач без использования словесных команд. В этом сегменте занятия ученики усваивают взаимосвязь между символами и действиями, а также различие между алгоритмом и программой, приобретая также ценный навык отладки.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Алгоритмы из реальной жизни: Бумажные самолетики</a><br><small>На этом уроке учащиеся поймут связь концепции алгоритмов с повседневными действиями. После обсуждения алгоритмов учащиеся сделают бумажные самолетики, используя алгоритм. Целью при этом является формирование начальных навыков преобразования ситуаций из реальной жизни в онлайн-сценарии и наоборот.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Алгоритмы из реальной жизни: Посади семечко</a><br><small>На этом уроке учащиеся свяжут понятие алгоритмов с повседневной, реальной жизнью, посадив семя. Целью при этом является формирование начальных навыков преобразования ситуаций из реальной жизни в онлайн-сценарии и наоборот.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Танграмы</a><br><small>В ходе этого урока мы узнаем важную информацию об алгоритмах. Пока вы обеспечиваете простоту алгоритма, есть множество способов использовать его. Однако, если вы хотите, чтобы все получали один и тот же результат, ваш алгоритм должен быть более подробным. Играя с танграмами, ученики узнают о различии между подробным и общим алгоритмами.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Вычислительное мышление</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Вычислительное мышление</a><br><small>Для занятия инструкции не предусмотрены. Вместо этого учащиеся будут использовать примеры действий воображаемых игроков, чтобы понять, как играть в игру. Этот урок предоставляет учащимся возможность попрактиковать четыре искусства вычислительного мышления (разбиение на части, построение шаблонов, абстрактное представление и алгоритмы) в рамках одного целостного занятия.</td> <td><a href="https://youtu.be/TlAaklrolA0">Видео урока</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Посмотреть урок в действии</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Ключи к ответам для занятия </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">>Вычислительное мышление с Монстрами</a><br><small>Используя только бумагу и маркер, ученики изучат четыре ступени вычислительного мышления. После краткого введения ученики делятся на группы, в которых они должны подготовить для других учеников инструкции по рисованию определенного монстра (из каталога заранее отобранных монстров). Задание делится на части, и команды анализируют всех монстров в каталоге для составления шаблонов, выделяют различные части монстров, а затем используют данную информацию для создания алгоритмов (инструкций) для другой команды, которая должна нарисовать определенного монстра. Затем команды обмениваются алгоритмами с другой группой и рисуют монстра по заданному алгоритму. Похож ли рисунок на то, что имела в виду первая команда?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Незамеченные «баги»</a><br><small>На этом уроке учащиеся изучат шаги отладки. Они выучат мантру: «Что произошло? Что должно было произойти? О чем это говорит?» </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Настойчивость</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Создание основы</a><br><small>Новые и нерешенные проблемы часто бывают довольно сложными. Если мы хотим иметь хоть какой-то шанс создать что-то творческое, полезное и умное, то мы должны быть готовы решать сложные проблемы, даже если это означает, что мы несколько раз потерпим неудачу, прежде чем добьемся успеха. На этом уроке учащиеся будут создавать конструкцию из обычных материалов. Конструкция будет проверяться на способность удерживать учебник в течение более десяти секунд. Большинство учащихся не смогут сделать это правильно с первого раза, но важно, чтобы они двигались вперед и продолжали пробовать.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Стиви и Большой Проект</a><br><small>Когда учащиеся сталкиваются с препятствиями при поиске ответа на вопрос или во время работы над проектом, они могут легко расстроиться и сдаться. Этот урок познакомит учащихся с идеей о том, что разочарование может быть важной частью обучения. Здесь разочарование представляется как этап творческого процесса, а не как признак неудачи. Этот урок можно провести за одно или два занятия. Если у вас есть больше времени, нарисуйте этап построения и пересмотра задания «Marble Run».</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Абстракция</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Абстрактное представление является одним из наиболее важных навыков, которыми должен владеть программист. Это упрощает трудности и предотвращает ненужные повторения. Хороший программист использует абстракцию практически каждый раз, когда создает программу. Это упражнение поможет ученикам проанализировать рассказы и найти в них отличия, которые можно отбросить. Таким образом, истории превратятся в универсальные шаблоны для создания новых интересных произведений.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Видео урока</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Ключ к ответам для занятия</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Ключ к ответам для задания на проверку знаний </a></td>  </tr>
<tr>   <th id=t07>Переменные</th>     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Конвертные переменные</a><br><i>*Школьные принадлежности: конверты (1-4/группа из 2-4 учеников)</i><br><small>Переменные используются в качестве полей для заполнения значениями, такими как числа или слова. Они позволяют обеспечить значительную степень свободы при программировании. Вместо того, чтобы много раз печатать фразу или запоминать неизвестное число, в информатике используются ссылающиеся на них переменные. Этот урок помогает объяснить сущность переменных и множество различных способов их использования. Идея переменной не проста для понимания, поэтому мы рекомендуем в конце урока выделить значительное время на обсуждение.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

