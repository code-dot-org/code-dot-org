---
title: CS 기초 언플러그드
video_player: true
theme: responsive
---

# CS 기초 언플러그드

학급에서 사용하실 수 있도록 언플러그드 수업 일체를 목록으로 모아놓았습니다. 앞으로는 학급에 컴퓨터가 구비되어 있지 않아도 컴퓨터 과학의 기초를 가르치 수 있습니다!
<br>
<div class="col-50">
저희는 학생들이 컴퓨터상으로 진행 중이지 않은 수업을 “언플러그드”라고 합니다. 학생들은 대개 종이와 연필을 사용하거나 실제적인 것을 조작하며 학습하게 됩니다.  학생들이 운동 감각을 이용하는 기회를 통해 실생활과 연관된 다양한 방식으로 복잡한 개념을 소화할 수 있게끔 의도적으로 배치된 과정입니다. <br><br>
언플러그드 수업은 협동적인 학급 환경을 조성하고 유지하는 데 특히 유용하므로 보다 추상적인 개념을 소개할 때 유용하게 적용할 만한 시금석이 되는 환경입니다. 이 각각의 활동은 단독으로 쓰일 수도 있고 연관 개념에 관한 타 컴퓨터 과학 수업과 함께 쓰일 수도 있습니다.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;연령 4세 이상, 영어 전용
</div>

<div style="clear: both;"></div>

***
## CS 기초 2021-22 내 언플러그드 수업

<a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">CS 기초 2021-22</a>에서는 다음 수업들을 만나볼 수 있습니다. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>코스</th>
    <th><center><big>수업 계획</th>
     <th width=10%><center><big>개념</th>
    <th width=20%><center><big>동영상</th>
     <tr>
    <th rowspan="3" id="t01">코스 A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - 해피 맵</a><br><small>이 언플러그드 수업에서는 팀을 꾸려 “플러브”를 과일에 가져가기 같은 간단한 작업을 하게 됩니다. 학생들은 명령을 정확하게 작성하는 연습을 하면서 명령을 제공된 기호로 변환해봅니다. 코드에서 문제가 발생하면 학생들은 또다시 협력해 버그를 알아내고 해결책을 찾아내야 합니다.</td><td>시퀀싱</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - 해피 루프</a><br><small>이 활동에서는 해피 맵이 다시 나옵니다. 이번 활동을 통해 학생들은 코드를 가지고 더 크고 긴 퍼즐을 풀며 구조의 다용도성을 알아보고 더 긴 코드를 더 쉽게 쓸 수 있게 됩니다.</td><td>루프</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - 더 빅 이벤트 주니어</a><br><small>이벤트는 사전에 작성된 알고리즘에 다양성을 추가하는 훌륭한 기능입니다. 사용자가 원할 때 곧바로 프로그램이 사용자에게 반응하도록 하고 싶을 때가 있습니다. 이벤트는 그때를 위한 것입니다.</td><td>이벤트</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">코스 B</th>
    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - 움직여, 움직여</a><br><small>학생들은 이 수업을 통해 이 코스를 진행하면서 맞닥뜨릴 코딩 연습에 대한 정신적 준비를 하게 됩니다. 작게 팀을 꾸려 목표를 달성할 때까지 친구들을 이리저리 조심스럽게 움직이도록 프로그래밍해보는 신체 활동을 합니다 </td><td>시퀀싱</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - 루프에 빠져들기</a><br><small>더 길고 더 흥미로운 프로그램을 작성하기 시작하면 대개 코드에 반복이 많아집니다. 이 수업에서 학생들은 춤에서 반복되는 동작의 패턴을 보며 루프를 어떻게 사용하면 더 쉽게 명령을 전달할 수 있는지 배워봅니다.</td><td>루프</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - 꼭 맞는 앱</a><br><small>이 수업에서 학생들은 컴퓨터 과학이 사람들의 실생활에 도움이 된다는 것을 알게 됩니다. 가상의 스마트폰 사용자들의 요구 사항을 다뤄주는 “꼭 맞는 앱”을 찾아줄 수 있도록 그들에게 감정을 이입하는 것부터 시작합니다. 그런 다음 공감과 창의력을 발휘해 또 하나의 추가 사용자의 요구 사항을 다루는 자신만의 스마트폰 앱을 스케치합니다.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>  </tr>
       <tr>
    <th rowspan="4" id="t03">코스 C</th>
    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - 내 로봇 친구들 주니어</a><br><i>*준비물: 플라스틱 컵(2~3명 그룹당 10개)</i><br><small>학생들은 코드의 자리에 기호 세트를 사용해 “로봇”이 다양한 패턴으로 컵을 쌓을 수 있도록 명령하는 알고리즘을 디자인합니다. 차례차례 돌아가며 로봇으로 참여해 친구들이 정의한 알고리즘에 따라서만 응답해봅니다. 이 세그먼트에서 학생들은 기호와 동작 간의 관계, 알고리즘과 프로그램 간의 차이, 그리고 디버깅이라는 아주 유익한 기능을 배웁니다.</td><td>시퀀싱</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
   <tr>
   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - 내 루프 로봇 친구 주니어</a><br><i>*준비물: 종이컵(4명 그룹당 20개)</i><br><small>개요학생들은 초기 “내 로봇 친구들” 활동을 바탕으로 더 크고 복잡한 디자인을 다뤄봅니다. 자신들의 “로봇”이 더 커진 디자인을 완성할 수 있도록 프로그램하려면 루프로 대체할 수 있는 명령 속 패턴을 식별해야 합니다.</td><td>루프</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
       <tr>
   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - 더 빅 이벤트</a><br><small>곧 학생들은 이벤트가 사전 작성된 알고리즘에 유연성를 더하는 훌륭한 방법이라는 것을 배우게 됩니다. 사용자가 원할 때 곧바로 프로그램이 사용자에게 반응하도록 하고 싶을 때가 있습니다. 이벤트는 프로그램을 더 흥미롭고 더 상호적으로 만들 수 있습니다.</td><td>이벤트</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
        </tr>
      <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - 이진법 팔찌</a><br><i>*준비물: 마커. 선택 사항 –학생당 파이프 블리너 1개, 검은색 비즈 18개/흰색 비즈 18개</i><br><small>컴퓨터의 세계에서 이진법은 정말 중요합니다. 오늘날 대부분의 컴퓨터는 정보의 유형에 관계없이 모두 이진법 형태로 저장하기 때문입니다. 이 수업에서는 현실 속 무언가를 켜짐과 꺼짐의 일련으로 변환하는 일이 어떻게 가능한지를 보여줄 것입니다.</td><td>이진법</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">코스 D</th>
    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - 그래프용지 프로그래밍<br></a><small>서로서로 그림을 그리도록 “프로그래밍”함으로써 학생들은 프로그래밍의 핵심 개념을 재미있고 이해하기 쉽게 경험하게 됩니다. 수업은 학생들이 기호를 사용해 서로서로 명령을 내려 그래프용지 위 네모를 색칠해 기존의 그림을 재현하게 하는 것으로 시작합니다. 시간이 된다면 학생들이 스스로 제작한 이미지로 수업을 마무리지어도 됩니다.</td><td>시퀀싱</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - 릴레이 프로그래밍<br></a><small>이 활동은 디버깅과 지속성에 대한 짧은 수업으로 시작해 학생들이 팀을 이뤄 협력하며 한 번에 한 명령씩 프로그램을 작성하는 경쟁으로 빠르게 이어집니다.</td><td>시퀀싱</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - 카드로 배우는 조건문</a><br><small>이 수업에서는 조건문을 사용하여 특정 정보에 맞게 프로그램을 조정하는 방법을 보여줍니다. 우리가 프로그램을 작성할 때 필요한 모든 정보를 항상 가지고 있는 것이 아닙니다. 코드가 실행 중인 때에 어떤 상황이 참이 될지는 모르나 상황에 따라 무언가가 달라지기를 원할 때가 있습니다. 바로 그때 조건문이 필요합니다. 조건문을 사용하면 언제든 코드가 실행 중일 때 참인 정보를 바탕으로 컴퓨터가 결정을 내리도록 할 수 있습니다.+</td><td>조건문</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

    </tr>
         <tr>
    <th rowspan="3" id="t05">코스 E</th>
    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - 디지털 공유</a><br><i>*준비물: 스마트폰 또는 태블릿</i><br><small>Copyright and Creativity 팀에서 컴퓨터 과학 기초에 빌려준 이 수업은 학생들이 특히 디지털 환경에서 소유권과 저작권을 존중할 때의 어려움과 이점을 이해할 수 있도록 도와줍니다. 예술가의 권리를 존중하는 일이 도덕적인 디지털 시민이 되는 데 중요한 부분이라는 것을 학생들에게 알려주어야 합니다.</td><td>디지털 시민 정신</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - 작사·작곡</a><br><small>컴퓨터 과학의 세계에서 가장 숭고한 구조 중 하나는 바로 함수입니다. 함수(프로시저라고도 합니다) 는 더 큰 프로그램 안에서 몇 번이고 사용할 수 있는 미니 프로그램입니다. 이 수업을 통해 학생들은 코드 덩어리들을 함수로 결합하는 일이 어째서 그토록 유용한 연습이 될 수 있는지를 직관적으로 이해하게 됩니다.</td><td>함수</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 - 접근성을 위한 디자인하기</a><br><small>이 수업에서 학생들은 가상의 앱을 위한 브레인스토밍과 접근 가능한 솔루션을 통해 공감의 가치와 접근성에 대해 배웁니다.</td><td>컴퓨팅의 영향</td><td><img src="/images/e18.png" width="90%"></td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">코스 F</th>
           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 -빈칸 이야기</a><br><i>*준비물: 봉투 6장(종이 또는 색인 카드 반으로 접어도 가능)</i><br><small>학생들은 빈칸 채우기 이야기를 맥락으로 활용해(Mad Libs®와 유사) 컴퓨터가 사용자에게서 입력을 받고 보관하다가 나중에 프로그램이 실행되었을 때 어떻게 그것을 사용하는지를 이해하게 됩니다.
   </td><td>변수</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
    </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - 재미난 루프를 위하여</a><br><i>*준비물: 주사위(2~4명 그룹당 주사위 3개)</i><br><small>루프를 사용하면 작업이 계속해서 반복된다는 것은 알고 있습니다. 이제는 추가 구조가 자체적으로 내장된 루프를 사용하는 법을 알아볼 것입니다. 이 새로운 구조들을 사용하면 학생들이 더 강력하고 역동적인 코드를 만들 수 있습니다.</td><td>루프를 위하여</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - 인터넷</a><br><small>인터넷을 매일 사용하는 사람은 많지만 어떻게 작동하는지를 아는 사람은 거의 없습니다. 이 수업에서 학생들은 인터넷을 돌고 돌는 상황을 가정하고 연결과 URL, IP 주소, DNS에 대해 배워봅니다.</td><td>데이터</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## 부가 언플러그드 수업

다음 수업들은 개념별로 정리되었으며 이전 CS 기초 코스 버전에서 이용할 수 있습니다. 이 수업들을 활용하고자 계획 중에 참고하면 좋을 부가 자료의 내용:
* [2019 코스 A-F 커리큘럼 가이드](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 코스 A-F 준비물 목록](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 코스 Amazon 목록](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 코스 A-F 커리큘럼 가이드](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 코스 A-F 커리큘럼 가이드(v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [코스 1-4 커리큘럼 가이드](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF 플래시카드](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>개념</th>
    <th width=65%><center><big>수업 계획 <br>
<small> 수업 계획에는 부가 자료(슬라이드, 동영상, 해답지 등) 가 포함되어 있습니다.
</th>
     <th><center><big>자료</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>디지털 시민 정신</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">크라우드소싱</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education에서 다양한 언플러그드 활동이 포함된 <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">Digital Citizenship Curriculum 전문</a>을 찾아볼 수 있습니다.</td>
    <tr>
    <th id=t07>이진법</th>
        <td><a href=”https://curriculum.code.org/csf-20/coursed/16/">이진법 이미지 
</a><br><small>*준비물:선택 - 학생들이 볼 수 있게끔 반대 방향으로 항목 분류. 대부분 사람들은 이진법을 무조건 0과 1로 생각합니다. 정보가 여러 가지 이진법으로 나타날 수 있다는 사고방식을 학생들에게 소개할 것입니다. 이 수업에서는 이진법 개념을 한 수준 끌어올려 컴퓨터가 어떻게 훨씬 더 복잡한 정보(이미지나 색상 등)까지도 이진법으로 보관할 수 있는지를 설명합니다.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>루프</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">내 루프 로봇 친구들</a><br><small>여기서 학생들은 “내 로봇 친구들”의 언어를 활용해 친구들을 “프로그래밍”하며 루프의 다용도성과 단순성을 배워봅니다. 루프의 소개가 끝나면 학생들이 더 큰 구조를 더 빠르게 만들게 됩니다.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>함수</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">함수 선캐처</a><br><small>이 수업에서 학생들은 끈과 비즈, 특별한 장식물을 가지고 선캐처를 만들어봅니다. 반복되는 일련의 단계를 수행한 다음 여러 차례 중복되는 “능력” 세트를 식별해야 합니다. 이러한 능력들은 정의가 끝나면 메인 프로그램에서 호출되며 창조라는 아름다운 과정 전체가 종이 한 장에 기록됩니다. 최종 프로그램은 어떤 종류의 끈, 비즈, 장식물을 사용하든 학급 전체를 대상으로 합니다. 이를 효과적으로 하려면 학생들이 특정 재료의 세세한 부분을 “추출”해 각 준비물에 모호한 용어를 붙여야 합니다. 일반 자리 표시자를 이렇게 사용하면 변수를 훌륭하게 소개할 수 있습니다.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">수업 동영상</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">활동 수업 보기</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Activity Answer Key <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">평가 해답지</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">매개변수를 이용한 작사·작곡</a><br><small>컴퓨터 과학의 세계에서 가장 숭고한 구조 중 하나는 바로 함수입니다. 함수(프로시저라고도 합니다) 는 더 큰 프로그램 안에서 몇 번이고 사용할 수 있는 미니 프로그램입니다. 이 수업에서 학생들은 코드 덩어리들을 함수로 결합하는 일이 어째서 그토록 유용한 연습이 될 수 있는지, 코드 덩어리들이 약간 달라져도 어떻게 하면 그 구조를 사용할 수 있는지를 직관적으로 이해하게 됩니다.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>알고리즘</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">주사위 레이스</a><br><small>이 수업에서 학생들은 주사위 레이스 게임을 하며 알고리즘의 개념을 다시금 현실과 결부시켜봅니다. 여기서 목표는 현실 세계의 상황을 온라인 시나리오로, 또는 그 반대의 경우로 변환하는 능력을 기르는 것입니다.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">내 로봇 친구</a><br><small>학생들이 미리 정의된 기호 키를 활용하여 구두 명령을 사용하지 않고도 특정 과제를 완수하도록 서로를 이끄는 방법을 배우게 됩니다. 이 세그먼트에서 학생들은 기호와 동작 간의 관계, 알고리즘과 프로그램 간의 차이, 그리고 디버깅이라는 아주 유익한 능력을 배웁니다.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">현실 속 알고리즘: 종이비행기</a><br><small>이 수업에서 학생들은 다시금 알고리즘의 개념을 일상 활동과 결부시켜봅니다. 먼저 알고리즘에 대해 의견을 나눈 후 알고리즘을 사용해 종이비행기를 만들어봅니다. 여기서 목표는 현실 세계의 상황을 온라인 시나리오로, 또는 그 반대의 경우로 변환하는 능력을 기르는 것입니다.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">현실 속 알고리즘: 씨앗 심기</a><br><small>이 수업에서 학생들은 실제로 씨앗을 심어보면서 알고리즘의 개념을 다시금 일상 속 현실 활동과 결부시켜봅니다. 여기서 목표는 현실 세계의 상황을 온라인 시나리오로, 또는 그 반대의 경우로 변환하는 능력을 기르는 것입니다.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">탱그램</a><br><small>이 수업에서는 알고리즘에 대한 중요한 사실을 찾아볼 수 있습니다. 알고리즘은 너무 복잡해지지만 않는다면 여러 가지 방법으로 활용할 수 있습니다. 하지만 누구나 똑같은 결과를 얻게 하려면 더 세세한 알고리즘이 필요합니다. 학생들은 탱그램을 하면서 세세한 알고리즘과 대강적인 알고리즘의 차이를 배워봅니다.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">컴퓨팅 사고</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">컴퓨팅 사고</a><br><small>이 활동의 경우, 설명이 제공되지 않습니다. 그 대신 학생들은 상상 속 플레이어들이 게임을 하는 방법을 알아내고자 한 일의 예시들을 활용하게 됩니다. 이 수업은 하나의 응집성 활동을 통해 컴퓨팅 사고의 네 가지 분야(분해, 패턴 일치, 추출, 알고리즘)를 연습할 기회입니다.</td> <td><a href="https://youtu.be/TlAaklrolA0">수업 동영상</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">활동 수업 보기</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">활동 해답지 </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">몬스터와 함께하는 컴퓨팅 사고</a><br><small>학생들은 종이와 마커만 가지고 컴퓨터 사고의 네 가지 단계를 배워봅니다. 짧게 소개가 끝나면 학생들끼리 그룹을 나누고 서로서로 특정 몬스터(미리 선정된 몬스터 카탈로그에서) 를 그리기 위한 지시문을 제작하게 합니다. 과제는 전부 분해되어야 합니다. 이후, 팀들은 카탈로그의 모든 몬스터를 분석해 패턴을 찾고 몬스터의 유사한 부분을 추출한 다음 그 정보를 사용해 다른 팀이 특정 몬스터를 그리도록 알고리즘(지시문) 을 만듭니다. 그런 다음 그룹끼리 알고리즘을 교환해 해당 알고리즘이 가리키는 대로 몬스터를 그려봅니다. 그림이 원래 팀이 의도한 대로 되었나요?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">결백한 버그</a><br><small>이 수업에서는 학생들과 디버깅을 하나하나 짚어봅니다. 학생들은 “무슨 일이 벌어진 거지?”라는 만트라를 배우게 됩니다. 원래는 어땠어야 했지? 무엇을 알 수 있니? </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>지속성</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">기초 세우기</a><br><small>새로 등장한 해결되지 않은 문제는 꽤 어려운 경우가 다반사입니다. 우리가 무언가 창의적이고 유용하고 재치 있는 것을 만들어보고자 한다면 성공하기까지 몇 차례 실패를 하리라 할지라도 어려운 문제를 그냥 넘기지 않겠다는 의지가 필요합니다. 이 수업에서 학생들은 평범한 재료로 구조물을 지어봅니다. 그리고 그 구조물이 교과서를 10초 이상 지탱할 수 있는지 시험합니다. 대부분은 첫 시도에 실패하겠지만 포기하지 않고 계속 시도하는 것이 중요합니다.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">스티비와 큰 프로젝트</a><br><small>학생들은 질문에 답을 하거나 프로젝트 작업을 하는 중에 장애물을 맞닥뜨리면 좌절하고 포기하는 경우가 많습니다. 이 수업에서는 학생들에게 좌절감이 배움의 중요한 일부라는 사고방식을 소개합니다. 여기서 좌절감은 실패의 징후보다는 창의적 과정의 한 단계로 제시됩니다. 이 수업은 몇 차례에 걸쳐서 해도 좋습니다. 시간이 더 있다면 마블런 활동에서 짓기 단계와 고치기 단계를 길게 끌어봅니다.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>추출</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">매드 글립스</a><br><small>추출은 컴퓨터 과학자가 이해해야 할 아주 중요한 기능입니다. 문제를 단순화하고 불필요한 반복을 방지합니다. 훌륭한 프로그래머는 거의 매번 프로그램을 제작할 때마다 추출을 사용합니다. 이 활동에서 학생들은 이야기별로 다른 점을 찾고 분석해 추출합니다. 추출된 이야기는 재미있고 색다른 새 이야기의 템플릿이 됩니다.</td> <td><a href="https://youtu.be/TctGRrUdkcc">수업 동영상</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">활동 해답지</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">평가 해답지</a></td>
  </tr>
<tr>
   <th id=t07>변수</th>
     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">봉투 변수</a><br><i>*준비물: 봉투(2~4명 그룹당 1~4장)</i><br><small>변수는 숫자나 단어 같은 값에 대한 자리 표시자로 사용됩니다. 변수를 사용하면 프로그래밍에서 상당한 자유를 누릴 수 있습니다. 컴퓨터 과학자들은 구문을 여러 번 입력하거나 모호한 수를 기억해야 할 필요가 없이 변수를 사용해 참조합니다. 이 수업에서는 변수가 무엇인지, 어떻게 하면 다양한 방식으로 사용할 수 있는지를 설명합니다. 변수라는 개념은 이해하기가 쉽지 않으므로 수업이 끝난 후에 충분한 시간을 두고 의견을 나눠보기를 권장합니다.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

