---
title: Fondamentaux CS hors ligne
video_player: true
theme: responsive
---

# Fondamentaux CS hors ligne

Nous avons compilé une liste de toutes nos leçons hors ligne pour que vous puissiez les utiliser dans votre classe. Vous pouvez désormais enseigner les bases de l'informatique, que vous ayez ou non des ordinateurs dans votre classe !
<br>
<div class="col-50">
Nous parlons des cours lors desquels les élèves n’utilisent pas l’ordinateur « hors ligne ». Ils travailleront plutôt avec des crayons, du papier ou des objets à manipuler.  Il s'agit d'opportunités kinesthésiques intentionnellement placées qui aident les élèves à digérer des concepts compliqués pour faire un lien avec leur propre vie. <br><br>Les cours hors ligne sont particulièrement utiles pour créer et maintenir un environnement de classe collaboratif, car ce sont des expériences de référence utiles, sur lesquels vous pourrez revenir quand vous expliquerez des concepts plus abstraits. Chacune de ces activités peut être utilisée, seule ou avec d'autres cours d'informatique sur des concepts en relation avec ceux-ci.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;À partir de 4 ans, anglais uniquement
</div>

<div style="clear: both;"></div>

***
## Cours hors ligne dans CS Fundamentals 2021-22
Les cours suivants se trouvent dans <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">CS Fundamentals 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Cours</th>    <th><center><big>Lesson Plan</th>     <th width=10%><center><big>Concept</th>    <th width=20%><center><big>Video</th>     <tr>    <th rowspan="3" id="t01">Course A</th>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - Happy Maps</a><br><small>Ce cours hors ligne permet de grouper les équipes autour d'une tâche simple : amener le « flurb » au fruit. Les élèves s'exerceront à rédiger des instructions précises tout en s'efforçant de traduire les instructions en symboles fournis. Si des problèmes surviennent dans le code, les élèves devront également travailler ensemble pour reconnaître les bogues et élaborer des solutions.</td><td>Sequençage</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>  </tr>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - Happy Loops</a><br><small>Cette activité revisite Happy Maps. Cette fois, l'élève résoudra des énigmes plus grandes et plus longues avec son code, ce qui l’amènera à voir l'utilité des structures qui lui permettent d'écrire plus facilement du code plus long.</td><td>Boucles</td> <td><img src="/images/a7.png" width="90%"></td>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - Le grand événement Jr.</a><br><small>Les événements sont un excellent moyen d'ajouter de la variété à un algorithme pré-écrit. Il faut parfois que votre programme soit capable de répondre à l'utilisateur exactement quand il le souhaite. C'est à cela que servent les événements.</td><td>Événements</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>  </tr>       <tr>    <th rowspan="3" id="t02">Course B</th>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - Move It, Move It</a><br><small>Cette leçon travaillera à préparer mentalement les étudiants aux exercices de codage qu'ils rencontreront tout au long de ce cours. Les élèves utiliseront l'activité physique, en petits groupes, pour programmer leurs camarades de classe pour qu’ils se déplacent prudemment d'un endroit à l'autre jusqu'à ce qu'un objectif soit atteint.</td><td>Séquençage</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - Getting Loopy</a><br><small>Quand on commence à écrire des programmes plus longs et plus intéressants, notre code contient souvent beaucoup de répétitions. Dans cette leçon, les élèves apprendront à se servir des boucles pour transmettre plus facilement des instructions qui ont beaucoup de répétition, en examinant les schémas de mouvement répétés dans une danse.</td><td>Boucles</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - La bonne appli</a><br><small>Cette leçon permet aux élèves de se rendre compte que l'informatique peut aider les gens dans la vraie vie. Tout d'abord, il faut qu’ils apprennent à se reconnaître dans plusieurs utilisateurs fictifs de smartphones pour les aider à trouver la « bonne application », celle qui répond à leurs besoins. Ensuite, ils doivent faire preuve d'empathie et de créativité pour esquisser leur propre application pour smartphone, répondant aux besoins d'un autre utilisateur</td><td>Impacts de l'informatique</td> <td><img src="/images/b10.png" width="90%"></td>  </tr>       <tr>    <th rowspan="4" id="t03">Cours C</th>    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - Mes amis robotiques Jr.</a><br><i>*Fournitures : gobelets en plastique (10/groupe de 2-3)</i><br><small>En utilisant un ensemble de symboles à la place du code, les élèves concevront des algorithmes pour ordonner à un « robot » d'empiler des gobelets selon différents modèles. Les élèves participeront à tour de rôle en tant que robot, ne répondant qu'à l'algorithme défini par leurs camarades. Ce segment leur enseigne le lien entre les symboles et les actions, la différence entre un algorithme et un programme et la précieuse compétence du débogage.</td><td>Sequençage</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>  </tr>   <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - Mon ami robotique Loopy Jr</a><br><i>*Fournitures : gobelets en papier (20/groupe de 4)</i><br><small>AperçuEn s'appuyant sur l'activité initiale « Mes amis robotiques », les élèves abordent des conceptions plus grandes et plus compliquées. Afin de programmer leurs « robots » pour réaliser ces conceptions plus grandes, ils devront identifier des modèles répétés dans leurs instructions qui pourraient être remplacés par une boucle.</td><td>Boucles</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>  </tr>       <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - Le Grand Événement</a><br><small>Les élèves apprendront bientôt que les événements sont un excellent moyen d'ajouter de la flexibilité à un algorithme pré-écrit. Il faut parfois que votre programme soit capable de répondre à l'utilisateur exactement quand il le souhaite. Les événements peuvent rendre votre programme plus intéressant et interactif.</td><td>Événements</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>   </tr>       </tr>     <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - Bracelets Binaires</a><br><i>*Fournitures : Marqueurs. Facultatif - 18 perles noires / 18 blanches, 1 cure-pipe par élève</i><br><small>Le binaire est extrêmement important dans le monde des ordinateurs. La majorité des ordinateurs stockent aujourd'hui toutes sortes d'informations sous forme binaire. Cette leçon aide à démontrer comment il est possible de prendre quelque chose de la vie réelle pour le traduire en une série de « On » et « Off »</td><td>Binaire</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>  
</tr>         
<tr>    <th rowspan="3" id="t04">Cours D</th>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - Programmation sur papier millimétré<br></a><small>En se « programmant » les uns aux autres pour dessiner, les élèves ont l'occasion d'expérimenter certains des concepts de base de la programmation d'une manière amusante et accessible. La classe commencera par demander aux élèves d'utiliser des symboles pour s'enseigner mutuellement à colorier des carrés sur du papier quadrillé dans le but de reproduire une image existante. S'il reste du temps, la leçon peut se terminer par des images que les élèves créent eux-mêmes.</td><td>Séquençage</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - Programmation des relais<br></a><small>Cette activité commencera par une courte leçon sur le débogage et la persévérance, puis passera rapidement à une course contre la montre alors que les étudiants se divisent en équipes et travaillent ensemble pour écrire un programme, une instruction à la fois.</td><td>Séquençage</td><td >{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>      </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - Conditions avec cartes</a><br><small>Cette leçon montre comment les conditions peuvent être utilisées pour adapter un programme à des informations spécifiques. Nous n'avons pas toujours toutes les informations dont nous avons besoin pour écrire un programme. Il faudra parfois faire quelque chose de différent dans une situation par rapport à une autre, même si vous ne savez pas quelle situation sera vraie lorsque votre code s'exécutera. C'est là qu'interviennent les conditions. Les conditions permettent à un ordinateur de prendre une décision, sur la base des informations qui sont vraies à chaque fois que votre code est exécuté.+</td><td>Conditions</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>    </tr>         <tr>    <th rowspan="3" id="t05">Cours E</th>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - Partage numérique</a><br><i>*Fournitures : Smartphone ou tablette</i><br><small>Prêtée à Computer Science Fundamentals par l'équipe de Copyright and Creativity, cette leçon a pour but d'aider les élèves à comprendre les défis et les avantages du respect de la propriété et du droit d'auteur, en particulier dans les environnements numériques. Il faut les encourager à respecter les droits des artistes en tant qu'élément important d'un citoyen numérique éthique.</td><td>Citoyenneté numérique</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - Écriture de chansons</a><br><small>L’une des plus belles structures dans le monde informatique est la fonction. Les fonctions (parfois appelées procédures) sont des mini programmes que vous pouvez utiliser encore et encore, à l'intérieur de votre plus gros programme. Cette leçon aidera les élèves à comprendre intuitivement pourquoi combiner des morceaux de code dans des fonctions peut être une pratique si utile.</td><td>Fonctions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 - Concevoir pour l'accessibilité</a><br><small>Dans cette leçon, ils découvriront l'accessibilité et la valeur de l'empathie grâce à un brainstorming et à la conception de solutions accessibles pour des applications hypothétiques.</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width ="90%"></td>  </tr>    </tr>         <tr>    <th rowspan="3" id="t06">Cours F</th>           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 -Histoires de l'espace vide</a><br><i>*Fournitures : 6 enveloppes (convient également : papier ou fiches, pliées en deux)</i><br><small>Ils utiliseront des histoires à compléter (similaires à Mad Libs®) comme contexte pour comprendre comment les ordinateurs prennent et stockent l'entrée d'un utilisateur, puis l'utiliser plus tard lorsqu'un programme s'exécute.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>  </tr>        <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Fournitures : Dés (3 dés/groupe de 2-4)</i><br><small>Nous savons que les boucles nous permettent de faire des choses encore et encore, mais maintenant nous allons apprendre à utiliser des boucles qui ont des structures supplémentaires intégrées. Ces nouvelles structures permettront aux étudiants de créer un code plus puissant et plus dynamique.</td><td>Boucles « pour » (for)</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - Internet</a><br><small>Même si de nombreuses personnes utilisent Internet tous les jours, peu de gens savent comment cela fonctionne. Dans cette leçon, les étudiants feront semblant de naviguer sur Internet, tout en apprenant les connexions, les URL, les adresses IP et le DNS.</td><td>Données</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## Autres cours hors ligne

Les leçons suivantes sont organisées par concept et peuvent être trouvées dans les versions antérieures de nos cours CS Fundamentals. Voici les autres ressources que vous pouvez consulter lorsque vous prévoyez d'utiliser ces leçons :
* [Guide du programme du cours A-F 2019](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [Liste des fournitures du cours A-F 2019](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [Listes Amazon des cours 2019](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [Guide du programme A-F, cours 2018](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [Guide du programme A-F, cours 2017 (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Guide du programme, cours 1-4](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Flashcards CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Concept</th>    <th width=65%><center><big>Plan de cours <br><small> Le plan de cours comprend des ressources supplémentaires (diapositives, vidéos, corrigés, etc.).
</th>
     <th><center><big>Ressources</th>     
<tr>    
<th rowspan="2" id=t07 width=5%>Citoyenneté numérique</th>    
<td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>  
</tr>  
<tr>      
<td colspan="2">*Common Sense Education propose un <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> programme complet de citoyenneté numérique</td> qui comprend de nombreuses activités hors ligne.    
<tr>    
<th id=t07>Binaire</th>        
<td><a href="https://curriculum.code.org/csf-20/coursed/16/">Fournitures</a><br><small>Facultatif - Regroupements d'éléments opposés à afficher aux élèves. Bien que de nombreuses personnes voient le binaire comme une simple succession de zéros et de uns, les élèves découvriront l'idée que l'information peut être représentée dans une variété d'options binaires. Cette leçon pousse ce concept un peu plus loin car elle montre comment un ordinateur peut également stocker des informations encore plus complexes (telles que des images et des couleurs) en binaire.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}< /td> </tr>    <tr>    <th id=t07>Boucles</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Mes amis robotiques Loopy</a><br><small>Ici, les étudiants apprennent la simplicité et l'utilité de boucles en « programmant » leurs amis en utilisant le langage de « Mes amis robotiques » Une fois les boucles introduites, les élèves découvriront qu'ils peuvent construire de plus grandes structures plus rapidement.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Fonctions</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">Attrape-soleil fonctionnels</a><br><small>Dans cette leçon, les élèves fabriqueront un attrape-soleil en ficelle, perles et une breloque spéciale. Ils suivront une série d'étapes répétitives, puis seront invités à identifier certains ensembles de « compétences » qui sont répliquées plusieurs fois. Une fois ces compétences définies, elles seront appelées à partir d'un programme principal et tout le beau processus de création sera enregistré sur une seule feuille de papier. Le programme final s'adressera à l'ensemble de la classe, quel que soit leur type de ficelles, perles et breloques. Pour y arriver, ils devront « résumer » les détails de leurs matériaux spécifiques et créer des termes vagues pour les fournitures d'un individu. Cette utilisation d'espaces réservés génériques est une merveilleuse introduction aux variables.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Vidéo de leçon</a><br><a href="https ://www.youtube.com/watch?v=Rb5DNYhLb7I">Voir la leçon en action</a><br><a href="https://www.code.org/curriculum/course3/4/Key- Activity4-FunctionalSuncatchers.pdf">Réponses d'activité <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Réponses d'évaluation</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Écriture de chansons avec paramètres</a><br><small>L'une des plus belles structures dans le monde de la science informatique, c’est la fonction. Les fonctions (parfois appelées procédures) sont des mini programmes que vous pouvez utiliser encore et encore, à l'intérieur de votre plus gros programme. Cette leçon aidera les élèves à comprendre intuitivement pourquoi combiner des morceaux de code en fonctions s’avère une pratique si utile, et comment ils peuvent utiliser ces structures même lorsque des morceaux de code sont légèrement différents.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Algorithmes</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Course de dés</a><br><small>Dans cette leçon, les élèves relateront le concept des algorithmes de retour à des activités réelles en jouant au jeu de dés. L'objectif ici est de commencer à développer les compétences nécessaires pour traduire des situations du monde réel en scénarios en ligne et vice versa.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Mes amis robotiques</a><br><small>À l'aide d'une touche de symbole prédéfinie, vos élèves comprendront comment se guider les uns les autres pour accomplir des tâches spécifiques sans utiliser de commandes verbales. Ce segment enseigne aux élèves le lien entre les symboles et les actions, la différence entre un algorithme et un programme, et la précieuse compétence du débogage.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Algorithmes réels : avions en papier</a><br><small>Dans cette leçon, les élèves feront le lien entre le concept d'algorithmes aux activités quotidiennes. Après avoir discuté des algorithmes, les élèves fabriqueront des avions en papier à l'aide d'un algorithme. L'objectif ici est de commencer à développer les compétences nécessaires pour traduire des situations du monde réel en scénarios en ligne et vice versa.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Algorithmes de la vie réelle : planter une graine</a><br><small>Dans cette leçon, les élèves pourront faire le lien entre le concept d'algorithmes et les activités quotidiennes et réelles en plantant une véritable graine. L'objectif ici est de commencer à développer les compétences nécessaires pour traduire des situations du monde réel en scénarios en ligne et vice versa.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangrams</a><br><small>Cette leçon nous montre quelque chose d'important sur les algorithmes. Tant que votre algorithme est simple, il existe de nombreuses façons de l'utiliser. Cependant, pour être sûr que tout le mode ait le même résultat, votre algorithme a besoin de plus de détails. Les élèves apprendront la différence entre un algorithme détaillé et général tout en jouant avec des tangrams.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Pensée informatique</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Pensée informatique</a><br><small>Pour cette activité, aucune instruction n'est fournie. Au lieu de cela, les élèves utiliseront des exemples de ce que des joueurs imaginaires ont fait pour comprendre comment jouer au jeu. Cette leçon donne aux élèves la possibilité de pratiquer les quatre arts de la pensée informatique (décomposition, correspondance de motifs, abstraction et algorithmes) dans une activité cohérente.</td> <td><a href="https://youtu.be/ TlAaklrolA0">Vidéo de la leçon</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Voir la leçon en action</a><br><a href=" https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Réponse de l'activité </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Réflexion informatique avec des monstres</a><br><small>Avec rien d'autre que du papier et des marqueurs, les élèves apprendront le quatre étapes de la pensée informatique. Après une brève introduction, il faudra les diviser en groupes où ils devront créer des instructions pour que les autres élèves dessinent un monstre spécifique (à partir d'un catalogue de monstres présélectionnés). L'ensemble de la tâche doit être décomposé, puis les équipes analyseront tous les monstres du catalogue à la recherche de motifs, extrairont des détails similaires des monstres, puis utiliseront ces informations pour créer un algorithme (instructions) permettant à une autre équipe de dessiner un certain monstre. Les équipes échangeront ensuite leur algorithme avec un autre groupe et dessineront le monstre en fonction de ce que cet algorithme indique. Le dessin correspond-il à l'intention de l'équipe d'origine ?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Bogues non repérés</a><br><small>Cette leçon les guidera à travers les étapes de débogage. Ils apprendront le mantra : « Que s'est-il passé ? Que devait-il se passer ? Qu’est-ce que ça veut dire ? » </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Persévérance</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Construire une fondation</a><br><small>Les problèmes nouveaux et non résolus sont souvent assez difficiles. Si nous voulons avoir une chance de faire quelque chose de créatif, d'utile et d'intelligent, alors nous devons être prêts à nous attaquer à des problèmes difficiles, même si cela signifie échouer plusieurs fois avant de réussir. Dans cette leçon, les élèves construiront une structure avec des matériaux communs. La structure sera testée sur sa capacité à tenir un manuel pendant plus de dix secondes. La plupart des élèves n'y arriveront pas du premier coup, mais il est important qu'ils continuent et continuent d'essayer.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie et le grand projet</a><br><small>Quand ils se heurtent à un obstacle pendant qu’ils répondent à une question ou travaillent sur un projet, il est très facile pour eux d'être frustrés et d'abandonner. Cette leçon les familiarisera avec l'idée que la frustration peut être une partie importante de l'apprentissage. Ici, la frustration est présentée comme une étape du processus créatif, plutôt que comme un signe d'échec. Cette leçon peut se faire sur une ou deux séances de cours. Si vous avez plus de temps, n'hésitez pas à dessiner la phase de construction et de révision de l'activité Marble Run.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Abstraction</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>L'abstraction est l'une des compétences les plus importantes à comprendre pour un informaticien. Cela simplifie les problèmes et évite les répétitions inutiles. Un bon codeur utilise l'abstraction à peu près à chaque fois qu'il crée un programme. Cette activité demandera à vos élèves d'analyser des histoires à la recherche de différences afin qu'ils puissent en faire abstraction. Ces histoires abstraites deviennent des modèles pour de nouvelles histoires amusantes et folles.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Vidéo de leçon</a><br><a href="https ://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Réponses de l'activité</a><br><a href="https://www.code.org/curriculum /course4/5/Key-Assessment5-MadGlibs.pdf">Réponses d'évaluation </a></td>  </tr>
<tr>   <th id=t07>Variables</th>​ <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Variables d'enveloppe</a><br><i>*Fournitures : Enveloppes (1-4/ groupe de 2-4)</i><br><small>Les variables sont utilisées comme espaces réservés pour des valeurs telles que des nombres ou des mots. Les variables permettent une grande liberté de programmation. Au lieu d'avoir à taper une phrase plusieurs fois ou à se souvenir d'un nombre obscur, les informaticiens peuvent utiliser des variables pour les référencer. Cette leçon aide à expliquer ce que sont les variables et comment nous pouvons les utiliser de différentes manières. L'idée de variables n'est pas un concept facile à saisir, nous vous recommandons donc de prévoir suffisamment de temps pour la discussion à la fin de la leçon.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

