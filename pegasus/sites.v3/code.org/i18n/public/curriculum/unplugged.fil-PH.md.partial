---
title: CS Fundamentals Unplugged
video_player: true
theme: responsive
---

# CS Fundamentals Unplugged

Nag-compile kami ng listahan ng lahat ng aming hindi naka-plug na mga aralin para magamit mo sa iyong silid-aralan. Ngayon ay maaari mo nang ituro ang mga batayan ng computer science, kung mayroon kang mga computer sa iyong silid-aralan o wala!
<br>
<div class="col-50">
Tinutukoy namin ang mga aralin kung saan ang mga mag-aaral ay hindi nagtatrabaho sa isang computer bilang "unplugged." Ang mga mag-aaral ay madalas na gumagawa ng pasulat o pisikal na manipulatibo.  Ang mga ito ay sadyang inilagay ang mga kinesthetic na pagkakataon na tumutulong sa mga mag-aaral na matunaw ang mga kumplikadong konsepto sa mga paraan na nauugnay sa kanilang sariling buhay. <br><br>Ang mga unplugged lesson ay partikular na nakakatulong para sa pagbuo at pagpapanatili ng collaborative na kapaligiran sa silid-aralan, at ang mga ito ay nakakatulong na touchstone na karanasan na pwede mong sanggunian kapag nagpapakilala ng mas abstract na mga konsepto. Ang bawat isa sa mga aktibidad na ito ay pwedeng gamitin nang mag-isa o kasama ng iba pang mga aralin sa computer science sa mga kaugnay na konsepto.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Ages 4+, Ingles lamang
</div>

<div style="clear: both;"></div>

***
## Mga unplugged lesson sa CS Fundamentals 2021-22
Ang mga sumusunod na lesson ay matatagpuan sa <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">CS Fundamentals 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Kurso</th>    <th><center><big>Lesson Plan</th>     <th width=10%><center><big>Concept</th>    <th width=20%><center><big>Video</th>     <tr>    <th rowspan="3" id="t01">Course A</th>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - Happy Maps</a><br><small>Ang unplugged lesson na ito ay binibigyan ang mga pangkat ng simpleng task: kunin ang "flurb" sa prutas. Magsasanay ang mga mag-aaral sa pagsulat ng tumpak na mga tagubilin habang ginagawa nilang isalin ang mga tagubilin sa mga ibinigay na simbolo. Kung may mga problemang lumabas sa code, dapat ding magtulungan ang mga mag-aaral na kilalanin ang mga bug at bumuo ng mga solusyon.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>  </tr>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - Happy Loops</a><br><small>Ang aktibidad na ito ay muling binibisita ang Happy Maps. Sa pagkakataong ito, lulutasin ng mag-aaral ang mas malalaki, mas mahahabang puzzle gamit ang kanilang code, na humahantong sa kanila na makakita ng utility sa mga istruktura na nagbibigay-daan sa kanila na magsulat ng mas mahabang code sa mas madaling paraan.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - The Big Event Jr.</a><br><small>Ang mga kaganapan ay mahusay na paraan para magdagdag ng iba't-ibang sa isang paunang nakasulat na algorithm. Minsan gusto mong makatugon ang iyong program sa user nang eksakto kung kailan gusto ng user. Iyan ay para sa mga kaganapan.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>  </tr>       <tr>    <th rowspan="3" id="t02">Course B</th>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - Ilipat Ito, Ilipat Ito</a><br><small>Ang araling ito ay gagana para maihanda ang mga mag-aaral sa pag-iisip para sa mga pagsasanay sa coding na kanilang makakaharap sa haba ng kursong ito. Sa maliliit na pangkat, gagamit ang mga mag-aaral ng pisikal na aktibidad para iprograma ang kanilang mga kaklase na maingat na humakbang sa bawat lugar hanggang sa makamit ang isang layunin.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - Getting Loopy</a><br><small>Habang nagsisimula kaming magsulat ng mas mahaba at mas kawili-wiling mga programa, ang aming code ay madalas na naglalaman ng maraming pag-uulit. Sa araling ito, matututunan ng mga mag-aaral ang tungkol sa kung paano magagamit ang mga loop para mas madaling maiparating ang mga tagubilin na mayroong maraming pag-uulit sa pamamagitan ng pagtingin sa paulit-ulit na mga pattern ng paggalaw sa isang sayaw.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - Ang Tamang App</a><br><small>Ang araling ito ay nagpapakilala sa mga mag-aaral na ang computer science ay makakatulong sa mga tao sa totoong buhay. Una, nakiramay ang mga mag-aaral sa ilang fictional na smartphone user para matulungan silang mahanap ang "tamang app" na tumutugon sa kanilang mga pangangailangan. Pagkatapos, nagsasagawa ang mga mag-aaral ng empatiya at pagkamalikhain para mag-sketch ng kanilang sariling smartphone app na tumutugon sa mga pangangailangan ng isang karagdagang user.</td><td>Mga Epekto ng Pag-compute</td> <td><img src="/images/b10.png" width="90%"></td>  </tr>       <tr>    <th rowspan="4" id="t03">Course C</th>    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Mga Supply: Mga plastik na tasa (10/pangkat ng 2-3)</i><br><small>Gamit ang isang hanay ng mga simbolo bilang kapalit ng code, magdidisenyo ang mga mag-aaral ng mga algorithm para turuan ang "robot" na magsalansan ng mga tasa sa iba't ibang pattern. Ang mga mag-aaral ay maghahalinhinan sa pakikilahok bilang robot, tumutugon lamang sa algorithm na tinukoy ng kanilang mga kapantay. Itinuturo ng segment na ito sa mga mag-aaral ang koneksyon sa pagitan ng mga simbolo at aksyon, ang pagkakaiba sa pagitan ng algorithm at programa, at ang mahalagang kasanayan sa pag-debug.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>  </tr>   <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - Ang Aking Loopy Robotic na Kaibigan na si Jr</a><br><i>*Mga Supply: Mga plastik na tasa (20/pangkat ng 4)</i><br><small>Pangkalahatang-ideyaPagbuo sa paunang aktibidad na "My Robotic Friends", ang mga mag-aaral ay humaharap sa mas malaki at mas kumplikadong mga disenyo. Para ma-programa ang kanilang "mga robot" para makumpleto ang mas malalaking disenyong ito, kakailanganin ng mga mag-aaral na tukuyin ang mga paulit-ulit na pattern sa kanilang mga tagubilin na pwedeng mapalitan ng isang loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>  </tr>       <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Minsan gusto mong makatugon ang iyong program sa user nang eksakto kung kailan gusto ng user. Ang mga kaganapan ay pwedeng gawing mas kawili-wili at interactive ang iyong programa.</td><td>Mga Kaganapan</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>   </tr>        </tr>      <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - Binary na mga Pulseras</a><br><i>*Mga Kagamitan: Mga marker. Opsyonal â€“ 18 itim/18 puting kuwintas, 1 tagalinis ng tubo bawat mag-aaral</i><br><small>Napakahalaga ng binary sa mundo ng mga computer. Ang karamihan ng mga computer ngayon ay nag-iimbak ng lahat ng uri ng impormasyon sa pormang binary. Tumutulong ang araling ito na ipakita kung paano posibleng kumuha ng isang bagay mula sa totoong buhay at isalin ito sa isang serye ng mga ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>  </tr>         <tr>    <th rowspan="3" id="t04">Course D</th>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - Programming ng Graph Paper<br></a><small>Sa pamamagitan ng "programming" sa isa't isa para gumuhit ng mga larawan, ang mga mag-aaral ay nagkakaroon ng pagkakataong maranasan ang ilan sa mga pangunahing konsepto ng programming sa isang masaya at madaling paraan. Magsisimula ang klase sa pamamagitan ng pagpapagamit sa mga mag-aaral ng mga simbolo para turuan ang isa't isa na kulayan ang mga parisukat sa graph paper sa pagsisikap na muling makagawa ng isang umiiral na larawan. Kung may oras, maaaripwedeng ng tapusin ang aralin sa mga larawang nilikha ng mga mag-aaral sa kanilang sarili.</td><td>Pagsusunod-sunod</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - Ihatid ang Programming<br></a><small>Ang aktibidad na ito ay magsisimula sa maikling aralin sa pag-debug at pagtitiyaga, pagkatapos ay mabilis na lilipat sa isang karera laban sa orasan habang ang mga mag-aaral ay naghahati sa mga pangkat at nagtutulungan na magsulat ng isang programa nang paisa-isa.</td><td>Pagsusunod-sunod</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>      </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - Mga kondisyon na may mga Card</a><br><small>Ipinapakita ng araling ito kung paano magagamit ang mga kondisyon para maiangkop ang isang programa sa partikular na impormasyon. Hindi palaging nasa amin ang lahat ng impormasyong kailangan namin kapag nagsusulat ng programa. Minsan gugustuhin mong gumawa ng ibang bagay sa isang sitwasyon kaysa sa isa pa, kahit na hindi mo alam kung anong sitwasyon ang magiging totoo kapag gumana ang iyong code. Doon pumapasok ang mga kondisyon. Ang mga kondisyon ay nagbibigay-daan sa isang computer na gumawa ng desisyon, batay sa impormasyong totoo anumang oras na gumana ang iyong code.+</td><td>Mga kondisyonal</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>    </tr>         <tr>    <th rowspan="3" id="t05">Kursong E</th>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - Digital na Pagbabahagi</a><br><i>*Mga Supply: Smartphone o tablet</i><br><small>Pinahiram sa Computer Science Fundamentals ng pangkat sa Copyright at Creativity, umiiral ang araling ito para tulungan ang mga mag-aaral na maunawaan ang mga hamon at benepisyo ng paggalang sa pagmamay-ari at copyright, partikular sa mga digital na kapaligiran. Dapat hikayatin ang mga mag-aaral na igalang ang mga karapatan ng mga artista bilang isang mahalagang bahagi ng pagiging isang etikal na digital citizen.</td><td>Digital Citizenship</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - Pagsulat ng kanta</a><br><small>Isa sa mga pinaka-kahanga-hangang istruktura sa mundo ng computer science ay ang function o tungkulin. Ang mga function o tugkulin (minsan ay tinatawag na mga pamamaraan) ay mga mini program na pwede mong gamitin nang paulit-ulit sa loob ng iyong mas malaking programa. Ang araling ito ay makakatulong sa mga mag-aaral na madaling maunawaan kung bakit ang pagsasama-sama ng mga chunk ng code sa mga function ay pwedeng maging isang kapaki-pakinabang na kasanayan.</td><td>Mga Function</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 -Pagdidisenyo para sa Accessibility</a><br><small>Sa araling ito, matututunan ng mga mag-aaral ang tungkol sa pagiging naa-access at ang halaga ng empatiya sa pamamagitan ng brainstorming at pagdidisenyo ng mga naa-access na solusyon para sa hypothetical na apps.</td><td>Mga Epekto ng Pag-compute</td><td><img src="/images/e18.png" width="90%"></td>  </tr>    </tr>         <tr>    <th rowspan="3" id="t06">Course F</th>           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 -Mga Kwento ng Blank Space</a><br><i>*Mga Supply: 6 na sobre (angkop din: papel o mga index card, nakatiklop sa kalahati)</i><br><small>Gagamitin ng mga mag-aaral ang mga fill-in-the-blank na kwento (katulad ng Mad LibsÂ®) bilang konteksto para sa pag-unawa kung paano kumukuha at nag-iimbak ng input ang mga computer mula sa isang user, pagkatapos ay gagamitin ito sa ibang pagkakataon habang tumatakbo ang isang program.
   </td><td>Mga variable</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>    </tr>        <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - Para sa Loop Fun</a><br><i>*Mga supply: Dice (3 dice/pangkat ng 2-4)</i><br><small>Alam namin na ang mga loop ay nagbibigay-daan sa amin na gawin ang mga bagay nang paulit-ulit, pero ngayon ay matututuhan namin kung paano gumamit ng mga loop na may mga karagdagang istruktura na binuo mismo. Ang mga bagong istrukturang ito ay magbibigay-daan sa mga mag-aaral na lumikha ng code na mas malakas at dynamic.</td><td>Para sa Mga Loop</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - Ang Internet</a><br><small>Kahit na maraming tao ang gumagamit ng internet araw-araw, hindi masyadong marami ang nakakaalam kung paano ito gumagana. Sa araling ito, magkukunwaring dumadaloy ang mga mag-aaral sa internet, habang natututo tungkol sa mga koneksyon, URL, IP Address, at DNS.</td><td>Data</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## Karagdagang mga Unplugged na lesson

Ang mga sumusunod na aralin ay inayos ayon sa konsepto at makikita sa mga naunang bersyon ng aming mga kurso sa CS Fundamentals. Kasama sa mga karagdagang mapagkukunan na pwede mong konsultahin habang pinaplano mong gamitin ang mga araling ito:
* [Gabay sa Kurikulum ng Kursong A-F sa 2019](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [Listahan ng Supply ng Kursong A-F sa 2019](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [Mga Listahan ng Kurso sa Amazon sa 2019](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [Gabay sa Kurikulum ng Kursong A-F sa 2018](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [Gabay sa Kurikulum ng Kursong A-F sa 2017 (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Gabay sa Kurikulum ng Kursong 1-4](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Mga Flashcard ng CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Konsepto</th>    <th width=65%><center><big>Lesson Plan <br><small> Kasama sa Lesson Plan ang mga karagdagang mapagkukunan (mga slide, video, answer key, atbp).
</th>     <th><center><big>Mga mapagkukunan</th>     <tr>    <th rowspan="2" id=t07 width=5%>Digital na Citizenship</th>    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>  </tr>  <tr>      <td colspan="2">*Ang Common Sense na Edukasyon ay may isang <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">buong Kurikulum ng Digital Citizenship</a> na kabilang ang maraming unplugged na aktibidad.</td>    <tr>    <th id=t07>Binary</th>        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Mga Binary na Imahe </a><br><small>*Mga Supply:Opsyonal - Pagpapangkat ng magkasalungat na bagay na ipapakita sa mga mag-aaral. Bagaman maraming tao ang nag-iisip ng binary bilang mahigpit na mga zero at one, ang mga mag-aaral ay ipapakilala sa ideya na ang impormasyon ay pwedeng katawanin sa iba't ibang mga binary na opsyon. Isinasagawa ng araling ito ang konseptong iyon nang isang hakbang habang inilalarawan nito kung paano makakapag-imbak ang isang computer ng mas kumplikadong impormasyon (tulad ng mga larawan at mga kulay) pati na rin sa binary.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>Loops</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Ang Aking Mga Loopy Robotic na Kaibigan</a><br><small>Dito, natutunan ng mga mag-aaral ang pagiging simple at gamit ng mga loop sa pamamagitan ng "programming" ng kanilang mga kaibigan gamit ang wika mula sa "My Robotic Friends." Sa sandaling ipinakilala ang mga loop, matutuklasan ng mga mag-aaral na mas mabilis silang makakagawa ng mas malalaking istruktura.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Mga Tungkulin</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">Mga Functional na Suncatcher</a><br><small>Sa araling ito, gagawa ang mga mag-aaral ng suncatcher mula sa string, beads, at isang espesyal na panghalina. Susundan ng mga mag-aaral ang isang serye ng mga paulit-ulit na hakbang, pagkatapos ay hihilingin na tukuyin ang ilang partikular na hanay ng mga "kasanayan" na dinoble nang ilang beses. Kapag natukoy na ang mga kasanayang iyon, tatawagin sila mula sa isang pangunahing programa at ang buong magandang proseso ng paglikha ay itatala sa isang solong papel. Ang huling programa ay nakatuon sa buong klase, anuman ang kanilang uri ng string, kuwintas, at mga panghalina. Para epektibong payagan ito, kakailanganin ng mga mag-aaral na "buuin" ang mga detalye ng kanilang mga partikular na materyales at lumikha ng hindi malinaw na mga termino para sa mga supply ng isang indibidwal. Ang paggamit na ito ng mga generic na placeholder ay isang magandang panimula sa mga variable.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Video ng Lesson</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Tingnan ang Lesson sa Galaw</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Pangunahing Sagot sa Aktibidad <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Susi sa Pagwawasto ng Pagtataya</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Pagsulat ng kanta na may mga Parameter</a><br><small>Isa sa mga pinaka-kahanga-hangang istruktura sa mundo ng computer science ay ang function. Ang mga function o tugkulin (minsan ay tinatawag na mga pamamaraan) ay mga mini program na pwede mong gamitin nang paulit-ulit sa loob ng iyong mas malaking programa. Ang araling ito ay makakatulong sa mga mag-aaral na madaling unawain bakit ang pagsasama-sama ng mga chunk ng code sa mga function ay kapaki-pakinabang na kasanayan, at kung paano nila magagamit ang mga istrukturang iyon kahit na ang mga chunk ng code ay bahagyang naiiba.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Mga Algorithm</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Dice Race</a><br><small>Sa araling ito, iuugnay ng mga mag-aaral ang konsepto ng mga algorithm pabalik sa mga aktibidad sa totoong buhay sa pamamagitan ng paglalaro ng larong Dice Race. Ang layunin dito ay simulan ang pagbuo ng mga kasanayan para isalin ang mga totoong sitwasyon sa mundo sa mga online na sitwasyon at vice versa.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Ang Aking Mga Robotic na Kaibigan</a><br><small>Gamit ang paunang natukoy na susi ng simbolo, malalaman ng iyong mga mag-aaral kung paano gagabayan ang isa't isa para magawa ang mga partikular na gawain nang hindi gumagamit ng anumang mga pandiwang utos. Itinuturo ng segment na ito sa mga mag-aaral ang koneksyon sa pagitan ng mga simbolo at aksyon, ang pagkakaiba sa pagitan ng algorithm at program, at ang mahalagang kasanayan sa pag-debug.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Mga Algorithm sa Tunay na Buhay: Mga Eroplanong Papel</a><br><small>Sa araling ito, iuugnay ng mga mag-aaral ang konsepto ng mga algorithm pabalik sa pang-araw-araw na gawain. Pagkatapos talakayin ang mga algorithm, ang mga mag-aaral ay gagawa ng mga eroplanong papel gamit ang isang algorithm. Ang layunin dito ay simulan ang pagbuo ng mga kasanayan upang isalin ang mga totoong sitwasyon sa mundo sa mga online na sitwasyon at vice versa.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Mga Algorithm ng Tunay na Buhay: Magtanim ng Binhi</a><br><small>Sa araling ito, iuugnay ng mga mag-aaral ang konsepto ng mga algorithm pabalik sa pang-araw-araw, totoong buhay na mga aktibidad sa pamamagitan ng pagtatanim ng aktwal na binhi. Ang layunin dito ay simulan ang pagbuo ng mga kasanayan upang isalin ang mga totoong sitwasyon sa mundo sa mga online na sitwasyon at vice versa.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangrams</a><br><small>Ang araling ito ay nagpapakita sa atin ng isang bagay na mahalaga tungkol sa mga algorithm. Hangga't pinapanatili mong simple ang isang algorithm, maraming paraan para magamit ito. Gayunpaman, kung gusto mong tiyakin na ang lahat ay gumagawa ng parehong resulta, kung gayon ang iyong algorithm ay nangangailangan ng higit pang detalye. Matututunan ng mga mag-aaral ang pagkakaiba sa pagitan ng isang detalyado at pangkalahatang algorithm habang naglalaro ng tangrams.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Computational Thinking</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Pag-iisip ng Computational</a><br><small>Para sa aktibidad na ito, walang mga tagubilin ang ibinigay. Sa halip, gagamit ang mga mag-aaral ng mga halimbawa kung ano ang ginawa ng mga haka-haka na manlalaro para malaman kung paano laruin ang laro. Ang araling ito ay nagbibigay sa mga mag-aaral ng pagkakataong magsanay ng apat na sining ng computational thinking (decomposition, pattern matching, abstraction, at algorithms) sa isang cohesive na aktibidad.</td> <td><a href="https://youtu.be/TlAaklrolA0">Video ng Lesson</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Tingnan ang Lesson sa Gawain</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Pangunahing Sagot sa Aktibidad </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Computational Thinking with Monsters</a><br><small>Sa walang anuman kundi papel at mga marker, matututunan ng mga mag-aaral ang apat na hakbang ng computational thinking. Pagkatapos ng maikling pagpapakilala, dapat na hatiin ang mga mag-aaral sa mga grupo kung saan kakailanganin nilang gumawa ng mga direksyon para sa ibang mga mag-aaral na gumuhit ng isang partikular na monster o halimaw (mula sa isang catalog ng mga paunang napiling halimaw). Ang buong gawain ay dapat na mabulok, pagkatapos ay susuriin ng mga pangkat ang lahat ng mga halimaw sa catalog para sa mga pattern, i-abstract ang mga katulad na detalye mula sa mga halimaw, pagkatapos ay gamitin ang impormasyong iyon para lumikha ng isang algorithm (mga direksyon) para sa isa pang pangkat para gumuhit ng isang tiyak na halimaw. Ang mga pangkat ay magpapalit ng mga algorithm sa isa pang pangkat at iguguhit ang halimaw batay sa kung ano ang ipinapahiwatig ng algorithm na iyon. Ang pagguhit ba ang inilaan ng orihinal na pangkat?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Unspotted na Mga Bug</a><br><small>Gagabayan ng araling ito ang mga mag-aaral sa mga hakbang ng pag-debug. Matututunan ng mga mag-aaral ang mantra: "Ano ang nangyari? Ano ang dapat mangyari? Ano ang sinasabi nito sa iyo?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Pagtitiyaga</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Pagbuo ng Pundasyon</a><br><small>Ang mga bago at hindi nalutas na mga problema ay kadalasang medyo mahirap. Kung gusto nating magkaroon ng anumang pagkakataon na gumawa ng isang bagay na malikhain, kapaki-pakinabang, at matalino, kailangan nating maging handa sa pagdating ng mahihirap na problema kahit na nangangahulugan ito ng pagkabigo ng ilang beses bago tayo magtagumpay. Sa araling ito, ang mga mag-aaral ay bubuo ng isang istraktura na may mga karaniwang materyales. Ang istraktura ay susubukin ang kakayahan nitong humawak ng isang aklat-aralin nang higit sa sampung segundo. Karamihan sa mga mag-aaral ay hindi makakakuha nito ng tama sa unang pagkakataon, ngunit mahalagang magpatuloy sila at patuloy na sumubok.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie and the Big Project</a><br><small>Kapag ang mga mag-aaral ay humarap sa isang hadlang habang sumasagot sa isang tanong o gumagawa ng isang proyekto, napakadali para sa kanilang mabigo at sumuko. Ang araling ito ay magpapakilala sa mga mag-aaral sa ideya na ang pagkabigo ay maaaring maging mahalagang bahagi ng pag-aaral. Dito, ang pagkabigo ay ipinakita bilang hakbang sa proseso ng malikhaing, sa halip na isang tanda ng kabiguan. Ang araling ito ay maaaring gawin sa isa o dalawang sesyon ng klase. Kung mayroon kang mas maraming oras, huwag mag-atubiling ilabas ang gusali at pagbabagong bahagi ng aktibidad ng Marble Run.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Abstraction</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Ang abstraction ay isa sa pinakamahalagang kasanayan para maunawaan ng isang computer scientist. Pinapasimple nito ang mga problema at pinipigilan ang hindi kinakailangang pag-uulit. Ang isang mahusay na coder ay gumagamit ng abstraction halos sa bawat oras na lumikha siya ng isang programa. Ang aktibidad na ito ay magpapasuri sa iyong mga mag-aaral ng mga kuwento para sa mga pagkakaiba para maalis nila ang mga ito. Ang mga abstract na kwentong iyon ay nagiging mga template para sa masaya at nakakabaliw na mga bago.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Video ng Lesson</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Ang Susi ng Sagot sa Aktibidad</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Susi sa Pagwawasto ng Pagtataya </a></td>  </tr>
<tr>   <th id=t07>Variables</th>â€‹     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Mga Variable ng Envelope</a><br><i>*Mga Supply: Mga Envelope (1-4/pangkat ng 2-4)</i><br><small>Ginagamit ang mga variable bilang mga placeholder para sa mga halaga tulad ng mga numero o salita. Nagbibigay-daan ang mga variable para sa maraming kalayaan sa programming. Sa halip na mag-type ng isang parirala nang maraming beses o matandaan ang isang hindi kilalang numero, pwedeng gumamit ang mga computer scientist ng mga variable para isangguni ang mga ito. Nakakatulong ang araling ito na ipaliwanag kung ano ang mga variable at kung paano natin magagamit ang mga ito sa maraming iba't ibang paraan. Ang ideya ng mga variable ay hindi madaling unawain, kaya inirerekomenda namin ang pagbibigay ng maraming oras para sa talakayan sa pagtatapos ng aralin.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

