---
title: ಸಿಎಸ್ ಮೂಲಭೂತ ಅಂಶಗಳು ಅನ್‌ಪ್ಲಗ್ಡ್
video_player: true
theme: responsive
---

# ಸಿಎಸ್ ಮೂಲಭೂತ ಅಂಶಗಳು ಅನ್‌ಪ್ಲಗ್ಡ್

ನಾವು ನಮ್ಮ ಎಲ್ಲ ಅನ್‌ಪ್ಲಗ್ಡ್ (ಅಡಚಣೆ ನಿವಾರಿಸಿರುವ) ಪಾಠಗಳ ಪಟ್ಟಿಯನ್ನು ನೀವು ತರಗತಿಯಲ್ಲಿ ಬಳಸುವುದಕ್ಕಾಗಿ ಸಂಯೋಜಿಸಿದ್ದೇವೆ. ನೀವು ಈಗ ಕಂಪ್ಯೂಟರ್ ಸೈನ್ಸ್ ನ ಮೂಲಭೂತ ಅಂಶಗಳನ್ನು, ನೀವು ವರ್ಗದ ಕೋಣೆಯಲ್ಲಿ ಕಂಪ್ಯೂಟರ್ ಹೊಂದಿದ್ದರೂ ಅಥವಾ ಹೊಂದಿಲ್ಲದೇ ಇದ್ದರೂ ಕೂಡ ಬೋಧಿಸಬಹುದು!
<br>
<div class="col-50">
ವಿದ್ಯಾರ್ಥಿಗಳು ಕಂಪ್ಯೂಟರ್‌ನಲ್ಲಿ ಪ್ರಯತ್ನಿಸದೇ ಇರುವ ಪಾಠಗಳನ್ನು ನಾವು "ಅನ್‌ಪ್ಲಗ್ಡ್" ಎಂದು ಉಲ್ಲೇಖಿಸುತ್ತೇವೆ ವಿದ್ಯಾರ್ಥಿಗಳು ಸಾಮಾನ್ಯವಾಗಿ ಪೆನ್ಸಿಲ್ ಮತ್ತು ಪೇಪರ್ ಅಥವಾ ಭೌತಿಕ ಕುಶಲತೆಯಿಂದ ಕೆಲಸ ಮಾಡುತ್ತಾರೆ.  ಇವು ಉದ್ದೇಶಪೂರ್ವಕವಾಗಿ ಇರಿಸಲಾದ ಚಲನಶೀಲ ಅವಕಾಶಗಳಾಗಿದ್ದು ವಿದ್ಯಾರ್ಥಿಗಳು ತಮ್ಮ ಸ್ವಂತ ಜೀವನಕ್ಕೆ ಸಂಬಂಧಿಸಿದ ರೀತಿಯಲ್ಲಿ ಸಂಕೀರ್ಣ ಪರಿಕಲ್ಪನೆಗಳನ್ನು ಜೀರ್ಣಿಸಿಕೊಳ್ಳಲು ಸಹಾಯ ಮಾಡುತ್ತವೆ. <br><br>
ಅನ್‌ಪ್ಲಗ್ಡ್ ಪಾಠಗಳು ಸಹಯೋಗದ ತರಗತಿಯ ವಾತಾವರಣವನ್ನು ನಿರ್ಮಿಸಲು ಮತ್ತು ನಿರ್ವಹಿಸಲು ವಿಶೇಷವಾಗಿ ಉಪಯುಕ್ತವಾಗಿವೆ ಮತ್ತು ಅವುಗಳು ಹೆಚ್ಚು ಅಮೂರ್ತ (ಅಬ್‌ಸ್ಟ್ರಾಕ್ಟ್) ಪರಿಕಲ್ಪನೆಗಳನ್ನು ಪರಿಚಯಿಸುವಾಗ ನೀವು ಉಲ್ಲೇಖಿಸಬಹುದಾದ ಉಪಯುಕ್ತ ಅನುಭವಗಳಾಗಿವೆ. ಈ ಪ್ರತಿಯೊಂದು ಚಟುವಟಿಕೆಗಳನ್ನು ಒಂದೊಂದಾಗಿ ಅಥವಾ ಸಂಬಂಧಿತ ಪರಿಕಲ್ಪನೆಗಳ ಮೂಲಕ ಇತರ ಕಂಪ್ಯೂಟರ್ ಸೈನ್ಸ್ ಪಾಠಗಳೊಂದಿಗೆ ಬಳಸಬಹುದು.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;ವಯಸ್ಸು 4+, ಇಂಗ್ಲೀಷ್ ಮಾತ್ರ
</div>

<div style="clear: both;"></div>

***
## ಸಿಎಸ್ ಮೂಲಭೂತ ಅಂಶಗಳಲ್ಲಿ ಅನ್‌ಪ್ಲಗ್ಡ್ ಪಾಠಗಳು 2022-23

<a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">CS ಫಂಡಮೆಂಟಲ್ಸ್‌ 2022-23</a> ನಲ್ಲಿ ಈ ಮುಂದಿನ ಅಧ್ಯಾಯಗಳನ್ನು ನೋಡಬಹುದು. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. ಸೂಚನೆಗಳನ್ನು ಒದಗಿಸಿದ ಚಿಹ್ನೆಗಳಿಗೆ ಭಾಷಾಂತರಿಸಲು ವಿದ್ಯಾರ್ಥಿಗಳು ಪ್ರಯತ್ನಿಸುವಾಗ ನಿಖರವಾದ ಸೂಚನೆಗಳನ್ನು ಬರೆಯುವುದನ್ನು ಅಭ್ಯಾಸ ಮಾಡುತ್ತಾರೆ. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. ಬಳಕೆದಾರರು ಬಯಸಿದಾಗ ನಿಮ್ಮ ಪ್ರೋಗ್ರಾಂ ಬಳಕೆದಾರರಿಗೆ ನಿಖರವಾಗಿ ಪ್ರತಿಕ್ರಿಯೆನ್ನು ನೀಡಲಿ ಎಂದು ಕೆಲವೊಮ್ಮೆ ನೀವು ಬಯಸುತ್ತೀರಿ. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. ಮೊದಲಿಗೆ, ವಿದ್ಯಾರ್ಥಿಗಳು ತಮ್ಮ ಅಗತ್ಯಗಳನ್ನು ತಿಳಿಸುವ "ಸರಿಯಾದ ಅಪ್ಲಿಕೇಶನ್" ಅನ್ನು ಹುಡುಕಲು ಸಹಾಯ ಮಾಡುವ ಹಲವಾರು ಕಾಲ್ಪನಿಕ ಸ್ಮಾರ್ಟ್‌ಫೋನ್ ಬಳಕೆದಾರರೊಂದಿಗೆ ವ್ಯವಹರಿಸುತ್ತಾರೆ. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. ತಮ್ಮ ಸಹಪಾಠಿಗಳು ವ್ಯಾಖ್ಯಾನಿಸಿದ ಅಲ್ಗಾರಿದಮ್‌ಗೆ ಮಾತ್ರ ಸ್ಪಂದಿಸುತ್ತ ರೋಬೋಟ್ ಆಗಿ ಭಾಗವಹಿಸುವ ವಿದ್ಯಾರ್ಥಿಗಳು ತಿರುವುಗಳನ್ನು ತೆಗೆದುಕೊಳ್ಳುತ್ತಾರೆ. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. ಬಳಕೆದಾರರು ಬಯಸಿದಾಗ ನಿಮ್ಮ ಪ್ರೋಗ್ರಾಂ ಬಳಕೆದಾರರಿಗೆ ನಿಖರವಾಗಿ ಪ್ರತಿಕ್ರಿಯೆನ್ನು ನೀಡಲಿ ಎಂದು ಕೆಲವೊಮ್ಮೆ ನೀವು ಬಯಸುತ್ತೀರಿ. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. ಐಚ್ಛಿಕ – 18 ಕಪ್ಪು/18 ಬಿಳಿ ಮಣಿಗಳು, ಪ್ರತಿ ವಿದ್ಯಾರ್ಥಿಗೆ 1 ಪೈಪ್ ಕ್ಲೀನರ್</i><br><small>ಕಂಪ್ಯೂಟರ್ ಜಗತ್ತಿನಲ್ಲಿ ಬೈನರಿ (ದ್ವಿಮಾನ ಪದ್ಧತಿ) ಅತ್ಯಂತ ಪ್ರಮುಖವಾಗಿದೆ. ಇಂದು ಬಹುಪಾಲು ಕಂಪ್ಯೂಟರ್‌ಗಳು ಎಲ್ಲಾ ರೀತಿಯ ಮಾಹಿತಿಯನ್ನು ಬೈನರಿ ರೂಪದಲ್ಲಿ ಸಂಗ್ರಹಿಸುತ್ತವೆ. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. ಅಸ್ತಿತ್ವದಲ್ಲಿರುವ ಚಿತ್ರವನ್ನು ಪುನರುತ್ಪಾದಿಸುವ ಪ್ರಯತ್ನದಲ್ಲಿ ಗ್ರಾಫ್ ಪೇಪರ್‌ನಲ್ಲಿ ಬಣ್ಣದ ಚೌಕಗಳನ್ನು ಪರಸ್ಪರ ಸೂಚಿಸಲು ವಿದ್ಯಾರ್ಥಿಗಳು ಚಿಹ್ನೆಗಳನ್ನು ಬಳಸುವ ಮೂಲಕ ತರಗತಿಯು ಪ್ರಾರಂಭವಾಗುತ್ತದೆ. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. ಪ್ರೋಗ್ರಾಂ ಬರೆಯುವ ವೇಳೆಯಲ್ಲಿ ನಮಗೆ ಅಗತ್ಯವಿರುವ ಎಲ್ಲಾ ಮಾಹಿತಿಯೂ ನಮಗೆ ಲಭ್ಯವಿರುವುದಿಲ್ಲ. ಕೆಲವೊಮ್ಮೆ ನೀವು ಒಂದು ಸನ್ನಿವೇಶದಲ್ಲಿ ನಿಮ್ಮ ಕೋಡ್ ರನ್ ಮಾಡಿದಾಗ ಯಾವ ಪರಿಸ್ಥಿತಿಯು ನಿಜವಾಗಲಿದೆ ಎಂದು ನಿಮಗೆ ತಿಳಿದಿಲ್ಲದಿದ್ದರೂ ಸಹ ಇನ್ನೊಂದಕ್ಕಿಂತ ವಿಭಿನ್ನವಾದದ್ದನ್ನು ಮಾಡಲು ಬಯಸುತ್ತೀರಿ. ಅಲ್ಲಿಯೇ ಕಂಡೀಷನಲ್ಸ್‌ ಉಪಯುಕ್ತವಾಗುತ್ತವೆ. ನಿಮ್ಮ ಕೋಡ್ ರನ್ ಆಗುವಾಗ ಯಾವುದೇ ಸಮಯದಲ್ಲಿ ಟ್ರೂ ಆಗಿರುವ ಮಾಹಿತಿಯನ್ನು ಆಧರಿಸಿ ನಿರ್ಧಾರವನ್ನು ಮಾಡಲು ಕಂಡೀಷನಲ್ಸ್‌ ಕಂಪ್ಯೂಟರ್‌ಗೆ ಅನುವು ಮಾಡುತ್ತದೆ.+</td><td>ಕಂಡೀಷನಲ್ಸ್</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - ಸಾಂಗ್‌ರೈಟಿಂಗ್‌</a><br><small>ಕಂಪ್ಯೂಟರ್ ಸೈನ್ಸ್‌ನಲ್ಲಿ ಒಂದು ಪ್ರಮುಖ ಸ್ಟ್ರಕ್ಚರ್‌ಗಳು ಎಂದರೆ ಫಂಕ್ಷನ್‌ ಆಗಿದೆ. ಫಂಕ್ಷನ್ಸ್ (ಕೆಲವೊಮ್ಮೆ ಪ್ರಕ್ರಿಯೆಗಳು ಎನ್ನಲಾಗುತ್ತದೆ) ನೀವು ನಿಮ್ಮ ದೊಡ್ಡ ಪ್ರೋಗ್ರಾಂ ಅಡಿಯಲ್ಲಿ ಪದೇ ಪದೇ ಬಳಸಬಹುದಾದ ಚಿಕ್ಕ ಚಿಕ್ಕ ಪ್ರೋಗ್ರಾಂಗಳಾಗಿವೆ. ಕೋಡ್‌ನ ತುಣುಕುಗಳನ್ನು ಸಂಯೋಜಿಸಿ ಫಂಕ್ಷನ್‌ಗಳನ್ನಾಗಿಸುವುದು ಏಕೆ ಇಂತಹ ಸಹಾಯಕ ಅಭ್ಯಾಸ ಎಂಬುದನ್ನು ಅರ್ಥ ಮಾಡಿಕೊಳ್ಳಲು ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಈ ಅಧ್ಯಾಯ ಸಹಾಯ ಮಾಡುತ್ತದೆ.</td><td>ಫಂಕ್ಷನ್‌ಗಳು</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - ಅಕ್ಸೆಸಿಬಿಲಿಟಿಗಾಗಿ ವಿನ್ಯಾಸ ಮಾಡುವುದು</a><br><small>ಈ ಅಧ್ಯಾಯದಲ್ಲಿ, ವಿದ್ಯಾರ್ಥಿಗಳು ಅಕ್ಸೆಸಿಬಿಲಿಟಿ ಮತ್ತು ತಾದಾತ್ಮ್ಯದ ಮೌಲ್ಯದ ಬಗ್ಗೆ ಹೈಪೊಥೆಟಿಕಲ್‌ ಆಪ್‌ಗಳಿಗಾಗಿ ವಿನ್ಯಾಸ ಮಾಡುವ ಅಕ್ಸೆಸಿಬಲ್‌ ಪರಿಹಾರಗಳು ಮತ್ತು ಬ್ರೇನ್‌ಸ್ಟಾರ್ಮಿಂಗ್‌ ಮೂಲಕ ಕಲಿತುಕೊಳ್ಳುತ್ತಾರೆ.</td><td>ಕಂಪ್ಯೂಟಿಂಗ್‌ನ ಪರಿಣಾಮಗಳು</td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - ಡಿಜಿಟಲ್ ಹಂಚಿಕೊಳ್ಳುವಿಕೆ</a><br><i>*ಪೂರೈಕೆಗಳು: ಸ್ಮಾರ್ಟ್‌ಫೋನ್‌ ಅಥವಾ ಟ್ಯಾಬ್ಲೆಟ್‌</i><br><small>ಹಕ್ಕುಸ್ವಾಮ್ಯ ಮತ್ತು ಕ್ರಿಯಾಶೀಲತೆಯಲ್ಲಿ ತಂಡವು ಕಂಪ್ಯೂಟರ್‌ ಸೈನ್ಸ್‌ ಫಂಡಮೆಂಟಲ್ಸ್‌ ಆಧರಿಸಿ, ನಿರ್ದಿಷ್ಟವಾಗಿ ಡಿಜಿಟಲ್‌ ಪರಿಸರದಲ್ಲಿ ಮಾಲೀಕತ್ವ ಮತ್ತು ಹಕ್ಕುಸ್ವಾಮ್ಯವನ್ನು ಗೌರವಿಸುವ ಸವಾಲುಗಳು ಮತ್ತು ಪ್ರಯೋಜನಗಳನ್ನು ಅರ್ಥ ಮಾಡಿಕೊಳ್ಳಲು ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಈ ಅಧ್ಯಾಯ ಇದೆ. ಕಲಾಕಾರರ ಹಕ್ಕುಗಳನ್ನು ಗೌರವಿಸಲು ವಿದ್ಯಾರ್ಥಿಗಳನ್ನು ಪ್ರೋತ್ಸಾಹಿಸಬೇಕು. ಇದು ನೈತಿಕ ಡಿಜಿಟಲ್‌ ನಾಗರಿಕರಾಗಲು ಒಂದು ಪ್ರಮುಖ ಭಾಗವಾಗಿರುತ್ತದೆ.</td><td>ಡಿಜಿಟಲ್‌ ಪೌರತ್ವ</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">ಕೋರ್ಸ್ F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -ಬ್ಲಾಂಕ್ ಸ್ಪೇಸ್ ಸ್ಟೋರಿಗಳು</a><br><i>*ಪೂರೈಕೆಗಳು: 6 ಎನ್ವಲಪ್‌ಗಳು (ಇದಕ್ಕೂ ಸೂಕ್ತವಾಗಿದೆ:ಕಾಗದ ಅಥವಾ ಇಂಡೆಕ್ಸ್‌ ಕಾರ್ಡ್‌ಗಳು,ಅರ್ಧ ಮಡಚಿರುವುದು)</i><br><small>ಬಳಕೆದಾರರಿಂದ ಇನ್‌ಪುಟ್‌ ಅನ್ನು ಕಂಪ್ಯೂಟರ್‌ಗಳು ಹೇಗೆ ತೆಗೆದುಕೊಳ್ಳುತ್ತವೆ ಮತ್ತು ಸ್ಟೋರ್ ಮಾಡುತ್ತವೆ ಮತ್ತು ಪ್ರೋಗ್ರಾಮ್ ರನ್ ಆದಾಗ ನಂತರ ಹೇಗೆ ಬಳಸುತ್ತವೆ ಎಮಬುದನ್ನು ತಿಳಿದುಕೊಳ್ಳಲು ಸಂದರ್ಭವಾಗಿ ಬಿಟ್ಟ ಸ್ಥಳ ತುಂಬಿರಿ ಸ್ಟೋರಿಗಳನ್ನು ವಿದ್ಯಾರ್ಥಿಗಳು ಬಳಸುತ್ತಾರೆ (ಮ್ಯಾಡ್‌ ಲಿಬ್ಸ್® ಗೆ ಸಮಾನ).
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. ಈ ಹೊಸ ರಚನೆಗಳು ವಿದ್ಯಾರ್ಥಿಗಳು ಹೆಚ್ಚು ಶಕ್ತಿಯುತ ಮತ್ತು ಕ್ರಿಯಾತ್ಮಕ ಕೋಡ್ ರಚಿಸಲು ಅವಕಾಶ ನೀಡುತ್ತವೆ.</td><td>ಲೂಪ್‌ಗಳಿಗೆ</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
<td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.19 - ಇಂಟರ್‌ನೆಟ್</a><br><small>ಬಹಳ ಜನರು ಪ್ರತಿದಿನ ಇಂಟರ್‌ನೆಟ್ ಅನ್ನು ಬಳಸುತ್ತಿದ್ದರೂ, ಅದು ಹೇಗೆ ಕಾರ್ಯನಿರ್ವಹಿಸುತ್ತದೆ ಎಂದು ಬಹಳ ಜನರಿಗೆ ತಿಳಿದಿಲ್ಲ. ಈ ಪಾಠದಲ್ಲಿ, ವಿದ್ಯಾರ್ಥಿಗಳು ಸಂಪರ್ಕಗಳು, ಯುಆರ್‌ಎಲ್‌ ಗಳು, ಐಪಿ ಅಡ್ರೆಸ್‌ ಗಳು ಮತ್ತು ಡಿಎನ್‌ಎಸ್ ಬಗ್ಗೆ ತಿಳಿದುಕೊಳ್ಳುವಾಗ ಇಂಟರ್ನೆಟ್ ಮೂಲಕ ಮುಂದುವರಿಯುವಂತೆ ತೋರಿಸುತ್ತಾರೆ.</td><td>ಡೇಟಾ</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## ಹೆಚ್ಚುವರಿ ಅನ್‌ಪ್ಲಗ್ಡ್ ಪಾಠಗಳು

ಕೆಳಗಿನ ಪಾಠಗಳನ್ನು ಪರಿಕಲ್ಪನೆಗಳನ್ನು ಅವಲಂಬಿಸಿ ಆಯೋಜಿಸಲಾಗಿದೆ ಮತ್ತು ನಮ್ಮ ಸಿಎಸ್‌ ಮೂಲಭೂತ ಅಂಶಗಳ ಕೋರ್ಸ್‌ಗಳ ಹಿಂದಿನ ಆವೃತ್ತಿಗಳಲ್ಲಿ ಕಾಣಬಹುದು. ಈ ಪಾಠಗಳನ್ನು ಬಳಸಲು ನೀವು ಯೋಜಿಸುತ್ತಿರುವಾಗ ನೀವು ತಿಳಿಯಲು ಬಯಸಬಹುದಾದ ಹೆಚ್ಚುವರಿ ಸಂಪನ್ಮೂಲಗಳು:
* [2019 ಕೋರ್ಸ್ ಎ-ಎಫ್‌ ಪಠ್ಯಕ್ರಮ ಮಾರ್ಗದರ್ಶಿ](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 ಕೋರ್ಸ್ ಎ-ಎಫ್‌ ಅಗತ್ಯ ವಸ್ತುಗಳ ಪಟ್ಟಿ](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 ಕೋರ್ಸ್ ಅಮೆಜಾನ್ ಪಟ್ಟಿಗಳು](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 ಕೋರ್ಸ್ ಎ-ಎಫ್‌ ಪಠ್ಯಕ್ರಮ ಮಾರ್ಗದರ್ಶಿ](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 ಕೋರ್ಸ್ ಎ-ಎಫ್‌ ಪಠ್ಯಕ್ರಮ ಮಾರ್ಗದರ್ಶಿ (ಆ2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [ಕೋರ್ಸ್ 1-4 ಪಠ್ಯಕ್ರಮ ಮಾರ್ಗದರ್ಶಿ](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [ಸಿಎಸ್‌ಎಫ್ ಫ್ಲ್ಯಾಶ್‌ಕಾರ್ಡ್‌ಗಳು](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>ಪರಿಕಲ್ಪನೆ</th>
    <th width=65%><center><big>ಪಾಠದ ಪ್ಲಾನ್ <br>
<small> ಪಾಠದ ಪ್ಲಾನ್ ಹೆಚ್ಚುವರಿ ಸಂಪನ್ಮೂಲಗಳನ್ನು ಒಳಗೊಂಡಿರುತ್ತದೆ (ಸ್ಲೈಡ್‌ಗಳು, ವೀಡಿಯೋಗಳು, ಉತ್ತರದ ಕೀಗಳು, ಇತ್ಯಾದಿ).
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. ಅನೇಕ ಜನರು ಬೈನರಿ (ದ್ವಿಮಾನ ಪದ್ಧತಿ) ಯನ್ನು ಕಟ್ಟುನಿಟ್ಟಾಗಿ ಸೊನ್ನೆಗಳು ಮತ್ತು ಒಂದನ್ನು ಹೊಂದಿರುವ ಪದ್ಧತಿ ಎಂದು ಭಾವಿಸಿದರೂ, ಮಾಹಿತಿಯನ್ನು ವಿವಿಧ ಬೈನರಿ ಆಯ್ಕೆಗಳಲ್ಲಿ ಪ್ರತಿನಿಧಿಸಬಹುದು ಎಂಬ ಪರಿಕಲ್ಪನೆಯನ್ನು ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಒದಗಿಸಲಾಗುತ್ತದೆ. ಈ ಪಾಠವು ಆ ಪರಿಕಲ್ಪನೆಯನ್ನು ಒಂದು ಹೆಜ್ಜೆ ಮುಂದಕ್ಕೆ ಒಯ್ಯುತ್ತದೆ ಏಕೆಂದರೆ ಇದು ಕಂಪ್ಯೂಟರ್ ಇನ್ನಷ್ಟು ಸಂಕೀರ್ಣ ಮಾಹಿತಿಯನ್ನು (ಚಿತ್ರಗಳು ಮತ್ತು ಬಣ್ಣಗಳಂತಹ) ಬೈನರಿಯಲ್ಲಿ ಹೇಗೆ ಸಂಗ್ರಹಿಸಬಹುದು ಎಂಬುದನ್ನು ವಿವರಿಸುತ್ತದೆ.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>ಲೂಪ್ಸ್</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">ನನ್ನ ಲೂಪಿ ರೊಬೊಟಿಕ್ ಸ್ನೇಹಿತರು</a><br><small>ಇಲ್ಲಿ, ವಿದ್ಯಾರ್ಥಿಗಳು "ನನ್ನ ರೋಬೋಟಿಕ್ ಸ್ನೇಹಿತರು" ನಿಂದ ಭಾಷೆಯನ್ನು ಬಳಸಿಕೊಂಡು ತಮ್ಮ ಸ್ನೇಹಿತರನ್ನು "ಪ್ರೋಗ್ರಾಮಿಂಗ್" ಮಾಡುವ ಮೂಲಕ ಲೂಪ್‌ಗಳ ಸರಳತೆ ಮತ್ತು ಉಪಯುಕ್ತತೆಯನ್ನು ತಿಳಿದುಕೊಳ್ಳುತ್ತಾರೆ." ಒಮ್ಮೆ ಲೂಪ್ಸ್ ಪರಿಚಯಿಸಿದ ನಂತರ, ವಿದ್ಯಾರ್ಥಿಗಳು ದೊಡ್ಡ ರಚನೆಗಳನ್ನು ತ್ವರಿತವಾಗಿ ರೂಪಿಸಬಹುದು ಎಂದು ಕಂಡುಕೊಳ್ಳುತ್ತಾರೆ.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>ಫಂಕ್ಷನ್ಸ್</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">ಫಂಕ್ಷನಲ್ ಸನ್‌ಕ್ಯಾಚರ್‌ಗಳು</a><br><small>ಈ ಪಾಠದಲ್ಲಿ, ವಿದ್ಯಾರ್ಥಿಗಳು ದಾರ, ಮಣಿಗಳು ಮತ್ತು ಸ್ಪೆಶಲ್ ಚಾರ್ಮ್ ಗಳನ್ನು ಬಳಸಿ ಸನ್‌ಕ್ಯಾಚರ್ ಅನ್ನು ತಯಾರಿಸುತ್ತಾರೆ. ವಿದ್ಯಾರ್ಥಿಗಳು ಪುನರಾವರ್ತಿತ ಹಂತಗಳ ಸರಣಿಯನ್ನು ಅನುಸರಿಸುತ್ತಾರೆ, ನಂತರ ಹಲವಾರು ಬಾರಿ ಡುಪ್ಲಿಕೇಟ್ ಆಗಿರುವ ಕೆಲವು "ಕೌಶಲ್ಯ" ಗಳನ್ನು ಗುರುತಿಸಲು ಕೇಳಲಾಗುತ್ತದೆ. ಆ ಕೌಶಲ್ಯಗಳನ್ನು ವಿವರಿಸಿದ ನಂತರ, ಅವುಗಳನ್ನು ಮುಖ್ಯ ಪ್ರೋಗ್ರಾಂನಿಂದ ತೆಗೆದುಕೊಳ್ಳಲಾಗುವುದು ಮತ್ತು ಇಡೀ ಪ್ರಕ್ರಿಯೆ ಸಂಪೂರ್ಣ ಸುಂದರ ವಿವರಣೆಯನ್ನು ಒಂದೇ ಕಾಗದದ ಹಾಳೆಯಲ್ಲಿ ದಾಖಲಿಸಲಾಗುತ್ತದೆ. ಅಂತಿಮ ಪ್ರೋಗ್ರಾಂ ಅನ್ನು ಅವರು ಯಾವುದೇ ರೀತಿಯ ದಾರ, ಮಣಿ ಮತ್ತು ಚಾರ್ಮ್‌ಗಳನ್ನು ಬಳಸಿದ್ದರೂ ಅದನ್ನು ಇಡೀ ವರ್ಗದತ್ತ ತೋರಿಸಲಾಗುವುದು. ಇದನ್ನು ಪರಿಣಾಮಕಾರಿಯಾಗಿ ಅನುಮತಿಸಲು, ವಿದ್ಯಾರ್ಥಿಗಳು ತಮ್ಮ ನಿರ್ದಿಷ್ಟ ವಸ್ತುಗಳ ವಿವರಗಳನ್ನು "ಅಮೂರ್ತಗೊಳಿಸಬೇಕು" ಮತ್ತು ಪ್ರತ್ಯೇಕ ವಸ್ತುಗಳಿಗಾಗಿ ಅಸ್ಪಷ್ಟ ನಿಯಮಗಳನ್ನು ರಚಿಸಬೇಕು. ಈ ಸಾಮಾನ್ಯ ಪ್ಲೇಸ್‌ಹೋಲ್ಡರ್‌ಗಳ ಬಳಕೆಯು ವೇರಿಯೆಬಲ್‌ಗಳ ಅದ್ಭುತ ಪರಿಚಯವನ್ನು ನೀಡುತ್ತದೆ.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">ಪಾಠದ ವೀಡಿಯೋ</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">ಕ್ರಿಯೆಯಲ್ಲಿ ಪಾಠವನ್ನು ನೋಡಿ</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">ಚಟುವಟಿಕೆಯ ಉತ್ತರದ ಕೀ <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">ವಿಶ್ಲೇಷಣೆ ಉತ್ತರದ ಕೀ</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">ಮಾನದಂಡಗಳೊಂದಿಗೆ ಹಾಡು ಬರೆಯುವುದು</a><br><small>ಕಂಪ್ಯೂಟರ್ ಸೈನ್ಸ್ ಜಗತ್ತಿನ ಅದ್ಭುತ ರಚನೆಗಳಲ್ಲಿ ಒಂದೆಂದರೆ ಫಂಕ್ಷನ್ (ಕಾರ್ಯ). ಫಂಕ್ಷನ್ಸ್ (ಕೆಲವೊಮ್ಮೆ ಪ್ರಕ್ರಿಯೆಗಳು ಎನ್ನಲಾಗುತ್ತದೆ) ನೀವು ನಿಮ್ಮ ದೊಡ್ಡ ಪ್ರೋಗ್ರಾಂ ಅಡಿಯಲ್ಲಿ ಪದೇ ಪದೇ ಬಳಸಬಹುದಾದ ಚಿಕ್ಕ ಚಿಕ್ಕ ಪ್ರೋಗ್ರಾಂಗಳಾಗಿವೆ. ಈ ಪಾಠವು ಕೋಡ್‌ನ ಭಾಗಗಳನ್ನು ಕಾರ್ಯಗಳಾಗಿ ಸಂಯೋಜಿಸುವುದು ಏಕೆ ಸಹಾಯಕಾರಿ ಅಭ್ಯಾಸವಾಗಿದೆ ಮತ್ತು ಕೋಡ್‌ನ ಭಾಗಗಳು ಸ್ವಲ್ಪ ವಿಭಿನ್ನವಾಗಿರುವಾಗಲೂ ಅವರು ಆ ರಚನೆಗಳನ್ನು ಹೇಗೆ ಬಳಸಬಹುದು ಎಂಬುದನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳಲು ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಸಹಾಯ ಮಾಡುತ್ತದೆ.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>ಅಲ್ಗಾರಿದಂಗಳು</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Dice Race</a><br><small>ಈ ಪಾಠದಲ್ಲಿ, ಡೈಸ್ ರೇಸ್ ಗೇಮ್ ಅನ್ನು ಆಡುವ ಮೂಲಕ ನಿಜ ಜೀವನದ ಚಟುವಟಿಕೆಗಳಿಗೆ ಅಲ್ಗಾರಿದಂನ ಕಲ್ಪನೆಯನ್ನು ಸಂಯೋಜಿಸುತ್ತಾರೆ. ನೈಜ-ಪ್ರಪಂಚದ ಸನ್ನಿವೇಶಗಳನ್ನು ಆನ್‌ಲೈನ್ ಸನ್ನಿವೇಶಗಳಿಗೆ ಮತ್ತು ತದ್ವಿರುದ್ಧವಾಗಿ ಅನುವಾದಿಸಲು ಕೌಶಲ್ಯಗಳನ್ನು ರೂಪಿಸಲು ಪ್ರಾರಂಭಿಸುವುದು ಇದರ ಉದ್ದೇಶವಾಗಿದೆ.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">ನನ್ನ ರೋಬೊಟಿಕ್ ಸ್ನೇಹಿತರು</a><br><small>ಪೂರ್ವನಿರ್ಧರಿತ ಚಿಹ್ನೆಯ ಕೀಲಿಯನ್ನು ಬಳಸಿ, ಯಾವುದೇ ಮೌಖಿಕ ಆಜ್ಞೆಗಳನ್ನು ಬಳಸದೆ ನಿರ್ದಿಷ್ಟ ಕಾರ್ಯಗಳನ್ನು ಸಾಧಿಸಲು ಒಬ್ಬರಿಗೊಬ್ಬರು ಹೇಗೆ ಮಾರ್ಗದರ್ಶನ ನೀಡಬೇಕೆಂದು ನಿಮ್ಮ ವಿದ್ಯಾರ್ಥಿಗಳು ಕಂಡುಕೊಳ್ಳುತ್ತಾರೆ. ಈ ವಿಭಾಗವು ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಚಿಹ್ನೆಗಳು ಮತ್ತು ಕ್ರಿಯೆಗಳ ನಡುವಿನ ಸಂಪರ್ಕ, ಅಲ್ಗಾರಿದಮ್ ಮತ್ತು ಪ್ರೋಗ್ರಾಂ ನಡುವಿನ ವ್ಯತ್ಯಾಸ ಮತ್ತು ಡೀಬಗ್ ಮಾಡುವ ಮೌಲ್ಯಯುತ ಕೌಶಲ್ಯವನ್ನು ಕಲಿಸುತ್ತದೆ.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">ನಿಜ ಜೀವನದ ಅಲ್ಗಾರಿದಂಗಳು: ಕಾಗದದ ವಿಮಾನಗಳು</a><br><small>ಈ ಪಾಠದಲ್ಲಿ, ವಿದ್ಯಾರ್ಥಿಗಳು ಅಲ್ಗಾರಿದಂ‌ಗಳ ಪರಿಕಲ್ಪನೆಯನ್ನು ದೈನಂದಿನ ಚಟುವಟಿಕೆಗಳಲ್ಲಿ ಬಳಸುತ್ತಾರೆ. ಅಲ್ಗಾರಿದಂ‌ಗಳನ್ನು ಚರ್ಚಿಸಿದ ನಂತರ, ವಿದ್ಯಾರ್ಥಿಗಳು ಅಲ್ಗಾರಿದಂ ಬಳಸಿ ಕಾಗದದ ವಿಮಾನಗಳನ್ನು ತಯಾರಿಸುತ್ತಾರೆ. ನೈಜ-ಪ್ರಪಂಚದ ಸನ್ನಿವೇಶಗಳನ್ನು ಆನ್‌ಲೈನ್ ಸನ್ನಿವೇಶಗಳಿಗೆ ಮತ್ತು ತದ್ವಿರುದ್ಧವಾಗಿ ಅನುವಾದಿಸಲು ಕೌಶಲ್ಯಗಳನ್ನು ರೂಪಿಸಲು ಪ್ರಾರಂಭಿಸುವುದು ಇದರ ಉದ್ದೇಶವಾಗಿದೆ.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">ನಿಜ ಜೀವನದ ಅಲ್ಗಾರಿದಂಗಳು: ಬೀಜ ಬಿತ್ತುವುದು</a><br><small>ಈ ಪಾಠದಲ್ಲಿ, ವಿದ್ಯಾರ್ಥಿಗಳು ಅಲ್ಗಾರಿದಂ‌ಗಳ ಪರಿಕಲ್ಪನೆಯನ್ನು ನೈಜ ಬೀಜವನ್ನು ಸಸಿಯಾಗಿಸುವ ನಿಜ ಜೀವನದ ದಿನನಿತ್ಯದ ಚಟುವಟಿಕೆಗಳಲ್ಲಿ ಸಂಯೋಜಿಸುತ್ತಾರೆ. ನೈಜ-ಪ್ರಪಂಚದ ಸನ್ನಿವೇಶಗಳನ್ನು ಆನ್‌ಲೈನ್ ಸನ್ನಿವೇಶಗಳಿಗೆ ಮತ್ತು ತದ್ವಿರುದ್ಧವಾಗಿ ಅನುವಾದಿಸಲು ಕೌಶಲ್ಯಗಳನ್ನು ರೂಪಿಸಲು ಪ್ರಾರಂಭಿಸುವುದು ಇದರ ಉದ್ದೇಶವಾಗಿದೆ.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">ಟ್ಯಾಂಗ್‌ಗ್ರಾಂಗಳು</a><br><small>ಈ ಪಾಠವು ಅಲ್ಗಾರಿದಂಗಳ ಕುರಿತು ಏನೋ ಮಹತ್ವವಾಗಿರುವುದನ್ನು ತೋರಿಸುತ್ತದೆ. ನೀವು ಅಲ್ಗಾರಿದಂ ಅನ್ನು ಸರಳವಾಗಿ ಉಳಿಸಿಕೊಳ್ಳುವವರೆಗೆ, ಅದನ್ನು ಬಳಸಲು ಸಾಕಷ್ಟು ಮಾರ್ಗಗಳಿವೆ. ಆದಾಗ್ಯೂ, ಪ್ರತಿಯೊಬ್ಬರೂ ಒಂದೇ ಫಲಿತಾಂಶವನ್ನು ಒದಗಿಸುತ್ತಾರೆ ಎಂದು ಖಚಿತಪಡಿಸಿಕೊಳ್ಳಲು ನೀವು ಬಯಸಿದರೆ, ನಿಮ್ಮ ಅಲ್ಗಾರಿದಂ‌ಗೆ ಹೆಚ್ಚಿನ ವಿವರಗಳ ಅಗತ್ಯವಿದೆ. ಟ್ಯಾಂಗ್‌ಗ್ರಾಮ್‌ಗಳೊಂದಿಗೆ ಆಡುವಾಗ ವಿದ್ಯಾರ್ಥಿಗಳು ವಿವರವಾದ ಮತ್ತು ಸಾಮಾನ್ಯ ಅಲ್ಗಾರಿದಂ ನಡುವಿನ ವ್ಯತ್ಯಾಸವನ್ನು ತಿಳಿದುಕೊಳ್ಳುತ್ತಾರೆ.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">ಗಣಕಾತ್ಮಕ ಆಲೋಚನೆ</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">ಗಣಕಾತ್ಮಕ ಆಲೋಚನೆ</a><br><small>ಈ ಚಟುವಟಿಕೆಗೆ ಯಾವುದೇ ಸೂಚನೆಗಳು ಇರುವುದಿಲ್ಲ. ಬದಲಾಗಿ, ಆಟವನ್ನು ಹೇಗೆ ಆಡಬೇಕೆಂದು ಲೆಕ್ಕಾಚಾರ ಮಾಡಲು ಕಾಲ್ಪನಿಕ ಆಟಗಾರರು ಏನು ಮಾಡಿದ್ದಾರೆ ಎಂಬುದರ ಉದಾಹರಣೆಗಳನ್ನು ವಿದ್ಯಾರ್ಥಿಗಳು ಬಳಸುತ್ತಾರೆ. ಈ ಪಾಠವು ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಗಣಕಾತ್ಮಕ ಚಿಂತನೆಯ ನಾಲ್ಕು ಕಲೆಗಳನ್ನು (ವಿಘಟನೆ, ಮಾದರಿ ಹೊಂದಾಣಿಕೆ, ಅಮೂರ್ತತೆ ಮತ್ತು ಅಲ್ಗಾರಿದಂಗಳು) ಒಂದು ಸುಸಂಘಟಿತ ಚಟುವಟಿಕೆಯಲ್ಲಿ ಅಭ್ಯಾಸ ಮಾಡಲು ಅವಕಾಶವನ್ನು ನೀಡುತ್ತದೆ.</td> <td><a href="https://youtu.be/TlAaklrolA0">ಪಾಠದ ವೀಡಿಯೋ</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">ಪಾಠವನ್ನು ಕ್ರಿಯೆಯಲ್ಲಿ ನೋಡಿ</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">ಚಟುವಟಿಕೆಯ ಉತ್ತರದ ಕೀ </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">ರಾಕ್ಷಸರ ಜೊತೆಯಲ್ಲಿ ಗಣಕಾತ್ಮಕ ಚಿಂತನೆ</a><br><small>ಕಾಗದ ಮತ್ತು ಮಾರ್ಕರ್ ಹೊರತುಪಡಿಸಿ ಬೇರೆನೂ ಇಲ್ಲದೇ, ವಿದ್ಯಾರ್ಥಿಗಳು ಗಣಕಾತ್ಮಕ ಚಿಂತನೆಯ ನಾಲ್ಕು ಹಂತಗಳನ್ನು ತಿಳಿದುಕೊಳ್ಳುತ್ತಾರೆ. ಸಂಕ್ಷಿಪ್ತ ಪರಿಚಯದ ನಂತರ, ವಿದ್ಯಾರ್ಥಿಗಳನ್ನು ಗುಂಪುಗಳಾಗಿ ವಿಭಜಿಸಬೇಕು, ಅಲ್ಲಿ ಅವರು ಇತರ ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ನಿರ್ದಿಷ್ಟ ರಾಕ್ಷಸರ (ಪೂರ್ವ-ಆಯ್ಕೆ ಮಾಡಿದ ರಾಕ್ಷಸರ ಕ್ಯಾಟಲಾಗ್‌ನಿಂದ) ನಿರ್ದೇಶನಗಳನ್ನು ಒದಗಿಸಬೇಕಾಗುತ್ತದೆ. ಸಂಪೂರ್ಣ ಕಾರ್ಯವನ್ನು ವಿಘಟಿಸಬೇಕು, ನಂತರ ತಂಡಗಳು ಕ್ಯಾಟಲಾಗ್‌ನಲ್ಲಿರುವ ಎಲ್ಲಾ ರಾಕ್ಷಸರನ್ನು ಮಾದರಿಗಳಿಗಾಗಿ ವಿಶ್ಲೇಷಿಸುತ್ತವೆ, ರಾಕ್ಷಸರಿಂದ ಒಂದೇ ರೀತಿಯ ವಿವರಗಳನ್ನು ಪಡೆಯಲಾಗುತ್ತದೆ, ನಂತರ ಒಂದು ನಿರ್ದಿಷ್ಟ ರಾಕ್ಷಸನನ್ನು ಚಿತ್ರಿಸಲು ಮತ್ತೊಂದು ತಂಡಕ್ಕೆ ಅಲ್ಗಾರಿದಂ (ದಿಕ್ಕುಗಳು) ರಚಿಸಲು ಆ ಮಾಹಿತಿಯನ್ನು ಬಳಸಲಾಗುತ್ತದೆ. ತಂಡಗಳು ನಂತರ ಮತ್ತೊಂದು ಗುಂಪಿನೊಂದಿಗೆ ಅಲ್ಗಾರಿದಂಗಳನ್ನು ಬದಲಾಯಿಸುತ್ತವೆ ಮತ್ತು ಆ ಅಲ್ಗಾರಿದಂ ಏನನ್ನು ಸೂಚಿಸುತ್ತದೆ ಎಂಬುದರ ಆಧಾರದ ಮೇಲೆ ರಾಕ್ಷಸನನ್ನು ಚಿತ್ರಿಸಲಾಗುತ್ತದೆ. ರೇಖಾಚಿತ್ರವು ಮೂಲ ತಂಡದ ಉದ್ದೇಶವಾಗಿದೆಯೇ?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">ಗುರುತಿಸದೇ ಇರುವ ದೋಷಗಳು</a><br><small>ಈ ಪಾಠವು ಡೀಬಗ್ ಮಾಡುವ ಹಂತಗಳ ಮೂಲಕ ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಮಾರ್ಗದರ್ಶನ ನೀಡುತ್ತದೆ. ವಿದ್ಯಾರ್ಥಿಗಳು ವಿಚಾರವೊಂದನ್ನು ಕಲಿಯುತ್ತಾರೆ: "ಏನಾಯಿತು? ಏನಾಗಬೇಕಿತ್ತು? ಇದು ನಿಮಗೆ ಏನನ್ನು ಹೇಳುತ್ತದೆ?' </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>ನಿರಂತರತೆ</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">ಅಡಿಪಾಯವೊಂದನ್ನು ನಿರ್ಮಿಸುವುದು</a><br><small>ಹೊಸ ಮತ್ತು ಪರಿಹರಿಸದೇ ಇರುವ ಸಮಸ್ಯೆಗಳು ಹೆಚ್ಚಿನ ವೇಳೆ ಕಷ್ಟಕರವಾಗಿರುತ್ತವೆ. ಸೃಜನಾತ್ಮಕ, ಉಪಯುಕ್ತ ಮತ್ತು ಬುದ್ಧಿವಂತ ರೀತಿಯಲ್ಲಿ ಏನನ್ನಾದರೂ ಮಾಡುವ ಯಾವುದೇ ಅವಕಾಶವನ್ನು ನಾವು ಹೊಂದಲು ಬಯಸಿದರೆ, ನಾವು ಯಶಸ್ವಿಯಾಗುವ ಮೊದಲು ಕೆಲವು ಬಾರಿ ವಿಫಲವಾಗಿದ್ದರೂ ಸಹ ಕಠಿಣ ಸಮಸ್ಯೆಗಳನ್ನು ಎದುರಿಸಲು ನಾವು ಸಿದ್ಧರಾಗಿರಬೇಕು. ಈ ಪಾಠದಲ್ಲಿ, ವಿದ್ಯಾರ್ಥಿಗಳು ಸಾಮಾನ್ಯ ವಸ್ತುಗಳೊಂದಿಗೆ ರಚನೆಯನ್ನು ರೂಪಿಸುತ್ತಾರೆ. ಹತ್ತು ಸೆಕೆಂಡುಗಳಿಗಿಂತ ಹೆಚ್ಚು ಕಾಲ ಪಠ್ಯಪುಸ್ತಕವನ್ನು ಹಿಡಿದಿಟ್ಟುಕೊಳ್ಳುವ ಸಾಮರ್ಥ್ಯದ ಮೇಲೆ ರಚನೆಯನ್ನು ಪರೀಕ್ಷಿಸಲಾಗುತ್ತದೆ. ಹೆಚ್ಚಿನ ವಿದ್ಯಾರ್ಥಿಗಳು ಇದನ್ನು ಮೊದಲ ಬಾರಿಗೆ ಇದನ್ನು ಸರಿಯಾಗಿ ಮಾಡಲು ಸಾಧ್ಯವಾಗುವುದಿಲ್ಲ, ಆದರೆ ಅವರು ಪ್ರಯತ್ನಿಸುವುದನ್ನು ಮುಂದುವರಿಸುವುದು ಮುಖ್ಯ.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">ಸ್ಟೀವೀ ಮತ್ತು ದೊಡ್ಡ ಪ್ರಾಜೆಕ್ಟ್</a><br><small>ಪ್ರಶ್ನೆಗೆ ಉತ್ತರಿಸುವಾಗ ಅಥವಾ ಪ್ರಾಜೆಕ್ಟ್‌ನಲ್ಲಿ ಕೆಲಸ ಮಾಡುವಾಗ ವಿದ್ಯಾರ್ಥಿಗಳು ಅಡೆತಡೆಯನ್ನು ಎದುರಿಸಿದಲ್ಲಿ, ಅವರು ನಿರಾಶೆಗೊಳ್ಳುವುದು ಮತ್ತು ಬಿಟ್ಟುಬಿಡುವುದು ತುಂಬಾ ಸುಲಭವಾಗಿದೆ. ಈ ಪಾಠವು ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ ಹತಾಶೆಯನ್ನು ಎದುರಿಸುವುದು ಕಲಿಕೆಯ ಪ್ರಮುಖ ಭಾಗವಾಗಿದೆ ಎಂಬ ಕಲ್ಪನೆಯನ್ನು ಒದಗಿಸುತ್ತದೆ. ಇಲ್ಲಿ, ನಿರಾಶೆಯನ್ನು ವೈಫಲ್ಯದ ಸಂಕೇತವಾಗಿ ಎನ್ನುವ ರೀತಿಯಲ್ಲಿ ಅಲ್ಲದೇ ಸೃಜನಾತ್ಮಕ ಪ್ರಕ್ರಿಯೆಯಲ್ಲಿ ಒಂದು ಹೆಜ್ಜೆ ಎನ್ನುವಂತೆ ಪ್ರಸ್ತುತಪಡಿಸಲಾಗುತ್ತದೆ. ಈ ಪಾಠವನ್ನು ಒಂದು ಅಥವಾ ಎರಡು ತರಗತಿಗಳ ಅವಧಿಯಲ್ಲಿ ಮಾಡಬಹುದು. ನಿಮಗೆ ಹೆಚ್ಚಿನ ಸಮಯವಿದ್ದರೆ, ಮಾರ್ಬಲ್ ರನ್ ಚಟುವಟಿಕೆಯ ನಿರ್ಮಾಣ ಮತ್ತು ಪರಿಷ್ಕರಣೆ ಹಂತವನ್ನು ಚಿತ್ರಿಸಲು ಹಿಂಜರಿಯಬೇಡಿ.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>ಅಬ್‌ಸ್ಟ್ರಾಕ್ಷನ್ (ಅಮೂರ್ತತೆ)</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">ಮ್ಯಾಡ್ ಗ್ಲಿಬ್ಸ್</a><br><small>ಅಮೂರ್ತತೆಯು ಕಂಪ್ಯೂಟರ್ ತಜ್ಞನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳಬೇಕಾದ ಅತ್ಯಂತ ಮಹತ್ವದ ಕೌಶಲ್ಯಗಳಲ್ಲಿ ಒಂದಾಗಿದೆ. ಇದು ಸಮಸ್ಯೆಗಳನ್ನು ಸರಳಗೊಳಿಸುತ್ತದೆ ಮತ್ತು ಅನಗತ್ಯ ಪುನರಾವರ್ತನೆಯನ್ನು ತಡೆಯುತ್ತದೆ. ಉತ್ತಮ ಕೋಡರ್ ಪ್ರತಿ ಬಾರಿ ಪ್ರೋಗ್ರಾಂ ಅನ್ನು ರಚಿಸಿದಾಗ ಅಮೂರ್ತತೆಯನ್ನು ಬಳಸುತ್ತಾರೆ. ಈ ಚಟುವಟಿಕೆಯು ನಿಮ್ಮ ವಿದ್ಯಾರ್ಥಿಗಳು ವ್ಯತ್ಯಾಸಗಳಿಗಾಗಿ ಕಥೆಗಳನ್ನು ವಿಶ್ಲೇಷಿಸುವಂತೆ ಮಾಡುತ್ತದೆ ಇದರಿಂದ ಅವರು ಅವುಗಳ ಸಾರಾಂಶರೂಪವನ್ನು ತಿಳಿಯುವುದು (ಅಮೂರ್ತತೆ) ಸಾಧ್ಯವಿರುತ್ತದೆ. ಅಂತಹ ಸಾರಾಂಶರೂಪದ ಕಥೆಗಳು ಮೋಜಿನ ಟೆಂಪ್ಲೆಟ್‌ಗಳು ಹಾಗೂ ಹೊಸ ತಮಾಷೆಯ ವಿಚಾರಗಳಾಗುತ್ತವೆ.</td> <td><a href="https://youtu.be/TctGRrUdkcc">ಪಾಠದ ವೀಡಿಯೋ</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">ಚಟುವಟಿಕೆ ಉತ್ತರದ ಕೀ</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">ವಿಶ್ಲೇಷಣೆ  ಉತ್ತರದ ಕೀ </a></td>
  </tr>
<tr>
   <th id=t07>ವೇರಿಯೆಬಲ್ಸ್</th>
​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">ಎನ್ವೆಲೋಪ್ ವೇರಿಯೆಬಲ್ಸ್</a><br><i>*ಅಗತ್ಯವಸ್ತುಗಳು: ಎನ್ವೆಲೋಪ್‌ಗಳು (1-4/2-4 ರ ಗುಂಪು)</i><br><small>ವೇರಿಯೆಬಲ್‌ಗಳನ್ನು ಸಂಖ್ಯೆಗಳು ಅಥವಾ ಶಬ್ದಗಳಂತಹ ಮೌಲ್ಯಗಳಿಗೆ ಪ್ಲೇಸ್‌ಹೋಲ್ಡರ್‌ಗಳಂತೆ ಬಳಸಲಾಗುತ್ತದೆ. ವೇರಿಯೆಬಲ್‌ಗಳು ಪ್ರೋಗ್ರಾಮಿಂಗ್‌ನಲ್ಲಿ ಬಹಳ ಸ್ವಾತಂತ್ರವನ್ನು ನೀಡುತ್ತವೆ. ನುಡಿಗಟ್ಟನ್ನು ಹಲವು ಬಾರಿ ಟೈಪ್ ಮಾಡುವ ಬದಲು ಅಥವಾ ಅಸ್ಪಷ್ಟ ಸಂಖ್ಯೆಯನ್ನು ನೆನಪಿಟ್ಟುಕೊಳ್ಳುವ ಬದಲು, ಕಂಪ್ಯೂಟರ್ ತಜ್ಞರುಗಳು ಅವುಗಳನ್ನು ಉಲ್ಲೇಖಿಸಲು ವೇರಿಯೆಬಲ್‌ಗಳನ್ನು ಬಳಸಬಹುದು. ವೇರಿಯೆಬಲ್‌ಗಳು ಯಾವುವು ಮತ್ತು ನಾವು ಅವುಗಳನ್ನು ವಿವಿಧ ರೀತಿಯಲ್ಲಿ ಹೇಗೆ ಬಳಸಬಹುದು ಎಂಬುದನ್ನು ವಿವರಿಸಲು ಈ ಪಾಠವು ಸಹಾಯ ಮಾಡುತ್ತದೆ. ವೇರಿಯೆಬಲ್‌ಗಳ ಕಲ್ಪನೆಯು ಗ್ರಹಿಸಲು ಸುಲಭವಾದ ಪರಿಕಲ್ಪನೆಯಲ್ಲ, ಆದ್ದರಿಂದ ಪಾಠದ ಕೊನೆಯಲ್ಲಿ ಚರ್ಚೆಗೆ ಸಾಕಷ್ಟು ಸಮಯವನ್ನು ಒದಗಿಸಲು ನಾವು ಶಿಫಾರಸು ಮಾಡುತ್ತೇವೆ.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

