---
title: Fondamenti di CS Unplugged
video_player: true
theme: responsive
---

# Fondamenti di CS Unplugged

Abbiamo compilato un elenco di tutte le nostre lezioni unplugged che puoi usare nella tua classe. Ora puoi insegnare i fondamenti dell'informatica, che tu abbia o meno dei computer in classe!
<br>
<div class="col-50">
Parliamo di lezioni in cui gli studenti non lavorano al computer in quanto “unplugged”, ossia non collegati Gli studenti lavoreranno spesso con carta e matita o con strumenti fisici.  Queste sono opportunità cinestetiche intenzionalmente posizionate che aiutano gli studenti a digerire concetti complicati con modalità che si collegano alle loro vite. <br><br>Le lezioni Unplugged sono particolarmente utili per costruire e mantenere un ambiente di classe collaborativo, e sono utili esperienze fondamentali a cui si può fare riferimento quando si introducono concetti più astratti. Ognuna di queste attività può essere usata da sola o con altre lezioni di informatica su concetti correlati.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Età 4+, solo inglese
</div>

<div style="clear: both;"></div>

***
## Lezioni unplugged in CS Fundamentals 2021-22
Le seguenti lezioni si trovano in <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">CS Fundamentals 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Corso</th>    <th><center><big>Schema delle lezioni</th>     <th width=10%><center><big>Concetto</th>    <th width=20%><center><big>Video</th>     <tr>    <th rowspan="3" id=”t01”>Corso A</th>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 -Happy Maps</a><br><small>Questa lezione unplugged raggruppa squadre con un compito semplice: portare "flurb" alla frutta. Gli studenti si eserciteranno a scrivere istruzioni precise lavorando per tradurre le istruzioni nei simboli forniti. Se sorgono problemi nel codice, gli studenti devono lavorare insieme per individuare i bug e realizzare le soluzioni.</td><td>Sequenze</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>  </tr>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - Happy Loops</a><br><small>Questa attività riprende Happy Maps. Questa volta, gli studenti risolveranno puzzle più grandi e più lunghi con il loro codice, il che li porterà a vedere l'utilità delle strutture che permettono loro di scrivere codici più lunghi in modo più facile.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - The Big Event Jr.</a><br><small>Gli eventi sono un ottimo modo per aggiungere varietà a un algoritmo pre-scritto. A volte si desidera che il programma sia in grado di rispondere all'utente esattamente quando l'utente lo desidera. È a questo che servono gli eventi.</td><td>Eventi</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>  </tr>       <tr>    <th rowspan="3" id=”t02”>Corso B</th>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - Move It, Move It</a><br><small>Questa lezione lavorerà per preparare mentalmente gli studenti agli esercizi di codifica che incontreranno durante il corso. In piccoli gruppi, gli studenti useranno l'attività fisica per programmare il passaggio attento dei loro compagni di classe da un posto all'altro fino al raggiungimento di un obiettivo.</td><td>Sequenze</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - Getting Loopy</a><br><small>Quando cominciamo a scrivere programmi più lunghi e interessanti, il nostro codice spesso contiene molte ripetizioni. In questa lezione, gli studenti impareranno come i loop possono essere usati per comunicare più facilmente istruzioni che hanno molte ripetizioni, guardando i modelli ripetuti di movimento in una danza.</td><td>Loop</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - The Right App</a><br><small>Questa lezione fa capire agli studenti che l'informatica può aiutare le persone nella vita reale. In primo luogo, gli studenti entrano in empatia con diversi utenti fittizi di smartphone per aiutarli a trovare "l'app giusta" che risponde alle loro esigenze. Poi, gli studenti esercitano l'empatia e la creatività per disegnare la propria applicazione per smartphone che si rivolge ai bisogni di un utente in più.</td><td>Effetti del computing</td> <td><img src="/images/b10.png" width="90%"></td>  </tr>       <tr>    <th rowspan="4" id=”t03”>Corso C</th>    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supporti: Bicchieri di plastica (10/gruppo di 2-3)</i><br><small>Utilizzando una serie di simboli al posto del codice, gli studenti progetteranno algoritmi per istruire un "robot" a impilare i bicchieri in diversi modelli. Gli studenti parteciperanno a turno come robot, rispondendo solo all'algoritmo definito dai loro compagni. Questo segmento insegna agli studenti la connessione tra simboli e azioni, la differenza tra un algoritmo e un programma, e la preziosa abilità del debug.</td><td>Sequenze</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>  </tr>   <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supporti: Bicchieri di carta (20/gruppo di 4)</i><br><small>PanoramicaSulla base dell'attività iniziale "My Robotic Friends", gli studenti affrontano progetti più grandi e complessi. Al fine di programmare i loro "robot" per completare questi disegni più grandi, gli studenti dovranno individuare i modelli ripetuti nelle loro istruzioni che potrebbero essere sostituiti da un loop.</td><td>Loop</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>  </tr>       <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - Il grande evento</a><br><small>Gli studenti impareranno presto che gli eventi sono un ottimo modo per aggiungere flessibilità ad un algoritmo pre-scritto. A volte si desidera che il programma sia in grado di rispondere all'utente esattamente quando l'utente lo desidera. Gli eventi possono rendere il tuo programma più interessante e interattivo.</td><td>Eventi</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>   </tr>        </tr>      <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - Braccialetti binari</a><br><i>*Supporti: Evidenziatori. Opzionale - 18 perline nere/18 bianche, 1 scovolino per studente</i><br><small>Il binario è estremamente importante nel mondo dei computer. La maggior parte dei computer di oggi memorizza ogni tipo di informazione in forma binaria. Questa lezione aiuta a dimostrare come sia possibile prendere qualcosa dalla vita reale e tradurla in una serie di azioni.</td><td>Binario</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>  </tr>         <tr>    <th rowspan="3" id=”t04”>Corso D</th>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - Programmazione su carta millimetrata<br></a><small>Programmandosi a vicenda per disegnare immagini, gli studenti hanno l'opportunità di sperimentare alcuni dei concetti fondamentali della programmazione in modo divertente e accessibile. La classe inizierà facendo usare agli studenti dei simboli per insegnare loro a colorare dei quadrati sulla carta millimetrata nel tentativo di riprodurre un'immagine esistente. Se c'è tempo, la lezione può concludersi con immagini create dagli studenti stessi.</td><td>Sequenze</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - Programmazione a staffetta<br></a><small>Questa attività inizierà con una breve lezione sul debug e sulla persistenza, poi passerà rapidamente a una corsa contro il tempo, quando gli studenti si divideranno in squadre e lavoreranno insieme per scrivere un programma un'istruzione alla volta.</td><td>Sequenze</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>      </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - Condizionali con le carte</a><br><small>Questa lezione dimostra come i condizionali possono essere usati per adattare un programma a specifiche informazioni. Non sempre abbiamo tutte le informazioni di cui abbiamo bisogno quando scriviamo un programma. A volte vorrete fare qualcosa di diverso in una situazione piuttosto che in un'altra, anche se non sapete quale situazione sarà vera quando il vostro codice verrà eseguito. Ecco dove entrano in gioco i condizionali. I condizionali permettono a un computer di prendere una decisione, in base alle informazioni che sono vere ogni volta che il codice viene eseguito.+</td><td>Condizionali</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>    </tr>         <tr>    <th rowspan="3" id=”t05”>Corso E</th>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - Condivisione digitale</a><br><i>*Supporti: Smartphone o tablet</i><br><small>Consigliata a Computer Science Fundamentals dal team di Copyright and Creativity, questa lezione esiste per aiutare gli studenti a capire le sfide e i benefici del rispetto della proprietà e del copyright, in particolare in ambienti digitali. Gli studenti vanno incoraggiati a rispettare i diritti degli artisti come parte importante dell'essere un cittadino digitale etico.</td><td>Cittadinanza digitale</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - Composizione musicale</a><br><small>Una delle strutture più grandiose nel mondo dell'informatica è la funzione. Le funzioni (a volte chiamate procedure) sono mini programmi che potete usare più e più volte all'interno del vostro programma più grande. Questa lezione aiuterà gli studenti a capire intuitivamente perché combinare pezzi di codice in funzioni può essere una pratica così utile.</td><td>Funzioni</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 - Progettare per l'accessibilità</a><br><small>In questa lezione, gli studenti impareranno l'accessibilità e il valore dell'empatia attraverso il brainstorming e la progettazione di soluzioni accessibili per ipotetiche applicazioni.</td><td>Effetti del computing</td><td><img src="/images/e18.png" width="90%"></td>  </tr>    </tr>         <tr>    <th rowspan="3" id=”t06”>Corso F</th>           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 - Storie di spazi vuoti</a><br><i>*Supporti: 6 buste (adatto anche: carta o schede, piegate a metà)</i><br><small>Gli studenti useranno storie da riempire negli spazi vuoti (simili a Mad Libs®) come contesto per capire come i computer prendono e memorizzano gli input di un utente, per poi usarli in seguito quando un programma viene eseguito.
   </td><td>Variabili</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>    </tr>        <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - Per divertirsi con i loop</a><br><i>*Supporti: Dadi (3 dadi/gruppo di 2-4)</i><br><small>Sappiamo che i loop ci permettono di fare le cose più e più volte, ma ora impareremo come usare i loop che hanno strutture extra incorporate. Queste nuove strutture permetteranno agli studenti di creare un codice più potente e dinamico.</td><td>Per Loop</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - Internet</a><br><small>Anche se molte persone usano internet quotidianamente, non molti sanno come funziona. In questa lezione, gli studenti faranno finta di navigare in Internet, mentre imparano a conoscere le connessioni, gli URL, gli indirizzi IP e i DNS.</td><td>Dati</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## Ulteriori lezioni Unplugged

Le seguenti lezioni sono organizzate per concetto e si trovano nelle versioni precedenti dei nostri corsi CS Fundamentals. Altre risorse che potreste voler consultare mentre pianificate l'uso di queste lezioni includono:
* [Guida al curriculum dei corsi A-F del 2019](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [Elenco dei materiali per i corsi A-F del 2019](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [Elenchi dei corsi Amazon del 2019](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [Guida al curriculum dei corsi A-F del 2018](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [Guida al curriculum dei corsi A-F del 2017 (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Guida al curriculum dei corsi 1-4](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF Flashcard](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Concetto</th>    <th width=65%><center><big>Schema delle lezioni <br><small> Lo schema delle lezioni include risorse aggiuntive (diapositive, video, chiavi di risposta, ecc.).
</th>     <th><center><big>Risorse</th>     <tr>    <th rowspan="2" id=t07 width=5%>Cittadinanza digitale</th>    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>  </tr>  <tr>      <td colspan="2">*Common Sense Education ha un <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">curriculum completo di cittadinanza digitale</a> che include molte attività unplugged.</td>    <tr>    <th id=t07>Binario</th>        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Immagini binarie </a><br><small>*Supporti:Opzionale - Raggruppamenti di oggetti opposti da mostrare agli studenti. Anche se molte persone pensano al binario come esclusivamente zeri e uno, gli studenti saranno introdotti all'idea che le informazioni possono essere rappresentate in una varietà di opzioni binarie. Questa lezione sviluppa ulteriormente questo concetto illustrando come un computer possa memorizzare informazioni ancora più complesse (come immagini e colori) anche in binario.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>Loop</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">My Loopy Robotic Friends</a><br><small>Qui gli studenti imparano la semplicità e l'utilità dei loop "programmando" i loro amici usando il linguaggio di "My Robotic Friends" Una volta introdotti i loop, gli studenti scopriranno che possono costruire strutture più grandi più velocemente.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Funzioni</th>    <td><a href=”https://code.org/curriculum/course3/4/Teacher”>Acchiappasogni funzionali</a><br><small>In questa lezione, gli studenti faranno un acchiappasogni con spago, perline e un ciondolo speciale. Gli studenti seguiranno una serie di passaggi ripetitivi, poi gli verrà chiesto di individuare certi insiemi di "abilità" che vengono duplicati più volte. Una volta che queste abilità sono definite, saranno chiamate da un programma principale e tutto il bel processo di creazione sarà registrato su un unico foglio di carta. Il programma finale sarà orientato a tutta la classe, qualunque sia il loro tipo di corda, perline e ciondoli. Per consentire efficacemente ciò, gli studenti dovranno "astrarre" i dettagli dei loro materiali specifici e creare termini vaghi per le forniture di un individuo. Questo uso di segnaposti generici è una meravigliosa introduzione alle variabili.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Video della lezione</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Guarda la lezione in azione</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Chiave di risposta dell'attività <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Chiave di risposta per la valutazione</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Scrivere canzoni con i parametri</a><br><small>Una delle strutture più grandiose nel mondo dell'informatica è la funzione. Le funzioni (a volte chiamate procedure) sono mini programmi che potete usare più e più volte all'interno del vostro programma più grande. Questa lezione aiuterà gli studenti a capire intuitivamente perché combinare pezzi di codice in funzioni è una pratica così utile, e come possono usare queste strutture anche quando i pezzi di codice sono leggermente diversi.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Algoritmi</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Dice Race</a><br><small>In questa lezione, gli studenti metteranno in relazione il concetto di algoritmo con le attività della vita reale giocando al gioco Dice Race. L'obiettivo qui è quello di iniziare a costruire le competenze per tradurre le situazioni del mondo reale in scenari online e viceversa.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">I miei amici robot</a><br><small>Utilizzando una chiave di simbolo predefinita, i vostri studenti capiranno come aiutarsi l'un l'altro a compiere compiti specifici senza usare alcun comando verbale. Questo segmento insegna agli studenti la connessione tra simboli e azioni, la differenza tra un algoritmo e un programma, e la preziosa abilità del debug.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Algoritmi della vita reale: aerei di carta</a><br><small>In questa lezione, gli studenti metteranno in relazione il concetto di algoritmi con le attività quotidiane. Dopo aver discusso gli algoritmi, gli studenti faranno aeroplani di carta usando un algoritmo. L'obiettivo qui è quello di iniziare a costruire le competenze per tradurre le situazioni del mondo reale in scenari online e viceversa.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Algoritmi della vita reale: Piantare un seme</a><br><small>In questa lezione, gli studenti metteranno in relazione il concetto di algoritmi con le attività quotidiane della vita reale, piantando un vero e proprio seme. L'obiettivo qui è quello di iniziare a costruire le competenze per tradurre le situazioni del mondo reale in scenari online e viceversa.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangram</a><br><small>Questa lezione ci mostra qualcosa di importante sugli algoritmi. Finché si mantiene un algoritmo semplice, ci sono molti modi per usarlo. Tuttavia, se volete essere sicuri che tutti producano lo stesso risultato, allora il vostro algoritmo ha bisogno di più dettagli. Gli studenti impareranno la differenza tra un algoritmo dettagliato e uno generale mentre giocano con i tangram.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Pensiero computazionale</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Pensiero computazionale</a><br><small>Per questa attività non vengono fornite istruzioni. Invece, gli studenti useranno esempi di ciò che i giocatori immaginari hanno fatto per capire come giocare. Questa lezione dà agli studenti l'opportunità di praticare le quattro arti del pensiero computazionale (decomposizione, corrispondenza dei modelli, astrazione e algoritmi) in un'attività coesiva.</td> <td><a href="https://youtu.be/TlAaklrolA0">Video della lezione</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">See Lesson in Action</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Chiave di risposta dell'attività </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Pensiero computazionale con i mostri</a><br><small>Con nient'altro che carta e pennarelli, gli studenti impareranno i quattro passaggi del pensiero computazionale. Dopo una breve introduzione, gli studenti devono essere divisi in gruppi dove dovranno creare indicazioni per gli altri studenti per disegnare un mostro specifico (da un catalogo di mostri pre-selezionati). Tutta l'attività deve essere suddivisa, quindi le squadre analizzeranno tutti i mostri nel catalogo per i modelli, astrarranno dettagli simili dai mostri, poi useranno queste informazioni per creare un algoritmo (indicazioni) per un'altra squadra per disegnare un certo mostro. Le squadre si scambieranno poi gli algoritmi con un altro gruppo e disegneranno il mostro in base a ciò che quell'algoritmo indica. Il disegno è quello che la squadra originale intendeva?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Bug non individuati</a><br><small>Questa lezione accompagnerà gli studenti attraverso i passaggi del debugging. Gli studenti impareranno il mantra: "Cosa è successo? Cosa doveva succedere? Cosa ti dice questo?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Persistenza</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Costruire una base</a><br><small>I problemi nuovi e irrisolti sono spesso piuttosto difficili. Se vogliamo avere qualche possibilità di fare qualcosa di creativo, utile e intelligente, allora dobbiamo essere disposti ad affrontare problemi difficili anche se ciò significa fallire alcune volte prima di avere successo. In questa lezione, gli studenti costruiranno una struttura con materiali comuni. La struttura sarà testata sulla sua capacità di tenere un libro di testo per più di dieci secondi. La maggior parte degli studenti non riuscirà a farlo bene la prima volta, ma è importante che insistano e continuino a provarci.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie e il grande progetto</a><br><small>Quando gli studenti incontrano un ostacolo nel rispondere a una domanda o nel lavorare a un progetto, è facile per loro sentirsi frustrati e rinunciare. Questa lezione introdurrà gli studenti all'idea che la frustrazione può essere una parte importante dell'apprendimento. Qui, la frustrazione è presentata come un passaggio nel processo creativo, piuttosto che un segno di fallimento. Questa lezione può essere svolta in una o due sessioni in classe. Se avete più tempo, sentitevi liberi di disegnare la fase di costruzione e revisione dell'attività Marble Run.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Astrazione</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>L'astrazione è una delle abilità più importanti da comprendere per un informatico. Semplifica i problemi ed evita ripetizioni inutili. Un buon codificatore usa l'astrazione praticamente ogni volta che crea un programma. Questa attività farà in modo che i vostri studenti analizzino le storie per trovare le differenze in modo da poterle astrarre. Quelle storie astratte diventano modelli per nuove storie divertenti e folli.</td> <td><a href=”https://youtu.be/TctGRrUdkcc”>Video della lezione</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Chiave di risposta dell'attività</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Chiave di risposta per la valutazione </a></td>  </tr>
<tr>   <th id=t07>Variabili</th>     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Buste variabili</a><br><i>*Supporti: Buste (1-4/gruppo di 2-4)</i><br><small>Le variabili sono usate come segnaposto per valori come numeri o parole. Le variabili permettono molta libertà nella programmazione. Invece di dover digitare una frase molte volte o ricordare un numero non chiaro, gli informatici possono usare le variabili come riferimento. Questa lezione aiuta a spiegare cosa sono le variabili e come possiamo usarle in molti modi diversi. L'idea delle variabili non è un concetto facile da afferrare, quindi si consiglia di lasciare abbastanza tempo per la discussione alla fine della lezione.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

