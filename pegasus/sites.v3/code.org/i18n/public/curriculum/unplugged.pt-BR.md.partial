---
title: Fundamentos de Ciência da Computação - Versão offline
video_player: true
theme: responsive
---

# Fundamentos de Ciência da Computação - Versão offline

Compilamos uma lista de todas as nossas lições para você usar em sua sala de aula. Agora você pode ensinar os fundamentos da ciência da computação, quer tenha ou não computadores em sua sala de aula!
<br>
<div class="col-50">
Referimo-nos às aulas nas quais os alunos não estão trabalhando em um computador como "offline." Os alunos geralmente trabalham com lápis e papel ou manipuladores físicos.  Essas são oportunidades cinestésicas colocadas intencionalmente que ajudam os alunos a digerir conceitos complicados de maneiras que se relacionam com suas próprias vidas. <br><br>
As lições offline são particularmente úteis para construir e manter um ambiente de sala de aula colaborativo, e são experiências úteis que você pode consultar ao introduzir conceitos mais abstratos. Cada uma dessas atividades pode ser usada sozinha ou com outras aulas de ciência da computação em conceitos relacionados.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;A partir de 4 anos, apenas em inglês
</div>

<div style="clear: both;"></div>

***
## Lições Desconectadas em Fundamentos de Ciência da Computação 2021-22
As seguintes lições podem ser encontradas em <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">Fundamentos de Ciência da Computação 2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Os alunos praticarão a escrita de instruções precisas enquanto trabalham para traduzir as instruções nos símbolos fornecidos. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. Às vezes, você deseja que seu programa seja capaz de responder ao usuário exatamente quando ele deseja. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. Em primeiro lugar, os alunos sentem empatia por vários usuários fictícios de smartphones para ajudá-los a encontrar o “aplicativo certo” que atenda às suas necessidades. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Os alunos se revezarão participando como o robô, respondendo apenas ao algoritmo definido por seus pares. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Às vezes, você deseja que seu programa seja capaz de responder ao usuário exatamente quando ele deseja. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. Opcional - 18 miçangas pretas/18 miçangas brancas, 1 limpador de tubos por aluno</i><br><small> O binário é extremamente importante no mundo dos computadores. A maioria dos computadores hoje armazena todos os tipos de informações em forma binária. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. A aula vai começar com os alunos instruindo uns aos outros a colorir quadrados no papel quadriculado, tentando reproduzir uma imagem existente. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. Nem sempre temos todas as informações de que precisamos ao escrever um programa. Às vezes, você desejará fazer algo diferente em uma situação e em outra, mesmo que não saiba que situação será verdadeira quando seu código for executado. É aí que entram os condicionais. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.+</td><td>Conditionals</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

    </tr>
         <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.7 - Digital Sharing</a><br><i>*Supplies: Smartphone or tablet</i><br><small>Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.</td><td>Digital Citizenship</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.11 - Songwriting</a><br><small>One of the most magnificent structures in the computer science world is the function. Funções (às vezes chamadas de procedimentos) são como pequenos programas que você pode usar várias vezes dentro de um programa maior. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.</td><td>Functions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.17 - Designing for Accessibility</a><br><small>In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps.</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width="90%"></td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Course F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Blank Space Stories</a><br><i>*Supplies: 6 envelopes(also suitable:paper or index cards,folded in half)</i><br><small>Students will use fill-in-the-blank stories (similar to Mad Libs®) as a context for understanding how computers take and store input from a user, then use it later as a program runs.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic.</td><td>For Loops</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.19 - The Internet</a><br><small>Even though many people use the internet daily, not very many know how it works. Nesta lição, os alunos fingirão que fluem pela Internet, enquanto aprendem sobre conexões, URLs, endereços IP e DNS.</td><td>Dados</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>
  </tr>
</table>

<p style="clear:both"></p>

***
## Lições adicionais do "Desconectado"

As lições a seguir são organizadas por conceito e podem ser encontradas em versões anteriores de nossos cursos de Fundamentos de Ciência da Computação. Recursos adicionais que você pode querer consultar ao planejar o uso dessas lições incluem:
* [2019 Curso A-F Guia Curricular](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Curso A-F Lista de Suprimentos](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [Listas da Amazon do curso de 2019](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Curso A-F Guia curricular](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Curso A-F Guia curricular (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Curso 1-4 Guia curricular](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Flashcards CSF ](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Conceito</th>
    <th width=65%><center><big>Plano de aula <br>
<small> O plano de aula inclui recursos adicionais (slides, vídeos, gabaritos, etc.).
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. Embora muitas pessoas pensem que binário se trata estritamente de zero e um, nossos cursos anteriores ensinaram os alunos que as informações podem ser representadas por diversas opções de binários. Esta lição leva esse conceito um passo adiante, pois ilustra como um computador pode armazenar informações ainda mais complexas (como imagens e cores) em binário, também.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td>
 </tr>
    <tr>
    <th id=t07>Rotações</th>
        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Meus amigos robóticos malucos</a><br><small>Aqui, os alunos aprendem a simplicidade e a utilidade das rotações “programando” seus amigos usando a linguagem de "Meus amigos robóticos" Depois que os loops são introduzidos, os alunos descobrirão que podem construir estruturas maiores com mais rapidez.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>
  </tr>
     <th rowspan="2" id=t07>Funções</th>
    <td><a href="https://code.org/curriculum/course3/4/Teacher">Suncatchers funcionais</a><br><small>Nesta aula, os alunos farão um suncatcher de cordas, miçangas e um charme especial. Os alunos seguirão uma série de etapas repetitivas e, em seguida, serão solicitados a identificar certos conjuntos de “habilidades” que são duplicados várias vezes. Uma vez definidas essas habilidades, elas serão chamadas a partir de um programa principal e todo o belo processo de criação será registrado em uma única folha de papel. O programa final será voltado para a classe, independentemente do tipo de linha, contas ou amuletos. Para que isso seja efetivamente possível, os alunos terão que “abstrair” os detalhes de seus materiais específicos e criar termos gerais para materiais individuais. Esse uso de marcadores de posição genéricos é uma introdução maravilhosa às variáveis.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Vídeo da aula</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Veja a lição em ação</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Resposta chave da atividade <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Resposta chave da avaliação</a></td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Composição de músicas com parâmetros</a><br><small>Uma das estruturas mais magníficas do mundo da ciência da computação é a função. Funções (às vezes chamadas de procedimentos) são como pequenos programas que você pode usar várias vezes dentro de um programa maior. Esta lição ajudará os alunos a compreender intuitivamente por que combinar pedaços de código em funções é uma prática tão útil e como eles podem usar essas estruturas mesmo quando os pedaços de código são ligeiramente diferentes.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>
  </tr>
     <th rowspan="6" id=t07>Algoritmos</th>
    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Corrida de dados</a><br><small>Nesta lição, os alunos relacionarão o conceito de algoritmos com atividades da vida real, jogando o jogo de corrida de dados. O objetivo aqui é começar a desenvolver as habilidades para traduzir situações do mundo real em cenários online e vice-versa.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Meus amigos robóticos</a><br><small>Usando uma tecla de símbolo predefinida, seus alunos descobrirão como orientar uns aos outros para realizar tarefas específicas sem usar comandos verbais. Este segmento ensina aos alunos a conexão entre símbolos e ações, a diferença entre um algoritmo e um programa e a valiosa habilidade de depuração.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Algoritmos da vida real: Aviões de Papel</a><br><small>Nesta lição, os alunos relacionarão o conceito de algoritmos com as atividades cotidianas. Depois de discutir algoritmos, os alunos farão aviões de papel usando um algoritmo. O objetivo aqui é começar a desenvolver as habilidades para traduzir situações do mundo real em cenários online e vice-versa.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Algoritmos da Vida Real: Plante uma Semente</a><br><small>Nesta lição, os alunos relacionarão o conceito de algoritmos com as atividades cotidianas da vida real, plantando uma semente real. O objetivo aqui é começar a desenvolver as habilidades para traduzir situações do mundo real em cenários online e vice-versa.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>
  </tr>
    <tr>
    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangrams</a><br><small>Esta lição nos mostra algo importante sobre algoritmos. Contanto que você mantenha um algoritmo simples, há muitas maneiras de usá-lo. No entanto, se você quiser garantir que todos produzam o mesmo resultado, seu algoritmo precisa de mais detalhes. Os alunos aprenderão a diferença entre um algoritmo detalhado e geral enquanto brincam com tangrams.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>
  </tr>
  </tr>
    <tr>
  </tr>
    </tr>
     <th id=t07 rowspan="4">Pensamento Computacional</th>
        <tr>
        <td><a href="https://code.org/curriculum/course3/1/Teacher">Pensamento Computacional</a><br><small>Para esta atividade, não são fornecidas instruções. Em vez disso, os alunos usarão exemplos do que jogadores imaginários fizeram para descobrir como jogar o jogo. Esta lição dá aos alunos a oportunidade de praticar as quatro artes do pensamento computacional (decomposição, correspondência de padrões, abstração e algoritmos) em uma atividade coesa.</td> <td><a href="https://youtu.be/TlAaklrolA0">Vídeo da aula</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Ver lição em ação</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Resposta Chave da Atividade </a></td>
        </tr>
        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Pensamento Computacional com Monstros</a><br><small>Com nada além de papel e marcadores, os alunos aprenderão os quatro passos. Após uma breve introdução, os alunos devem ser divididos em grupos onde terão que criar instruções para outros alunos desenharem um monstro específico (de um catálogo de monstros pré-selecionados). A tarefa inteira deve ser decomposta, então as equipes analisarão todos os monstros no catálogo em busca de padrões, abstrairão detalhes semelhantes dos monstros e usarão essas informações para criar um algoritmo (direções) para outra equipe desenhar um determinado monstro. As equipes, então, trocarão algoritmos com outro grupo e desenharão o monstro com base no que aquele algoritmo indica. O desenho é o que a equipe original pretendia?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>
  <tr>
    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">"Bugs" não identificados</a><br><small>Esta lição guiará os alunos pelas etapas de depuração. Os alunos aprenderão o mantra: "O que aconteceu? O que deveria acontecer? O que isso lhe diz?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>
  </tr>
    </tr>
     <th rowspan="2" id=t07>Persistência</th>
  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Construindo uma Fundação</a><br><small>Problemas novos e não resolvidos costumam ser muito difíceis. Se quisermos ter alguma chance de fazer algo criativo, útil e inteligente, precisamos estar dispostos a atacar problemas difíceis, mesmo que isso signifique falhar algumas vezes antes de alcançar o sucesso. Nesta lição, os alunos construirão uma estrutura com materiais comuns. A estrutura será testada em sua capacidade de segurar um livro por mais de dez segundos. A maioria dos alunos não acertará na primeira vez, mas é importante que eles avancem e continuem tentando.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>
  </tr>
  <tr>
 <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie e o grande projeto</a><br><small>Quando os alunos se deparam com uma barreira ao responder a uma pergunta ou trabalhar em um projeto, é fácil para eles ficarem frustrados e desistirem. Esta lição apresentará aos alunos a ideia de que a frustração pode ser uma parte importante do aprendizado. Aqui, a frustração é apresentada como uma etapa do processo criativo, ao invés de um sinal de fracasso. Esta lição pode ser realizada em uma ou duas aulas. Se você tiver mais tempo, sinta-se à vontade para desenhar a fase de construção e revisão da atividade Marble Run.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>
  </tr>
     <th id=t07>Abstração</th>
    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Abstração é uma das habilidades mais importantes para um cientista da computação entender. Simplifica os problemas e evita a repetição desnecessária. Um bom programador usa abstração quase todas as vezes que cria um programa. Esta atividade fará com que seus alunos analisem as diferenças em histórias para que possam abstraí-las. Essas histórias abstratas tornam-se modelos para diversão e novas histórias loucas.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Vídeo da Aula</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Chave de resposta de atividade</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Chave de resposta de avaliação </a></td>
  </tr>
<tr>
   <th id=t07>Variáveis</th>
​     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Envelope Variables</a><br><i>*Suprimentos: Envelopes (1-4/grupo de 2-4)</i><br><small>As variáveis são usadas como marcadores de posição para valores como números ou palavras. As variáveis ​​permitem muita liberdade na programação. Em vez de digitar uma frase muitas vezes ou lembrar um número obscuro, os cientistas da computação podem usar variáveis ​​para referenciá-los. Esta lição ajuda a explicar o que são variáveis ​​e como podemos usá-las de muitas maneiras diferentes. A ideia de variáveis ​​não é um conceito fácil de entender, portanto, recomendamos reservar bastante tempo para discussão no final da lição.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
</tr>
</table>


<p style="clear:both"></p>

