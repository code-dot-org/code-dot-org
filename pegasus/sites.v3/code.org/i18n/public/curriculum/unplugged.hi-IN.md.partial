---
title: CS फंडामेंटल्स अनप्लग्ड
video_player: true
theme: responsive
---

# CS फंडामेंटल्स अनप्लग्ड

अपने क्लास रूम में इस्तेमाल करने के लिए हमने हमारे सभी अनप्लग्ड पाठो को आपके लिए संकलित किया है। अभी आप कंप्यूटर साइंस के फंडामेंटल्स को बढ़ा सकते हैं, चाहे आपके कक्षा में कंप्यूटर हो या नहीं!
<br>
<div class="col-50">
पाठ जिनमें छात्र कंप्यूटर का उपयोग नहीं कर रहे हैं हम उन्हें “अनप्लग्ड” कहते हैं। छात्र आमतौर पर पेंसिल या कागज या किसी भौतिक चीजों के द्वारा काम करते हैं।  यह जानबूझ कर रखे गए kinesthetic (हाथ पैर हिलाना) अवसर हैं जो छात्रों को जटिल अवधारणाओं को समझने में सहायता करेंगे जो वे अपने जीवन से जोड़ सकते है। <br><br>एक सहयोगात्मक क्लासरूम पर्यावरण को तैयार करने और बनाए रखने के लिए अनप्लग्ड पाठ खास तौर पर उपयोगी है, और एब्स्ट्रेक्ट अवधारणाओं को समझाने के समय आप इन अनुभवों का संदर्भ ले सकते हैं। इन प्रत्येक गतिविधियों को या तो अकेले उपयोग किया जा सकता है अथवा संबंधित अवधारणाओं पर कंप्यूटर साइंस के साथ।
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;आयु 4+, केवल अंग्रेजी
</div>

<div style="clear: both;"></div>

***
## CS Fundamentals पर अनप्लग्ड पाठ 2022-23
निम्नलिखित पाठ यहाँ मिल सकते हैं: <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">CS Fundamentals 2022-23</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: var(--brand_primary_default);
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. छात्र सटीक निर्देश लिखने का अभ्यास करेंगे क्योंकि वे दिए गए प्रतीकों में निर्देशों का अनुवाद करने के लिए काम करते हैं। If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. कभी-कभी आप चाहते हैं कि आपका प्रोग्राम यूज़र को प्रतिक्रिया दें बिल्कुल तभी जब यूजर चाहे। That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. पहले, छात्र कई सारे काल्पनिक स्मार्टफोन उपभोक्ताओं के साथ सहानुभूति रखते हैं जिससे कि वह उनके लिए “सही ऐप” ढूंढ सके जो उनके आवश्यकताओं को पूरी करें। Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. छात्र बारी बारी से रोबोट के रूप में भाग लेंगे, और केवल अपने मित्रों द्वारा परिभाषित एल्गोरिदम पर ही प्रतिक्रिया देंगे। This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. कभी-कभी आप चाहते हैं कि आपका प्रोग्राम यूज़र को प्रतिक्रिया दें बिल्कुल तभी जब यूजर चाहे। Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. वैकल्पिक – 18 काले/18 सफेद मनके, प्रति छात्र 1 पाइप क्लीनर</i><br><small>बाइनरी कंप्यूटर की दुनिया में अत्यंत महत्वपूर्ण है। अधिकांश कंप्यूटर आज सभी प्रकार की सूचनाओं को बाइनरी रूप में संग्रहीत करते हैं। This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. मौजूदा तस्वीर को पुन: पेश करने के प्रयास में छात्रों को एक दूसरे को ग्राफ पेपर पर वर्गों को रंगने के निर्देश देने के लिए प्रतीकों का उपयोग करके कक्षा शुरू होगी। If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. किसी प्रोग्राम को लिखते वक्त हमारे पास हमेशा सभी जानकारियां नहीं होती है। कभी-कभी आप को अलग-अलग परिस्थितियों में अलग कार्य करना पड़ता है, भले ही आपको पता न हो कि आपका कोड रन होने पर कौन सी स्थिति सही होगी। ऐसे मामलों में कंडीशनल्स काम आता है। कंडीशनल कंप्यूटर को उस जानकारी के आधार पर निर्णय लेने की अनुमति देते हैं जो किसी भी समय आपका कोड चलाए जाने पर सही होती है.+</td><td>Conditionals</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Songwriting</a><br><small>कंप्यूटर विज्ञान की दुनिया में सबसे शानदार संरचनाओं में से एक फंक्शन है। फ़ंक्शंस (कभी-कभी प्रक्रियाएँ कहा जाता है) छोटे प्रोग्राम हैं जिनका उपयोग आप अपने बड़े प्रोग्राम के अंदर बार-बार कर सकते हैं। इस पाठ से छात्र सहज रूप से यह समझ सकेंगे कि कोड के टुकड़ों को कार्यों में जोड़ना इतना उपयोगी अभ्यास क्यों हो सकता है।</td><td>Functions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - अभिगम्यता के लिए डिजाइनिंग</a><br><small>इस पाठ में, छात्र विचार-मंथन के माध्यम से अभिगम्यता और सहानुभूति के मूल्य के बारे में जानेंगे और काल्पनिक ऐप्स के लिए सुलभ समाधान तैयार करेंगे।</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - डिजिटल शेयरिंग</a><br><i>*आपूर्ति: स्मार्टफोन या टैबलेट</i><br><small>कॉपीराइट और रचनात्मकता पर टीम द्वारा कंप्यूटर विज्ञान की बुनियादी बातें बताई गई, यह पाठ छात्रों को स्वामित्व और कॉपीराइट का सम्मान करने की चुनौतियों और लाभों को समझने में मदद करने के लिए मौजूद है, विशेष रूप से डिजिटल वातावरण में। नैतिक डिजिटल नागरिक होने के एक महत्वपूर्ण हिस्से के रूप में छात्रों को कलाकारों के अधिकारों का सम्मान करने के लिए प्रोत्साहित किया जाना चाहिए।</td><td>डिजिटल नागरिकता</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Course F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Blank Space Stories</a><br><i>*आपूर्ति: 6 लिफाफे (यह भी उपयुक्त: कागज या इंडेक्स कार्ड, आधा मुड़ा हुआ;)</i><br><small>कंप्यूटर उपयोगकर्ता से इनपुट कैसे लेते और संग्रहीत करते हैं, यह समझने के लिए छात्र एक संदर्भ के रूप में खाली स्थान भरने वाली खाली कहानियों (Mad Libs® के समान) का उपयोग करेंगे, फिर बाद में प्रोग्राम चलाने के रूप में इसका उपयोग करेंगे।
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. ये नई संरचनाएं छात्रों को अधिक शक्तिशाली और गतिशील कोड बनाने की अनुमति देगी।</td><td>फॉर लूप (For Loop) </td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15- इंटरनेट</a><br><small>भले ही बहुत से लोग प्रतिदिन इंटरनेट का उपयोग करते हैं, लेकिन बहुत से लोग यह नहीं जानते कि यह कैसे काम करता है। इस पाठ में, छात्र कनेक्शन, URLs, IP पते और DNS के बारे में सीखते हुए इंटरनेट के माध्यम से बहने का ढोंग करेंगे।</td><td>डेटा</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## अतिरिक्त अनप्लग्ड सबक

निम्नलिखित पाठों को अवधारणा द्वारा आयोजित किया गया है और इससे पहले के CS फंडामेंटल के पुराने वर्ज़न में पाया जा सकता है। जब कि आप इन पाठों का उपयोग करने का योजना बना रहे हैं, अतिरिक्त संसाधन जिनको आप देखना चाहेंगे, उनमें शामिल हैं:
* [2019 कोर्स A-F पाठ्यक्रम गाइड](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 कोर्स A-F आपूर्ति सूची](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 कोर्स Amazon सूची](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 कोर्स A-F पाठ्यक्रम गाइड](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 कोर्स A-F पाठ्यक्रम गाइड (v2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [कोर्स 1-4 पाठ्यक्रम गाइड](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [CSF फ्लैशकार्ड](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Concept</th><th width=65%><center><big>पाठ योजना <br><small> पाठ योजना में अतिरिक्त संसाधन (स्लाइड, वीडियो, Answer Key, आदि) शामिल हैं।
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. हालांकि बहुत से लोग बाइनरी को केवल शून्य और एक के रूप में सोचते हैं, छात्रों को इस आईडिया के साथ अवगत कराया जाएगा कि जानकारी को बायनरी विकल्पों के ढेर सारी वैरायटी में दर्शाया जा सकता है। यह पाठ उस अवधारणा को एक कदम आगे ले जाता है क्योंकि यह दिखाता है कि कैसे एक कंप्यूटर बाइनरी में और भी अधिक जटिल जानकारी (जैसे चित्र और रंग) को संग्रहीत कर सकता है।</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr><th id=t07>लूप्स</th>    <td><a href="https://curriculum.code.org/csf-18/coursee/6/">मेरा लूपी रोबोटिक दोस्त</a><br><small>यहां, छात्र “मेरा रोबोटिक दोस्त” के भाषा से अपने दोस्तों को “प्रोग्रामिंग” करके लूप के सरलता और उपयोगिता सीखते हैं। एक बार लूप शुरू हो जाने के बाद, छात्र पाएंगे कि वे बड़ी संरचनाओं का तेजी से निर्माण कर सकते हैं।
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr> <th rowspan="2" id=t07>फंक्शंस (Functions)</th><td><a href="https://code.org/curriculum/course3/4/Teacher">फंक्शनल सनकैचर्स (Functional Suncatchers)</a><br><small>इस पाठ में, छात्र धागे, मोतियों और एक विशेष मंत्र से एक सनकैचर बनाएंगे। छात्र दोहराए जाने वाले चरणों की एक श्रृंखला का पालन करेंगे, फिर उन्हे "कौशल" के कुछ सेटों की पहचान करने के लिए कहा जाएगा जिन्हें कई बार दोहराया गया है। एक बार उन कौशलों को परिभाषित करने के बाद, उन्हें एक मुख्य प्रोग्राम के द्वारा कॉल किया जाएगा और निर्माण की पूरी सुंदर प्रक्रिया कागज की एक शीट पर दर्ज की जाएगी। अंतिम कार्यक्रम पूरी कक्षा के लिए तैयार किया जाएगा, चाहे उनके धागे, मोतियों और मंत्र का प्रकार कुछ भी हो। ऐसा प्रभावी रूप से हो इसके लिए, छात्रों को अपनी विशिष्ट सामग्री के विवरण को "सार अलग" करना होगा और किसी व्यक्ति की आपूर्ति के लिए अस्पष्ट शब्द बनाना होगा। जेनेरिक प्लेसहोल्डर्स का यह उपयोग वैरियेबल्स के लिए एक अद्भुत परिचय है।</td> <td><a href="https://youtu.be/d1MdyeXy0v0">पाठ वीडियो</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">पाठ को एक्शन में देखें</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf"> गतिविधि Answer Key<a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">मूल्यांकन Answer Key</a></td>  </tr>  <tr><td><a href="https://curriculum.code.org/csf-1718/coursef/21/">पैरामीटर के साथ गीत लेखन </a><br><small>कंप्यूटर साइंस की दुनिया में सबसे शानदार संरचनाओं में से एक है फंक्शंस। फ़ंक्शंस (कभी-कभी प्रक्रियाएँ कहा जाता है) छोटे प्रोग्राम हैं जिनका उपयोग आप अपने बड़े प्रोग्राम के अंदर बार-बार कर सकते हैं। यह पाठ छात्रों को सहज रूप से यह समझने में मदद करेगा कि कोड के टुकड़ों को कार्यों में संयोजित करना इतना उपयोगी अभ्यास क्यों है, और वे उन संरचनाओं को कैसे उपयोग कर सकते हैं तब भी यदि कोड के टुकड़े थोड़े अलग हैं।
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr> <th rowspan="6" id=t07>एल्गोरिदम</th><td><a href="https://curriculum.code.org/csf-1718/coursee/10/">डाइस रेस</a><br><small>इस पाठ में, छात्र डाइस रेस गेम खेलकर एल्गोरिथम की अवधारणा को वास्तविक जीवन की गतिविधियों से जोड़ेंगे। यहां लक्ष्य वास्तविक दुनिया की स्थितियों को ऑनलाइन परिदृश्यों और इसके विपरीत में अनुवाद करने के लिए कौशल का निर्माण शुरू करना है।
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr><td><a href="https://curriculum.code.org/csf-18/coursee/1">मेरा रोबोटिक दोस्त</a><br><small>पूर्वनिर्धारित प्रतीक कुंजी का उपयोग करके, आपके छात्र यह पता लगाएंगे कि बिना कोई मौखिक आदेश का उपयोग किए विशिष्ट कार्यों को पूरा करने के लिए एक दूसरे का मार्गदर्शन कैसे करें। यह सेगमेंट छात्रों को प्रतीकों और कार्यों के बीच संबंध, एक एल्गोरिथम और एक प्रोग्राम के बीच अंतर और डिबगिंग के मूल्यवान कौशल को सिखाता है।</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr><tr><td><a href="https://curriculum.code.org/csf-18/coursec/4/">वास्तविक-जीवन का एल्गोरिदम: पेपर प्लेन</a><br><small>इस पाठ में, छात्र एल्गोरिदम की अवधारणा को वापस रोजमर्रा की गतिविधियों से जोड़ेंगे। एल्गोरिदम पर चर्चा करने के बाद, छात्र एल्गोरिथम का उपयोग करके पेपर प्लेन बनाएंगे। यहां लक्ष्य वास्तविक दुनिया की स्थितियों को ऑनलाइन परिदृश्यों और इसके विपरीत में अनुवाद करने के लिए कौशल का निर्माण शुरू करना है।</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr><tr><td><a href="https://curriculum.code.org/csf-18/coursea/3/">वास्तविक जीवन के एल्गोरिदम: एक बीज को बोएं</a><br><small>इस पाठ में, छात्र वास्तविक बीज बोकर एल्गोरिदम की अवधारणा को दैनिक, वास्तविक जीवन की गतिविधियों से जोड़ेंगे। यहां लक्ष्य वास्तविक दुनिया की स्थितियों को ऑनलाइन परिदृश्यों और इसके विपरीत में अनुवाद करने के लिए कौशल का निर्माण शुरू करना है।</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr><tr><td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Tangrams</a><br><small>यह पाठ हमें एल्गोरिदम के बारे में कुछ महत्वपूर्ण दिखाता है। जब तक आप एल्गोरिथम को सरल रखते हैं, तब तक इसका उपयोग करने के कई तरीके हैं। हालांकि, यदि आप निश्चित होना चाहते हैं कि हर कोई एक जैसा परिणाम दे, फिर आपके एल्गोरिथ्म में और ज्यादा विवरण होना आवश्यक है। Tangrams के साथ खेलते हुए छात्र एक विस्तृत और सामान्य एल्गोरिदम के बीच अंतर सीखेंगे।</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr><tr>  </tr></tr> <th id=t07 rowspan="4">कम्प्यूटेशनल सोच (Computational Thinking)</th>    <tr>    <td><a href="https://code.org/curriculum/course3/1/Teacher">कम्प्यूटेशनल सोच</a><br><small>इस गतिविधि के लिए, कोई निर्देश नहीं दिए गए हैं। इसके बजाय, छात्र इस बात के उद्धरण का उपयोग करेंगे की काल्पनिक खिलाड़ियों ने खेल को कैसे खेलना है यह पता लगाने के लिए क्या किया। यह पाठ छात्रों को एक संपूर्ण कम्प्यूटेशनल सोच की चार कलाओं (डीकंपोजिशन, पैटर्न मिलान, एब्स्ट्रेक्शन और एल्गोरिदम) का अभ्यास करने का अवसर देता है।</td> <td><a href="https://youtu.be/TlAaklrolA0"> पाठ वीडियो</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU"> पाठ को एक्शन में देखें</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">गतिविधि Answer Key </a></td>    </tr>    <td><a href="https://studio.code.org/unplugged/unplug2.pdf">मॉन्स्टर के साथ कंप्यूटेशनल थिंकिंग</a><br><small>केवल कागज और मार्कर के साथ, छात्र कंप्यूटेशनल थिंकिंग के चार चरण सीखेंगे। एक संक्षिप्त परिचय के बाद, छात्रों को उन समूहों में विभाजित किया जाना चाहिए जहां उन्हें अन्य छात्रों के लिए एक विशिष्ट मॉन्स्टर (पूर्व-चयनित मॉन्स्टरों की एक सूची से) को अंकित करने के लिए दिशा-निर्देश बनाने होंगे। संपूर्ण टास्क डीकंपोज्ड होना चाहिए, फिर टीमें कैटलॉग में सभी मॉन्स्टरों का पैटर्न के लिए विश्लेषण करेंगी, मॉन्स्टरो से एक जैसी डिटेल्स लेना, फिर उस जानकारी का उपयोग एल्गोरिदम बनाने के लिए करें जिसका उपयोग अन्य टीम किसी मॉन्स्टर को अंकित करने के लिए करेगी। टीम फिर एल्गोरिदम को दूसरे ग्रुप के साथ बदलेंगे और फिर उस एल्गोरिदम के निर्देशानुसार मॉन्सटर को अंकित करेंगे। क्या मूल टीम का इरादा अंकित करना था?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr><td><a href="https://curriculum.code.org/csf-18/coursea/1/">अनस्पॉटेड बग्स (Unspotted Bugs)</a><br><small>यह पाठ डिबगिंग के चरणों के माध्यम से छात्रों का मार्गदर्शन करेगा। छात्र यह मंत्र सीखेंगे: "क्या हुआ? क्या होना वाला था? इससे तुम्हें क्या पता चलता है?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr></tr> <th rowspan="2" id=t07>दृढ़ता</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/"> फाउंडेशन का निर्माण</a><br><small>नई और अनसुलझी समस्याएं अक्सर काफी कठिन होती हैं। यदि हमारे पास कुछ रचनात्मक, उपयोगी और बुद्धिमान चीज बनाने का मौका है, फिर हमें कठिन समस्याओं को आक्रमण करने की इच्छा रखनी होगी भले ही यदि सफल होने से पहले हमें कई बार असफलता मिले। इस पाठ में, छात्र आम सामग्रियों के द्वारा एक संरचना का निर्माण करेंगे। पाठ्यपुस्तक को 10 सेकंड से अधिक थामें रखने की संरचना की क्षमता की जांच की जाएगी। अधिकांश छात्र इसे पहले बारी में सही से नहीं कर पाएंगे, लेकिन यह महत्वपूर्ण है कि वह मेहनत और कोशिश करते रहे।</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">स्टीव और बड़ा प्रोजेक्ट (Stevie and the Big Project)</a><br><small> जब किसी छात्र को प्रश्न का उत्तर देते हुए या किसी प्रोजेक्ट पर काम करते हुए बाधा प्राप्त होता है, तो ऐसे में उनका निराश होना और हार मान लेना आसान है। यह पाठ छात्रों को इस आईडिया से अवगत कराएगा की निराश होना भी सीखने का एक महत्वपूर्ण भाग है। यहां, निराशा को रचनात्मक प्रक्रिया के एक चरण के रूप में प्रदर्शित किया गया है, बजाय इसे असफलता मान लेने के। यह पाठ एक या दो कक्षा सत्रों में किया जा सकता है। यदि आपके पास अधिक समय है, तो Marble Run गतिविधि के लिए बिल्डिंग और संशोधन चरण को अंकित करें।</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr> <th id=t07>एब्स्ट्रैक्शन (Abstraction)</th><td><a href="https://code.org/curriculum/course4/5/Teacher">मैड ग्लिब्स (Mad Glibs)</a><br><small>कंप्यूटर साइंटिस्ट के लिए एब्स्ट्रेक्शन को समझना एक महत्वपूर्ण कौशल है। यह समस्याओं को सरल बना देता है और अनावश्यक रिपीटेशन को रोकता है। एक अच्छा कोडर जब भी कोई प्रोग्राम बनाता है तो लगभग हर बार एब्स्ट्रैक्शन का उपयोग करता है। इस गतिविधि में छात्र कहानियों का विश्लेषण अंतर के लिए करेंगे जिससे वह इसका सार निकाल सके। वे एब्स्ट्रेक्ट किए गए कहानियां मौज और ऐसे नए वालों के टेम्पलेट बन जाते हैं</td> <td><a href="https://youtu.be/TctGRrUdkcc">पाठ वीडियो</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">गतिविधि Answer Key</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">मूल्यांकन Answer Key </a></td>  </tr>
<tr>   <th id=t07>वेरिएबल</th> <td><a href="https://curriculum.code.org/csf-20/coursef/7/"> लिफाफा वेरिएबल (Envelope Variables)</a><br><i>*आपूर्ति: लिफाफा(1-4/2-4 का समूह)</i><br><small>वेरिएबल का उपयोग संख्याओं या शब्दों जैसे मानों के लिए प्लेसहोल्डर के रूप में किया जाता है। वेरिएबल प्रोग्रामिंग बहुत सारा स्वतंत्रता देते हैं। एक वाक्यांश को कई बार टाइप करने या एक अस्पष्ट संख्या याद रखने के बजाय, कंप्यूटर वैज्ञानिक उन्हें संदर्भित करने के लिए वेरिएबल का उपयोग कर सकते हैं। यह पाठ यह समझाने में मदद करता है कि वेरिएबल क्या हैं और हम उन्हें कई अलग-अलग तरीकों से कैसे उपयोग कर सकते हैं। वेरिएबल का आईडिया आसानी से समझ में आने वाली अवधारणा नहीं है, तो हम हर पाठ के अंत में चर्चा के लिए पर्याप्त समय देने की सलाह देते हैं।</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

{{ visit_partial_event_logger }}
