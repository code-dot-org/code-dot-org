---
title: Kiến thức căn bản về CS không cần máy tính
video_player: true
theme: responsive
---

# Kiến thức căn bản về CS không cần máy tính

Chúng tôi đã biên soạn một danh sách các bài học không cần máy tính để bạn sử dụng trong lớp học của mình. Giờ đây, bạn có thể dạy các kiến thức căn bản về khoa học máy tính, cho dù bạn có máy tính trong lớp học của mình hay không!
<br>
<div class="col-50">
Chúng tôi đang nói đến các bài học mà học viên không cần làm việc trên máy tính Học viên thường sẽ làm việc với bút chì và giấy hoặc các thao tác vật lý.  Đây là những cơ hội học tập động học có chủ đích giúp học viên hiểu những khái niệm phức tạp theo những cách liên quan đến cuộc sống của chính mình. <br><br>Các bài học không cần máy tính đặc biệt hữu ích để xây dựng và duy trì môi trường lớp học cộng tác và chúng là những trải nghiệm hữu ích mà bạn có thể tham khảo khi giới thiệu các khái niệm trừu tượng. Mỗi hoạt động này có thể được sử dụng riêng biệt hoặc với các bài học khoa học máy tính khác về các khái niệm liên quan.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;4 tuổi trở lên, chỉ tiếng Anh
</div>

<div style="clear: both;"></div>

***
## Kiến thức căn bản về CS không cần máy tính 2021-22
Các bài học sau đây có thể được tìm thấy tại <a href="https://docs.google.com/document/d/19BIaGVliOZCciSDmuezFFUhhCjhrB2oXpVLn0cJAibc/preview" target="_blank">Kiến thức căn bản về CS2021-22</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Khóa học</th>    <th><center><big>Giáo trình</th>     <th width=10%><center><big>Khái niệm</th>    <th width=20%><center><big>Video</th>     <tr>    <th rowspan="3" id="t01">Khóa học A</th>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/3">A.3 - Bản đồ hạnh phúc</a><br><small>Bài học không cần máy tính này tập hợp các nhóm lại với nhau với một nhiệm vụ đơn giản: đưa sâu tìm đến quả. Học viên sẽ thực hành viết các hướng dẫn chính xác bằng cách dịch các hướng dẫn thành ký hiệu được cung cấp. Nếu phát sinh vấn đề trong code, học viên phải làm việc cùng nhau để xác định lỗi và xây dựng giải pháp.</td><td>Xác định trình tự</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>  </tr>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/7">A.7 - Vòng lặp hạnh phúc</a><br><small>Hoạt động này sẽ ghé thăm lại Bản đồ hạnh phúc. Lần này, học viên sẽ giải các câu đố lớn hơn, dài hơn bằng code của mình, từ đó họ sẽ thấy được sự tiện ích của các cấu trúc cho phép mình viết mã dài hơn một cách dễ dàng hơn.</td><td>Vòng lặp</td> <td><img src="/images/a7.png" width="90%"></td>  <tr>    <td width=40%><a href="https://studio.code.org/s/coursea-2021/lessons/11">A.11 - Sự kiện lớn (cơ bản)</a><br><small>Sự kiện là một cách tuyệt vời để thêm sự đa dạng vào thuật toán viết sẵn. Đôi khi bạn muốn chương trình của mình có thể phản hồi người dùng chính xác khi người dùng muốn. Đó là lý do sự kiện được sinh ra.</td><td>Sự kiện</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>  </tr>       <tr>    <th rowspan="3" id="t02">Khóa học B</th>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/2">B.2 - Chuyển động, Chuyển động</a><br><small>Bài học này sẽ giúp học viên chuẩn bị tinh thần cho các bài tập viết code mà họ sẽ gặp trong suốt khóa học này. Theo nhóm nhỏ, học viên sẽ sử dụng hoạt động thể chất để lập trình cho các bạn cùng lớp của mình từng bước cẩn thận từ nơi này sang nơi khác cho đến khi đạt được mục tiêu.</td><td>Xác định trình tự</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/6">B.6 - Bắt đầu lặp lại</a><br><small>Khi chúng ta bắt đầu viết các chương trình dài hơn và thú vị hơn, code của chúng ta thường chứa nhiều sự lặp lại. Trong bài học này, học viên sẽ tìm hiểu về cách sử dụng các vòng lặp để dễ dàng truyền đạt các hướng dẫn lặp lại nhiều lần bằng cách xem các hình mẫu chuyển động lặp đi lặp lại trong một điệu nhảy.</td><td>Vòng lặp</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/courseb-2021/lessons/10">B.10 - Ứng dụng phù hợp</a><br><small>Bài học này giúp học viên nhận ra rằng khoa học máy tính có thể giúp ích cho mọi người trong cuộc sống thực. Đầu tiên, học viên đặt mình vào vị thế của một số người dùng điện thoại thông minh hư cấu để giúp họ tìm thấy “ứng dụng phù hợp” đáp ứng nhu cầu của họ. Sau đó, học viên thể hiện sự đồng cảm và sáng tạo của mình để phác thảo ứng dụng điện thoại thông minh đáp ứng nhu cầu của một người dùng bổ sung.</td><td>Tác động của Tin học</td> <td><img src="/images/b10.png" width="90%"></td>  </tr>       <tr>    <th rowspan="4" id="t03">Khóa học C</th>    <td><a href="https://studio.code.org/s/coursec-2021/lessons/2">C.2 - Những người bạn robot của tôi (cơ bản)</a><br><i>*Dụng cụ: Cốc nhựa (10/nhóm 2-3 người)</i><br><small>Sử dụng một bộ ký hiệu thay cho code, học viên sẽ thiết kế các thuật toán để hướng dẫn một "robot" xếp những chiếc cốc theo các hình mẫu khác nhau. Học viên sẽ lần lượt tham gia với tư cách là người máy, chỉ phản hồi theo thuật toán do các bạn học đã đưa ra. Phần này dạy cho học viên về mối liên hệ giữa biểu tượng và hành động, sự khác biệt giữa thuật toán và chương trình, cũng như kỹ năng gỡ lỗi (debug) có giá trị.</td><td>Xác định trình tự</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>  </tr>   <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/7">C.7 - Người bạn robot vòng lặp của tôi (cơ bản)</a><br><i>*Dụng cụ: Cốc giấy (20/nhóm 4 người)</i><br><small>Tổng quanDựa trên hoạt động "Người bạn robot của tôi" ban đầu, học viên xử lý các thiết kế lớn hơn và phức tạp hơn. Để lập trình "robot" nhằm hoàn thành các thiết kế lớn hơn này, học viên sẽ cần xác định các hình mẫu lặp lại trong hướng dẫn của mình mà có thể được thay thế bằng một vòng lặp.</td><td>Vòng lặp</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>  </tr>       <tr>   <td><a href="https://studio.code.org/s/coursec-2021/lessons/11">C.11 - Sự kiện lớn</a><br><small>Học viên sẽ sớm biết rằng các sự kiện là một cách tuyệt vời để thêm tính linh hoạt cho một thuật toán viết sẵn. Đôi khi bạn muốn chương trình của mình có thể phản hồi người dùng chính xác khi người dùng muốn. Các sự kiện có thể làm cho chương trình của bạn trở nên thú vị và tương tác hơn.</td><td>Sự kiện</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>   </tr>        </tr>      <td><a href="https://studio.code.org/s/coursec-2021/lessons/15">C.15 - Vòng tay nhị phân</a><br><i>*Dụng cụ: Bút đánh dấu. Không bắt buộc – 18 hạt cườm đen/18 hạt cườm trắng, mỗi học viên 1 dụng cụ dọn dẹp ống</i><br><small>Nhị phân cực kỳ quan trọng trong thế giới máy tính. Phần lớn máy tính ngày nay lưu trữ tất cả các loại thông tin ở dạng nhị phân. Bài học này minh họa cách chúng ta có thể lấy một thứ gì đó từ cuộc sống thực và chuyển nó thành một loạt bật và tắt.</td><td>Nhị phân</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>  </tr>         <tr>    <th rowspan="3" id="t04">Course D</th>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/2">D.2 - Lập trình trên giấy kẻ ô li<br></a><small>Bằng cách "lập trình" cho nhau để vẽ tranh, học viên có cơ hội trải nghiệm một số khái niệm cốt lõi của lập trình một cách thú vị và dễ tiếp cận. Lớp học sẽ bắt đầu bằng cách cho học viên sử dụng các biểu tưởng để hướng dẫn nhau tô màu các ô vuông trên giấy kẻ ô li nhằm tái tạo một bức tranh hiện có. Nếu có thời gian, bài học có thể kết thúc bằng những hình ảnh mà học viên tự tạo.</td><td>Xác định trình tự</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/4">D.4 - Lập trình chuyển tiếp<br></a><small>Hoạt động này sẽ bắt đầu với một bài học ngắn về gỡ lỗi (debug) và tính kiên trì, sau đó sẽ nhanh chóng chuyển sang phần chạy đua với thời gian khi học viên chia thành các nhóm và cùng nhau viết chương trình hướng dẫn cùng lúc.</td><td>Xác định trình tự</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>      </tr>  <tr>    <td><a href="https://studio.code.org/s/coursed-2021/lessons/12">D.12 - Điều kiện với thẻ</a><br><small>Bài học này minh họa cách sử dụng các điều kiện để điều chỉnh một chương trình cho phù hợp với thông tin cụ thể. Không phải lúc nào chúng ta cũng có tất cả thông tin cần thiết khi viết một chương trình. Đôi khi bạn sẽ muốn làm điều gì đó khác trong một tình huống này so với một tình huống khác, ngay cả khi bạn không biết tình huống nào sẽ đúng khi code của bạn chạy. Đó là lúc cần sử dụng tới điều kiện. Điều kiện cho phép máy tính đưa ra quyết định, dựa trên thông tin đúng bất cứ khi nào code của bạn được chạy.+</td><td>Điều kiện</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>    </tr>         <tr>    <th rowspan="3" id="t05">Khóa học E</th>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/7">E.7 - Chia sẻ kỹ thuật số</a><br><i>*Dụng cụ: Điện thoại thông minh hoặc máy tính bảng</i><br><small>Được nhóm phụ trách về Bản quyền và Sáng tạo cho nhóm phụ trách về Kiến thức căn bản về Khoa học Máy tính mượn, bài học này tồn tại để giúp học viên hiểu những thách thức và lợi ích của việc tôn trọng quyền sở hữu và bản quyền, đặc biệt là trong môi trường kỹ thuật số. Học viên nên được khuyến khích tôn trọng quyền của nghệ sĩ như một phần quan trọng để trở thành một công dân kỹ thuật số có đạo đức.</td><td>Công dân số</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/11">E.11 - Sáng tác bài hát</a><br><small>Một trong những cấu trúc tuyệt vời nhất trong thế giới khoa học máy tính là hàm. Hàm (đôi khi được gọi là thủ tục) là các chương trình nhỏ mà bạn có thể sử dụng nhiều lần bên trong chương trình lớn hơn của mình. Bài học này sẽ giúp học viên hiểu một cách trực quan tại sao việc kết hợp các đoạn code thành hàm lại có thể là một thực hành hữu ích như vậy.</td><td>Hàm</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>  <tr>    <td><a href="https://studio.code.org/s/coursee-2021/lessons/17">E.17 - Thiết kế cho khả năng tiếp cận</a><br><small>Trong bài học này, học viên sẽ tìm hiểu về khả năng tiếp cận và giá trị của sự đồng cảm thông qua việc "động não" và thiết kế các giải pháp có thể truy cập cho các ứng dụng giả định.</td><td>Tác động của Tin học</td><td><img src="/images/e18.png" width="90%"></td>  </tr>    </tr>         <tr>    <th rowspan="3" id="t06">Khóa học F</th>           <td><a href= "https://studio.code.org/s/coursef-2021/lessons/6">F.6 -Câu chuyện điền vào chỗ trống</a><br><i>*Dụng cụ: 6 phong bì (cũng có thể dùng: giấy hoặc thẻ chỉ mục, gấp đôi)</i><br><small>Học viên sẽ sử dụng các câu chuyện điền vào chỗ trống (tương tự như Mad Libs®) như một ngữ cảnh để hiểu cách máy tính lấy và lưu trữ dữ liệu đầu vào từ người dùng, sau đó sử dụng dữ liệu sau này khi chương trình chạy.
   </td><td>Biến</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>    </tr>        <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - Cho vòng lặp thú vị</a><br><i>*Dụng cụ: Xúc xắc (3 xúc xắc/nhóm 2-4 người)</i><br><small>Chúng ta biết rằng vòng lặp cho phép chúng ta làm đi làm lại nhiều việc, nhưng bây giờ chúng ta sẽ học cách sử dụng vòng lặp có các cấu trúc bổ sung được tích hợp sẵn. Những cấu trúc mới này sẽ cho phép học viên tạo mã mạnh hơn và năng động hơn.</td><td>Cho vòng lặp</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://studio.code.org/s/coursef-2021/lessons/19">F.19 - Mạng Internet</a><br><small>Mặc dù nhiều người sử dụng Internet hàng ngày, nhưng không nhiều người biết nó hoạt động như thế nào. Trong bài học này, học viên sẽ giả vờ như mình đang lướt qua internet, đồng thời tìm hiểu về kết nối, URL, Địa chỉ IP và DNS.</td><td>Data</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## Các bài học không cần máy tính bổ sung

Các bài học sau được sắp xếp theo khái niệm và có thể tìm thấy trong các phiên bản trước của các khóa học Kiến thức căn bản về CS của chúng tôi. Tài nguyên bổ sung mà bạn có thể muốn tham khảo khi định sử dụng những bài học này bao gồm:
* [2019 Khóa học A-F Hướng dẫn chương trình giảng dạy](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Khóa học A-F Danh sách dụng cụ](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 Khóa học Danh sách Amazon](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Khóa học A-F Hướng dẫn chương trình giảng dạy](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Khóa học A-F Hướng dẫn chương trình giảng dạy (phiên bản 2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Khóa học 1-4 Hướng dẫn chương trình giảng dạy](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Thẻ ghi chú CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;    
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Khái niệm</th>    <th width=65%><center><big>Giáo trình <br><small> Giáo trình bao gồm các tài nguyên bổ sung (slide, video, đáp án, v. v.).
</th>     <th><center><big>Tài nguyên</th>     <tr>    <th rowspan="2" id=t07 width=5%>Công dân số</th>    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Nguồn cung ứng cộng đồng</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>  </tr>  <tr>      <td colspan="2">*Common Sense Education có một <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">Chương trình giảng dạy Công dân số đầy đủ</a> bao gồm nhiều hoạt động không cần máy tính.</td>    <tr>    <th id=t07>Nhị phân</th>        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Hình ảnh nhị phân </a><br><small>*Dụng cụ: Không bắt buộc - Phân nhóm các mục đối lập cho học viên xem. Mặc dù nhiều người nghĩ về hệ nhị phân hoàn toàn là số 0 và số 1, học viên sẽ được tiếp cận với khái niệm rằng thông tin có thể được biểu diễn bằng nhiều tùy chọn nhị phân khác nhau. Bài học này còn đưa khái niệm này tiến xa hơn một bước nữa vì nó minh họa cách một máy tính có thể lưu trữ thông tin phức tạp hơn nữa (chẳng hạn như hình ảnh và màu sắc) ở dạng nhị phân.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>Vòng lặp</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Robot vòng lặp của tôi</a><br><small>Tại đây, học viên tìm hiểu sự đơn giản và tiện ích của vòng lặp bằng cách “lập trình” người bạn của mình bằng ngôn ngữ từ "Người bạn robot của tôi" Khi được tiếp cận với khái niệm vòng lặp, học viên sẽ thấy rằng mình có thể xây dựng các cấu trúc lớn hơn nhanh hơn.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Hàm</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">Chuông bắt nắng dạng hàm</a><br><small>Trong bài học này, học viên sẽ chế tạo một chiếc chuông bắt nắng bằng dây, hạt cườm và một loại charm đặc biệt. Học viên sẽ làm theo một loạt các bước lặp đi lặp lại, sau đó được yêu cầu xác định các bộ “kỹ năng” nhất định được lặp lại nhiều lần. Khi những kỹ năng đó được xác định, chúng sẽ được gọi từ một chương trình chính và toàn bộ quá trình sáng tạo đẹp đẽ sẽ được ghi lại trên một tờ giấy. Chương trình cuối cùng sẽ hướng đến toàn bộ lớp học, bất kể loại dây, hạt cườm và charm của học viên. Để thực hiện điều này một cách hiệu quả, học viên sẽ cần phải “trừu tượng hóa” các chi tiết của vật liệu cụ thể của mình và tạo ra các thuật ngữ mơ hồ cho dụng cụ của mỗi cá nhân. Việc sử dụng trình giữ chỗ chung này là một cách tiếp cận tuyệt vời với khái niệm biến.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Video bài học</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Xem bài học thực hành</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Đáp án hoạt động <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Đáp án bài kiểm tra</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Sáng tác bài hát với Tham số</a><br><small>Một trong những cấu trúc tuyệt vời nhất trong thế giới khoa học máy tính là hàm. Hàm (đôi khi được gọi là thủ tục) là các chương trình nhỏ mà bạn có thể sử dụng nhiều lần bên trong chương trình lớn hơn của mình. Bài học này sẽ giúp học viên hiểu một cách trực quan tại sao việc kết hợp các đoạn code thành hàm lại là một cách thực hành hữu ích và cách học viên có thể sử dụng các cấu trúc đó ngay cả khi các đoạn code hơi khác nhau.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Thuật toán</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Cuộc đua xúc xắc</a><br><small>Trong bài học này, học viên sẽ liên hệ khái niệm thuật toán với các hoạt động thực tế bằng cách chơi trò chơi Cuộc đua xúc xắc. Mục tiêu ở đây là bắt đầu xây dựng các kỹ năng để chuyển các tình huống trong thế giới thực sang các tình huống trực tuyến và ngược lại.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Người bạn robot của tôi</a><br><small>Sử dụng một phím biểu tượng được xác định trước, học viên của bạn sẽ tìm ra cách hướng dẫn nhau hoàn thành các nhiệm vụ cụ thể mà không cần sử dụng bất kỳ lệnh bằng lời nói nào. Phần này dạy cho học viên về mối liên hệ giữa biểu tượng và hành động, sự khác biệt giữa thuật toán và chương trình, cũng như kỹ năng gỡ lỗi có giá trị.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Thuật toán trong đời thực: Máy bay giấy</a><br><small>Trong bài học này, học viên sẽ liên hệ khái niệm thuật toán với các hoạt động hàng ngày. Sau khi thảo luận về thuật toán, học viên sẽ chế tạo máy bay bằng giấy bằng một thuật toán. Mục tiêu ở đây là bắt đầu xây dựng kỹ năng để chuyển các tình huống trong thế giới thực sang các kịch bản trực tuyến và ngược lại.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Thuật toán trong đời thực: Gieo hạt</a><br><small>Trong bài học này, học viên sẽ liên hệ khái niệm thuật toán với các hoạt động thực tế hàng ngày bằng cách gieo hạt thực tế. Mục tiêu ở đây là bắt đầu xây dựng kỹ năng để chuyển các tình huống trong thế giới thực sang các kịch bản trực tuyến và ngược lại.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Xếp hình Tangram</a><br><small>Bài học này cho chúng ta thấy một số điều quan trọng về thuật toán. Miễn là bạn giữ cho thuật toán đơn giản, thì có rất nhiều cách để sử dụng nó. Tuy nhiên, nếu bạn muốn đảm bảo mọi người đều tạo ra kết quả giống nhau, thì thuật toán của bạn cần chi tiết hơn. Học viên sẽ học được sự khác biệt giữa thuật toán chi tiết và tổng quát trong khi chơi với tangram.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Tư duy tính toán</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Tư duy tính toán</a><br><small>Đối với hoạt động này, không có hướng dẫn nào được cung cấp. Thay vào đó, học viên sẽ sử dụng ví dụ về những gì người chơi tưởng tượng đã làm để tìm ra cách chơi trò chơi. Bài học này mang đến cho học viên cơ hội thực hành bốn nghệ thuật của tư duy tính toán (phân rã, khớp mẫu, trừu tượng hóa và thuật toán) trong một hoạt động gắn kết.</td> <td><a href="https://youtu.be/TlAaklrolA0">Video bài học</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Xem bài học thực hành</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Đáp án hoạt động </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Tư duy tính toán với quái vật</a><br><small>Không cần gì khác ngoài giấy và bút đánh dấu, học viên sẽ học bốn bước của tư duy tính toán. Sau khi giới thiệu ngắn gọn, học viên nên được chia thành các nhóm, nơi học viên sẽ phải tạo hướng dẫn cho các học viên khác để vẽ một con quái vật cụ thể (từ danh mục các quái vật được chọn trước). Toàn bộ nhiệm vụ phải được phân rã, sau đó các nhóm sẽ phân tích tất cả các quái vật trong danh mục để tìm hình mẫu, trừu tượng hóa các chi tiết tương tự từ các quái vật, sau đó sử dụng thông tin đó để tạo ra một thuật toán (hướng dẫn) cho các nhóm khác để vẽ một con quái vật nhất định. Các nhóm sau đó sẽ chuyển đổi thuật toán với một nhóm khác và vẽ con quái vật dựa trên những gì thuật toán đó chỉ ra. Bản vẽ có đúng như ý định của nhóm ban đầu không?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Lỗi không được phát hiện</a><br><small>Bài học này sẽ hướng dẫn học viên các bước gỡ lỗi. Học viên sẽ học câu thần chú: “Chuyện gì đã xảy ra? Điều gì đáng ra đã phải xảy ra? Nó cho bạn biết điều gì?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Tính kiên trì</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Xây dựng nền tảng</a><br><small>Các vấn đề mới và chưa được giải quyết thường khá khó. Nếu chúng ta muốn có bất kỳ cơ hội nào để tạo ra thứ gì đó sáng tạo, hữu ích và thông minh, thì chúng ta cần phải sẵn sàng tấn công những vấn đề khó khăn ngay cả khi nó đồng nghĩa với việc thất bại một vài lần trước khi chúng ta thành công. Trong bài học này, học viên sẽ xây dựng một cấu trúc bằng các vật liệu phổ biến. Cấu trúc sẽ được kiểm tra về khả năng đỡ một cuốn sách giáo khoa trong hơn mười giây. Hầu hết học viên sẽ không làm đúng ngay lần đầu tiên, nhưng điều quan trọng là học viên phải vượt qua và tiếp tục cố gắng.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie và dự án lớn</a><br><small>Khi học viên gặp rào cản trong khi trả lời câu hỏi hoặc làm việc trong một dự án, họ rất dễ nản lòng và bỏ cuộc. Bài học này sẽ giới thiệu cho học viên khái niệm rằng sự thất vọng có thể là một phần quan trọng của việc học. Ở đây, sự thất vọng được thể hiện như một bước trong quá trình sáng tạo, chứ không phải là một dấu hiệu của sự thất bại. Bài học này có thể được thực hiện trong một hoặc hai buổi học. Nếu bạn có nhiều thời gian hơn, bạn có thể vẽ ra công trình và giai đoạn sửa đổi của hoạt động Tháp lăn bi.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Trừu tượng hóa</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Trừu tượng hóa là một trong những kỹ năng quan trọng nhất đối với một nhà khoa học máy tính để hiểu được vấn đề. Nó đơn giản hóa các vấn đề và ngăn chặn sự lặp lại không cần thiết. Một lập trình viên giỏi sử dụng trừu tượng hóa mỗi khi tạo một chương trình. Hoạt động này sẽ giúp học viên của bạn phân tích các câu chuyện để tìm ra điểm khác biệt để trừu tượng hóa chúng. Những câu chuyện trừu tượng đó trở thành khuôn mẫu cho những câu chuyện mới thú vị và điên rồ.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Video bài học</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Đáp án hoạt động</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Đáp án bài kiểm tra </a></td>  </tr>
<tr>   <th id=t07>Biến</th>     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Biến phong bì</a><br><i>*Dụng cụ: Phong bì (1-4/nhóm 2-4 người)</i><br><small>Biến được sử dụng làm trình giữ chỗ cho các giá trị như số hoặc từ. Biến cho phép rất nhiều sự tự do trong lập trình. Thay vì phải gõ một cụm từ nhiều lần hoặc nhớ một số khó nhớ, các nhà khoa học máy tính có thể sử dụng các biến để tham chiếu chúng. Bài học này giúp giải thích biến là gì và cách chúng ta có thể sử dụng chúng theo nhiều cách khác nhau. Biến không phải là một khái niệm dễ nắm bắt, vì vậy chúng tôi khuyên bạn nên dành nhiều thời gian để thảo luận ở cuối bài học.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

