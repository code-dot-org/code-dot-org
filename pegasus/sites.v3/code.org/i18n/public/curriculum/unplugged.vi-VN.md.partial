---
title: Kiến thức căn bản về CS không cần máy tính
video_player: true
theme: responsive
---

# Kiến thức căn bản về CS không cần máy tính

Chúng tôi đã biên soạn một danh sách các bài học không cần máy tính để bạn sử dụng trong lớp học của mình. Giờ đây, bạn có thể dạy các kiến thức căn bản về khoa học máy tính, cho dù bạn có máy tính trong lớp học của mình hay không!
<br>
<div class="col-50">
Chúng tôi đang nói đến các bài học mà học viên không cần làm việc trên máy tính Học viên thường sẽ làm việc với bút chì và giấy hoặc các thao tác vật lý.  Đây là những cơ hội học tập động học có chủ đích giúp học viên hiểu những khái niệm phức tạp theo những cách liên quan đến cuộc sống của chính mình. <br><br>Các bài học không cần máy tính đặc biệt hữu ích để xây dựng và duy trì môi trường lớp học cộng tác và chúng là những trải nghiệm hữu ích mà bạn có thể tham khảo khi giới thiệu các khái niệm trừu tượng. Mỗi hoạt động này có thể được sử dụng riêng biệt hoặc với các bài học khoa học máy tính khác về các khái niệm liên quan.
</div>

<div class="col-50" style="text-align:center">
<img src="/images/new-main.jpg" width="90%">
<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;4 tuổi trở lên, chỉ tiếng Anh
</div>

<div style="clear: both;"></div>

***
## Unplugged lessons in CS Fundamentals 2022-23
The following lessons can be found in <a href="https://docs.google.com/document/d/12j5IkeGEWeAmWnZY9krbNSo8oKOKT5nIQGUH5J7Si80/preview" target="_blank" rel="noopener noreferrer">CS Fundamentals 2022-23</a>. <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t01 {
  width: 10%;
  background-color: #ffa400;
}
#t02 {
  width: 10%;
  background-color: #ffb81d;
}
#t03 {
  width: 10%;
  background-color: #b9bf15;
}
#t04 {
  width: 10%;
  background-color: #00adbc;
}
#t05 {
  width: 10%;
  background-color: #0094ca;
}
#t06 {
  width: 10%;
  background-color: #7765a0;
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Course</th>
    <th><center><big>Lesson Plan</th>
    <th width=10%><center><big>Concept</th>
    <th width=20%><center><big>Video</th>
     <tr>
    <th rowspan="3" id="t01">Course A</th>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/3">A.3 - Happy Maps</a><br><small>This unplugged lesson brings together teams with a simple task: get the "flurb" to the fruit. Học viên sẽ thực hành viết các hướng dẫn chính xác bằng cách dịch các hướng dẫn thành ký hiệu được cung cấp. If problems arise in the code, students should also work together to recognize bugs and build solutions.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/coursea_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/7">A.7 - Happy Loops</a><br><small>This activity revisits Happy Maps. This time, student will be solving bigger, longer puzzles with their code, leading them to see utility in structures that let them write longer code in an easier way.</td><td>Loops</td> <td><img src="/images/a7.png" width="90%"></td>
  <tr>
    <td width=40%><a href="https://studio.code.org/s/coursea-2022/lessons/11">A.11 - The Big Event Jr.</a><br><small>Events are a great way to add variety to a pre-written algorithm. Đôi khi bạn muốn chương trình của mình có thể phản hồi người dùng chính xác khi người dùng muốn. That is what events are for.</td><td>Events</td> <td>{{ curriculum/unplugged/coursea_three_video_thumbnail }}</td>
  </tr>
       <tr>
    <th rowspan="3" id="t02">Course B</th>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/2">B.2 - Move It, Move It</a><br><small>This lesson will work to prepare students mentally for the coding exercises that they will encounter over the length of this course. In small teams, students will use physical activity to program their classmates to step carefully from place to place until a goal is achieved.</td><td>Sequencing</td> <td>{{ curriculum/unplugged/courseb_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/6">B.6 - Getting Loopy</a><br><small>As we start to write longer and more interesting programs, our code often contains a lot of repetition. In this lesson, students will learn about how loops can be used to more easily communicate instructions that have a lot of repetition by looking at the repeated patterns of movement in a dance.</td><td>Loops</td> <td>{{ curriculum/unplugged/courseb_two_video_thumbnail }}</td>
  <tr>
    <td><a href="https://studio.code.org/s/courseb-2022/lessons/10">B.10 - The Right App</a><br><small>This lesson has students recognize that computer science can help people in real life. Đầu tiên, học viên đặt mình vào vị thế của một số người dùng điện thoại thông minh hư cấu để giúp họ tìm thấy “ứng dụng phù hợp” đáp ứng nhu cầu của họ. Then, students exercise empathy and creativity to sketch their own smartphone app that addresses the needs of one additional user.</td><td>Impacts of Computing</td> <td><img src="/images/b10.png" width="90%"></td>
  </tr>
       <tr>
    <th rowspan="4" id="t03">Course C</th>
    <td><a href="https://studio.code.org/s/coursec-2022/lessons/2">C.2 - My Robotic Friends Jr.</a><br><i>*Supplies: Plastic cups (10/group of 2-3)</i><br><small>Using a set of symbols in place of code, students will design algorithms to instruct a "robot" to stack cups in different patterns. Học viên sẽ lần lượt tham gia với tư cách là người máy, chỉ phản hồi theo thuật toán do các bạn học đã đưa ra. This segment teaches students the connection between symbols and actions, the difference between an algorithm and a program, and the valuable skill of debugging.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursec_one_video_thumbnail }}</td>
  </tr>
  <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/7">C.7 - My Loopy Robotic Friend Jr</a><br><i>*Supplies: Paper cups (20/group of 4)</i><br><small>Overview
Building on the initial "My Robotic Friends" activity, students tackle larger and more complicated designs. In order to program their "robots" to complete these bigger designs, students will need to identify repeated patterns in their instructions that could be replaced with a loop.</td><td>Loops</td><td>{{ curriculum/unplugged/coursec_three_video_thumbnail }}</td>
  </tr>
      <tr>
   <td><a href="https://studio.code.org/s/coursec-2022/lessons/11">C.11 - The Big Event</a><br><small>Students will soon learn that events are a great way to add flexibility to a pre-written algorithm. Đôi khi bạn muốn chương trình của mình có thể phản hồi người dùng chính xác khi người dùng muốn. Events can make your program more interesting and interactive.</td><td>Events</td><td>{{ curriculum/unplugged/coursec_four_video_thumbnail }}</td>
   </tr>
       </tr>
     <td><a href="https://studio.code.org/s/coursec-2022/lessons/15">C.15 - Binary Bracelets</a><br><i>*Supplies: Markers. Không bắt buộc – 18 hạt cườm đen/18 hạt cườm trắng, mỗi học viên 1 dụng cụ dọn dẹp ống</i><br><small>Nhị phân cực kỳ quan trọng trong thế giới máy tính. Phần lớn máy tính ngày nay lưu trữ tất cả các loại thông tin ở dạng nhị phân. This lesson helps demonstrate how it is possible to take something from real life and translate it into a series of ons and offs.</td><td>Binary</td><td>{{ curriculum/unplugged/coursec_two_video_thumbnail }}</td>
  </tr>
         <tr>
    <th rowspan="3" id="t04">Course D</th>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/2">D.2 - Graph Paper Programming<br></a><small>By "programming" one another to draw pictures, students get an opportunity to experience some of the core concepts of programming in a fun and accessible way. Lớp học sẽ bắt đầu bằng cách cho học viên sử dụng các biểu tưởng để hướng dẫn nhau tô màu các ô vuông trên giấy kẻ ô li nhằm tái tạo một bức tranh hiện có. If there’s time, the lesson can conclude with images that the students create themselves.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_one_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/4">D.4 - Relay Programming<br></a><small>This activity will begin with a short lesson on debugging and persistence, then will quickly move to a race against the clock as students break into teams and work together to write a program one instruction at a time.</td><td>Sequencing</td><td>{{ curriculum/unplugged/coursed_two_video_thumbnail }}</td>
      </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursed-2022/lessons/12">D.12 - Conditionals with Cards</a><br><small>This lesson demonstrates how conditionals can be used to tailor a program to specific information. Không phải lúc nào chúng ta cũng có tất cả thông tin cần thiết khi viết một chương trình. Đôi khi bạn sẽ muốn làm điều gì đó khác trong một tình huống này so với một tình huống khác, ngay cả khi bạn không biết tình huống nào sẽ đúng khi code của bạn chạy. Đó là lúc cần sử dụng tới điều kiện. Conditionals allow a computer to make a decision, based on the information that is true any time your code is run.+</td><td>Conditionals</td><td>{{ curriculum/unplugged/coursed_three_video_thumbnail }}</td>

  </tr>
  <tr>
    <th rowspan="3" id="t05">Course E</th>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/9">E.9 - Songwriting</a><br><small>One of the most magnificent structures in the computer science world is the function. Hàm (đôi khi được gọi là thủ tục) là các chương trình nhỏ mà bạn có thể sử dụng nhiều lần bên trong chương trình lớn hơn của mình. This lesson will help students intuitively understand why combining chunks of code into functions can be such a helpful practice.</td><td>Functions</td><td>{{ curriculum/unplugged/coursee_two_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/15">E.15 - Designing for Accessibility</a><br><small>In this lesson, students will learn about accessibility and the value of empathy through brainstorming and designing accessible solutions for hypothetical apps.</td><td>Impacts of Computing</td><td><img src="/images/e18.png" width="90%"></td>
  <tr>
    <td><a href="https://studio.code.org/s/coursee-2022/lessons/16">E.16 - Digital Sharing</a><br><i>*Supplies: Smartphone or tablet</i><br><small>Loaned to Computer Science Fundamentals by the team over at Copyright and Creativity, this lesson exists to help students understand the challenges and beneﬁts of respecting ownership and copyright, particularly in digital environments. Students should be encouraged to respect artists’ rights as an important part of being an ethical digital citizen.</td><td>Digital Citizenship</td><td>{{ curriculum/unplugged/coursee_one_video_thumbnail }}</td>
  </tr>
    </tr>
         <tr>
    <th rowspan="3" id="t06">Course F</th>
           <td><a href= "https://studio.code.org/s/coursef-2022/lessons/6">F.6 -Blank Space Stories</a><br><i>*Supplies: 6 envelopes(also suitable:paper or index cards,folded in half)</i><br><small>Students will use fill-in-the-blank stories (similar to Mad Libs®) as a context for understanding how computers take and store input from a user, then use it later as a program runs.
   </td><td>Variables</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td>
  </tr>
        <tr>
    <td><a href="https://studio.code.org/s/coursef-2021/lessons/13">F.13 - For Loop Fun</a><br><i>*Supplies: Dice (3 dice/group of 2-4)</i><br><small>We know that loops allow us to do things over and over again, but now we’re going to learn how to use loops that have extra structures built right in. These new structures will allow students to create code that is more powerful and dynamic.</td><td>For Loops</td><td>{{ curriculum/unplugged/coursef_three_video_thumbnail }}</td>
  </tr>
  <tr>
    <td><a href="https://studio.code.org/s/coursef-2022/lessons/15">F.15 - The Internet</a><br><small>Even though many people use the internet daily, not very many know how it works. Trong bài học này, học viên sẽ giả vờ như mình đang lướt qua internet, đồng thời tìm hiểu về kết nối, URL, Địa chỉ IP và DNS.</td><td>Data</td><td>{{ curriculum/unplugged/coursef_two_video_thumbnail }}</td>  </tr>
</table>

<p style="clear:both"></p>

***
## Các bài học không cần máy tính bổ sung

Các bài học sau được sắp xếp theo khái niệm và có thể tìm thấy trong các phiên bản trước của các khóa học Kiến thức căn bản về CS của chúng tôi. Tài nguyên bổ sung mà bạn có thể muốn tham khảo khi định sử dụng những bài học này bao gồm:
* [2019 Khóa học A-F Hướng dẫn chương trình giảng dạy](https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview) | [2019 Khóa học A-F Danh sách dụng cụ](https://docs.google.com/document/d/e/2PACX-1vRLQiHVgq1oIXytilpBZDoeEn2_JcIN__r600AbUKTSGkQDaydXAGKpmUu1J7mTVBEkh9ZOnGcBDQQt/pub) | [2019 Khóa học Danh sách Amazon](https://www.amazon.com/ideas/amzn1.account.AFRP6N2PQKQ73HHEN6SJNS5ONHEA)
* [2018 Khóa học A-F Hướng dẫn chương trình giảng dạy](https://code.org/curriculum/docs/csf/CSF_Curriculum_Guide_2018_smaller.pdf)
* [2017 Khóa học A-F Hướng dẫn chương trình giảng dạy (phiên bản 2)](https://code.org/curriculum/docs/csf/CSF_TeacherGuide_CoursesA-F_v2a_small.pdf)
* [Khóa học 1-4 Hướng dẫn chương trình giảng dạy](http://code.org/curriculum/docs/k-5/complete_compressed.pdf)
* [Thẻ ghi chú CSF](https://code.org/curriculum/docs/k-5/flashCards.pdf) <br><br>

<style>
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}
th, td {
  padding: 5px;
  text-align: left;
}
#t07 {
  width: 10%;
  background-color: #c6cacd;
  color: #000000
}
</style>
<table style="width:100%">
  <tr>
    <th><center><big>Khái niệm</th>    <th width=65%><center><big>Giáo trình <br><small> Giáo trình bao gồm các tài nguyên bổ sung (slide, video, đáp án, v. v.).
</th>
    <th><center><big>Resources</th>
     <tr>
    <th rowspan="2" id=t07 width=5%>Digital Citizenship</th>
    <td><a href="https://curriculum.code.org/csf-19/coursef/18">Crowdsourcing</a></td> <td>{{ curriculum/unplugged/archive_one_video_thumbnail }}</td>
  </tr>
  <tr>
      <td colspan="2">*Common Sense Education has a <a href="https://www.commonsense.org/education/digital-citizenship/curriculum">full Digital Citizenship Curriculum</a> that includes many unplugged activities.</td>
    <tr>
    <th id=t07>Binary</th>
        <td><a href="https://curriculum.code.org/csf-20/coursed/16/">Binary Images </a><br><small>*Supplies:Optional - Groupings of opposite items to display to students. Mặc dù nhiều người nghĩ về hệ nhị phân hoàn toàn là số 0 và số 1, học viên sẽ được tiếp cận với khái niệm rằng thông tin có thể được biểu diễn bằng nhiều tùy chọn nhị phân khác nhau. Bài học này còn đưa khái niệm này tiến xa hơn một bước nữa vì nó minh họa cách một máy tính có thể lưu trữ thông tin phức tạp hơn nữa (chẳng hạn như hình ảnh và màu sắc) ở dạng nhị phân.</td><td>{{ curriculum/unplugged/coursed_four_video_thumbnail }}</td> </tr>    <tr>    <th id=t07>Vòng lặp</th>        <td><a href="https://curriculum.code.org/csf-18/coursee/6/">Robot vòng lặp của tôi</a><br><small>Tại đây, học viên tìm hiểu sự đơn giản và tiện ích của vòng lặp bằng cách “lập trình” người bạn của mình bằng ngôn ngữ từ "Người bạn robot của tôi" Khi được tiếp cận với khái niệm vòng lặp, học viên sẽ thấy rằng mình có thể xây dựng các cấu trúc lớn hơn nhanh hơn.
</td> <td>{{ curriculum/unplugged/archive_two_video_thumbnail }}</td>  </tr>     <th rowspan="2" id=t07>Hàm</th>    <td><a href="https://code.org/curriculum/course3/4/Teacher">Chuông bắt nắng dạng hàm</a><br><small>Trong bài học này, học viên sẽ chế tạo một chiếc chuông bắt nắng bằng dây, hạt cườm và một loại charm đặc biệt. Học viên sẽ làm theo một loạt các bước lặp đi lặp lại, sau đó được yêu cầu xác định các bộ “kỹ năng” nhất định được lặp lại nhiều lần. Khi những kỹ năng đó được xác định, chúng sẽ được gọi từ một chương trình chính và toàn bộ quá trình sáng tạo đẹp đẽ sẽ được ghi lại trên một tờ giấy. Chương trình cuối cùng sẽ hướng đến toàn bộ lớp học, bất kể loại dây, hạt cườm và charm của học viên. Để thực hiện điều này một cách hiệu quả, học viên sẽ cần phải “trừu tượng hóa” các chi tiết của vật liệu cụ thể của mình và tạo ra các thuật ngữ mơ hồ cho dụng cụ của mỗi cá nhân. Việc sử dụng trình giữ chỗ chung này là một cách tiếp cận tuyệt vời với khái niệm biến.</td> <td><a href="https://youtu.be/d1MdyeXy0v0">Video bài học</a><br><a href="https://www.youtube.com/watch?v=Rb5DNYhLb7I">Xem bài học thực hành</a><br><a href="https://www.code.org/curriculum/course3/4/Key-Activity4-FunctionalSuncatchers.pdf">Đáp án hoạt động <a href="https://www.code.org/curriculum/course3/4/Key-Assessment4-FunctionalSkills.pdf">Đáp án bài kiểm tra</a></td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/21/">Sáng tác bài hát với Tham số</a><br><small>Một trong những cấu trúc tuyệt vời nhất trong thế giới khoa học máy tính là hàm. Hàm (đôi khi được gọi là thủ tục) là các chương trình nhỏ mà bạn có thể sử dụng nhiều lần bên trong chương trình lớn hơn của mình. Bài học này sẽ giúp học viên hiểu một cách trực quan tại sao việc kết hợp các đoạn code thành hàm lại là một cách thực hành hữu ích và cách học viên có thể sử dụng các cấu trúc đó ngay cả khi các đoạn code hơi khác nhau.
</td> <td>{{ curriculum/unplugged/archive_three_video_thumbnail }}</td>  </tr>     <th rowspan="6" id=t07>Thuật toán</th>    <td><a href="https://curriculum.code.org/csf-1718/coursee/10/">Cuộc đua xúc xắc</a><br><small>Trong bài học này, học viên sẽ liên hệ khái niệm thuật toán với các hoạt động thực tế bằng cách chơi trò chơi Cuộc đua xúc xắc. Mục tiêu ở đây là bắt đầu xây dựng các kỹ năng để chuyển các tình huống trong thế giới thực sang các tình huống trực tuyến và ngược lại.
</td> <td>{{ curriculum/unplugged/archive_four_video_thumbnail }}</td>  </tr>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursee/1">Người bạn robot của tôi</a><br><small>Sử dụng một phím biểu tượng được xác định trước, học viên của bạn sẽ tìm ra cách hướng dẫn nhau hoàn thành các nhiệm vụ cụ thể mà không cần sử dụng bất kỳ lệnh bằng lời nói nào. Phần này dạy cho học viên về mối liên hệ giữa biểu tượng và hành động, sự khác biệt giữa thuật toán và chương trình, cũng như kỹ năng gỡ lỗi có giá trị.</td> <td>{{ curriculum/unplugged/archive_five_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursec/4/">Thuật toán trong đời thực: Máy bay giấy</a><br><small>Trong bài học này, học viên sẽ liên hệ khái niệm thuật toán với các hoạt động hàng ngày. Sau khi thảo luận về thuật toán, học viên sẽ chế tạo máy bay bằng giấy bằng một thuật toán. Mục tiêu ở đây là bắt đầu xây dựng kỹ năng để chuyển các tình huống trong thế giới thực sang các kịch bản trực tuyến và ngược lại.</td> <td>{{ curriculum/unplugged/archive_six_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/3/">Thuật toán trong đời thực: Gieo hạt</a><br><small>Trong bài học này, học viên sẽ liên hệ khái niệm thuật toán với các hoạt động thực tế hàng ngày bằng cách gieo hạt thực tế. Mục tiêu ở đây là bắt đầu xây dựng kỹ năng để chuyển các tình huống trong thế giới thực sang các kịch bản trực tuyến và ngược lại.</td> <td>{{ curriculum/unplugged/archive_seven_video_thumbnail }}</td>  </tr>    <tr>    <td><a href="https://curriculum.code.org/csf-1718/coursef/10/">Xếp hình Tangram</a><br><small>Bài học này cho chúng ta thấy một số điều quan trọng về thuật toán. Miễn là bạn giữ cho thuật toán đơn giản, thì có rất nhiều cách để sử dụng nó. Tuy nhiên, nếu bạn muốn đảm bảo mọi người đều tạo ra kết quả giống nhau, thì thuật toán của bạn cần chi tiết hơn. Học viên sẽ học được sự khác biệt giữa thuật toán chi tiết và tổng quát trong khi chơi với tangram.</td> <td>{{ curriculum/unplugged/archive_eight_video_thumbnail }}</td>  </tr>  </tr>    <tr>  </tr>    </tr>     <th id=t07 rowspan="4">Tư duy tính toán</th>        <tr>        <td><a href="https://code.org/curriculum/course3/1/Teacher">Tư duy tính toán</a><br><small>Đối với hoạt động này, không có hướng dẫn nào được cung cấp. Thay vào đó, học viên sẽ sử dụng ví dụ về những gì người chơi tưởng tượng đã làm để tìm ra cách chơi trò chơi. Bài học này mang đến cho học viên cơ hội thực hành bốn nghệ thuật của tư duy tính toán (phân rã, khớp mẫu, trừu tượng hóa và thuật toán) trong một hoạt động gắn kết.</td> <td><a href="https://youtu.be/TlAaklrolA0">Video bài học</a><br><a href="https://www.youtube.com/watch?v=b4a7Ty1TpKU">Xem bài học thực hành</a><br><a href="https://www.code.org/curriculum/course3/1/Key-Activity1-ComputationalThinking.pdf">Đáp án hoạt động </a></td>        </tr>        <td><a href="https://studio.code.org/unplugged/unplug2.pdf">Tư duy tính toán với quái vật</a><br><small>Không cần gì khác ngoài giấy và bút đánh dấu, học viên sẽ học bốn bước của tư duy tính toán. Sau khi giới thiệu ngắn gọn, học viên nên được chia thành các nhóm, nơi học viên sẽ phải tạo hướng dẫn cho các học viên khác để vẽ một con quái vật cụ thể (từ danh mục các quái vật được chọn trước). Toàn bộ nhiệm vụ phải được phân rã, sau đó các nhóm sẽ phân tích tất cả các quái vật trong danh mục để tìm hình mẫu, trừu tượng hóa các chi tiết tương tự từ các quái vật, sau đó sử dụng thông tin đó để tạo ra một thuật toán (hướng dẫn) cho các nhóm khác để vẽ một con quái vật nhất định. Các nhóm sau đó sẽ chuyển đổi thuật toán với một nhóm khác và vẽ con quái vật dựa trên những gì thuật toán đó chỉ ra. Bản vẽ có đúng như ý định của nhóm ban đầu không?</td> <td>{{ curriculum/unplugged/archive_nine_video_thumbnail }}</td>  <tr>    <td><a href="https://curriculum.code.org/csf-18/coursea/1/">Lỗi không được phát hiện</a><br><small>Bài học này sẽ hướng dẫn học viên các bước gỡ lỗi. Học viên sẽ học câu thần chú: “Chuyện gì đã xảy ra? Điều gì đáng ra đã phải xảy ra? Nó cho bạn biết điều gì?" </td> <td>{{ curriculum/unplugged/archive_ten_video_thumbnail }}</td>  </tr>    </tr>     <th rowspan="2" id=t07>Tính kiên trì</th>  <td><a href="https://curriculum.code.org/csf-18/coursec/1/">Xây dựng nền tảng</a><br><small>Các vấn đề mới và chưa được giải quyết thường khá khó. Nếu chúng ta muốn có bất kỳ cơ hội nào để tạo ra thứ gì đó sáng tạo, hữu ích và thông minh, thì chúng ta cần phải sẵn sàng tấn công những vấn đề khó khăn ngay cả khi nó đồng nghĩa với việc thất bại một vài lần trước khi chúng ta thành công. Trong bài học này, học viên sẽ xây dựng một cấu trúc bằng các vật liệu phổ biến. Cấu trúc sẽ được kiểm tra về khả năng đỡ một cuốn sách giáo khoa trong hơn mười giây. Hầu hết học viên sẽ không làm đúng ngay lần đầu tiên, nhưng điều quan trọng là học viên phải vượt qua và tiếp tục cố gắng.</td> <td>{{ curriculum/unplugged/archive_eleven_video_thumbnail }}</td>  </tr>  <tr> <td><a href="https://curriculum.code.org/csf-18/coursea/2/">Stevie và dự án lớn</a><br><small>Khi học viên gặp rào cản trong khi trả lời câu hỏi hoặc làm việc trong một dự án, họ rất dễ nản lòng và bỏ cuộc. Bài học này sẽ giới thiệu cho học viên khái niệm rằng sự thất vọng có thể là một phần quan trọng của việc học. Ở đây, sự thất vọng được thể hiện như một bước trong quá trình sáng tạo, chứ không phải là một dấu hiệu của sự thất bại. Bài học này có thể được thực hiện trong một hoặc hai buổi học. Nếu bạn có nhiều thời gian hơn, bạn có thể vẽ ra công trình và giai đoạn sửa đổi của hoạt động Tháp lăn bi.</td> <td>{{ curriculum/unplugged/archive_twelve_video_thumbnail }}</td>  </tr>     <th id=t07>Trừu tượng hóa</th>    <td><a href="https://code.org/curriculum/course4/5/Teacher">Mad Glibs</a><br><small>Trừu tượng hóa là một trong những kỹ năng quan trọng nhất đối với một nhà khoa học máy tính để hiểu được vấn đề. Nó đơn giản hóa các vấn đề và ngăn chặn sự lặp lại không cần thiết. Một lập trình viên giỏi sử dụng trừu tượng hóa mỗi khi tạo một chương trình. Hoạt động này sẽ giúp học viên của bạn phân tích các câu chuyện để tìm ra điểm khác biệt để trừu tượng hóa chúng. Những câu chuyện trừu tượng đó trở thành khuôn mẫu cho những câu chuyện mới thú vị và điên rồ.</td> <td><a href="https://youtu.be/TctGRrUdkcc">Video bài học</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Activity5-MadGlibs.pdf">Đáp án hoạt động</a><br><a href="https://www.code.org/curriculum/course4/5/Key-Assessment5-MadGlibs.pdf">Đáp án bài kiểm tra </a></td>  </tr>
<tr>   <th id=t07>Biến</th>     <td><a href="https://curriculum.code.org/csf-20/coursef/7/">Biến phong bì</a><br><i>*Dụng cụ: Phong bì (1-4/nhóm 2-4 người)</i><br><small>Biến được sử dụng làm trình giữ chỗ cho các giá trị như số hoặc từ. Biến cho phép rất nhiều sự tự do trong lập trình. Thay vì phải gõ một cụm từ nhiều lần hoặc nhớ một số khó nhớ, các nhà khoa học máy tính có thể sử dụng các biến để tham chiếu chúng. Bài học này giúp giải thích biến là gì và cách chúng ta có thể sử dụng chúng theo nhiều cách khác nhau. Biến không phải là một khái niệm dễ nắm bắt, vì vậy chúng tôi khuyên bạn nên dành nhiều thời gian để thảo luận ở cuối bài học.</td><td>{{ curriculum/unplugged/coursef_one_video_thumbnail }}</td></tr>
</table>


<p style="clear:both"></p>

