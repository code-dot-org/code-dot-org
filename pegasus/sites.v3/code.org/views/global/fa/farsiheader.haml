:ruby
  cookie_key = environment_specific_cookie_name '_user_type'
  user_type = request.cookies[cookie_key]
  user_type = "student" if user_type == "student_y"

  # Forcibly set the 'ge_region' parameter to Farsi
  cookies[Rack::GlobalEdition::REGION_KEY] = 'fa'

  hamburger_options = {}
  hamburger_options[:level] = nil
  hamburger_options[:script_level] = nil
  hamburger_options[:lesson] = nil
  hamburger_options[:user_type] = user_type
  hamburger_options[:language] = request.language
  hamburger_options[:show_gallery] = true
  hamburger_options[:loc_prefix] = "header_"
  hamburger_options[:page_mode] = request.cookies['pm']
  hamburger_options[:ge_region] = :fa

  header_contents_options = {}
  # Force signed out user for the header, for now
  header_contents_options[:user_type] = 'signed_out'
  header_contents_options[:language] = request.language
  header_contents_options[:loc_prefix] = "header_"
  header_contents_options[:page_mode] = request.cookies['pm']
  header_contents_options[:ge_region] = :fa

  require 'cdo/hamburger'

=inline_css 'hamburger.css'

%nav.main
  .left
    -# rubocop:disable CustomCops/DashboardDbUsage
    %a{href: current_user ? CDO.studio_url("/home") : CDO.code_org_url("/global/fa")}
      %img.logo{src: '/images/logo.svg', alt: I18n.t(:code_org_logo_alt)}
    -# rubocop:enable CustomCops/DashboardDbUsage
    %ul#headerlinks
      - Hamburger.get_header_contents(header_contents_options).each do |entry|
        %li{class: entry[:class]}
          %a.headerlink{id: entry[:id], href: entry[:url]}= entry[:title]
  .right
    = view :sign_in_or_user
    = view :hamburger, hamburger_options
