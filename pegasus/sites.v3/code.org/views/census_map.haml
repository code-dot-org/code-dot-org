%link{rel: "stylesheet", type: "text/css", href: "/css/census_map.css"}
-max_height_percentage = 0.65 if max_height_percentage.nil?

#map
  #gmap.full-width
  #belowmaplegend.legend
    .legend-title Legend
    .color.green
    .caption
      Pledged to expand computer science
    .color.blue
    .caption
      Goes beyond an Hour of Code
  #map-footer
    %span#footer-text
      In partnership with
    %img{src: '/images/fit-200/avatars/computer_science_teachers_association.png'}
  %br
  %br


:javascript
  var gmap;
  var resizeZoom;
  var scrollwheelOption = false;
  var draggableOption = false;
  var resizeThrottleTimerId;
  var resizeThrottleTimeoutMs = 500;
  var maxHeightPercentage = "#{max_height_percentage}";

  $(document).ready(function() {
    initializeMap();
    addGeocomplete();
    resizeMap();

    $(window).resize(function() {
      // Throttle calling of resizeMap
      clearTimeout(resizeThrottleTimerId);
      resizeThrottleTimerId = setTimeout(resizeMap, resizeThrottleTimeoutMs);
    });
  });

  function initializeMap() {
    var mapOptions = {
      center: new google.maps.LatLng(41,-102),
      zoom: 4,
      scrollwheel: scrollwheelOption,
      draggable: draggableOption,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    gmap = new google.maps.Map(document.getElementById("gmap"), mapOptions);

    var layer = new google.maps.FusionTablesLayer({
      query: {
        select: 'type',
        from: '1G3wfhnX2LFkgkJfDA6iw0Pq3t-6pl9wjvqUdLY7B'
      },
      styles: [{
        where: "type CONTAINS 'pledged'",
        markerOptions: {
          iconName: "small_green"
        }
      }, {
        where: "type DOES NOT CONTAIN 'pledged'",
        markerOptions: {
          iconName: "small_blue"
        }
      }],
    });

    var legend = document.createElement('div');
    legend.id = 'inmaplegend';
    legend.className = 'legend';
    legend.index = 1;
    $("#belowmaplegend div").clone().appendTo(legend);

    gmap.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(legend);

    layer.setMap(gmap);

    google.maps.event.addListener(layer, 'click', function(event) {
      enableDrag();
      event.infoWindowHtml = event.row['organization_name'].value;
      event.infoWindowHtml += '<br>';
    });
    google.maps.event.addListener(gmap, 'zoom_changed', function(event) {
      enableDrag();
    });
    google.maps.event.addListener(gmap, 'click', function(event) {
      enableDrag();
    });
  }

  function enableDrag() {
    scrollwheelOption = true;
    draggableOption = true;

    var map_options = {
      scrollwheel: scrollwheelOption,
      draggable: draggableOption
    }
    gmap.setOptions(map_options);
  }

  function resizeMap() {
    var map_width = $('#gmap').width();
    var map_zoom = gmap.getZoom();
    var map_center = gmap.getCenter();

    // Max height of map is 2/3 of screen height so user can always scroll.
    var max_height = $(window).innerHeight() * maxHeightPercentage;

    var window_aspect_ratio = $(window).innerHeight() / $(window).innerWidth();

    if  (window_aspect_ratio < 1) {
      // Landscape window. Use the current 1:2 ratio map size.
      map_height = map_width / 2;

      // But, make sure this size doesn't exceed our max height.
       map_height = Math.min(map_height, max_height);
    }
    else {
      // Portrait window. Just use the max height so that it's taller and more usable.
      map_height = max_height;
    }

    $('#gmap').height(Math.round(map_height));

    if (map_width < 256 && map_zoom < 3) {
      map_zoom = 0;
      map_center = new google.maps.LatLng(22.2116,4.5775);
    }
    else if (map_width < 512 && map_zoom < 3) {
      map_zoom = 1;
      map_center = new google.maps.LatLng(22.2116,4.5775);
    }
    else if (map_zoom < 3) {
      map_zoom = 2;
      map_center = new google.maps.LatLng(22.2116,4.5775);
    }

    var map_options = {
      center: map_center,
      zoom: map_zoom,
      minZoom: map_zoom,
      scrollwheel: scrollwheelOption,
      draggable: draggableOption
    }

    gmap.setOptions(map_options);
  }

  function addGeocomplete() {
    var geocomplete_options = {
    };

    $("#geocomplete").geocomplete(geocomplete_options)
      .bind("geocode:result", function(event, result){
        gmap.fitBounds(result.geometry.viewport);
      });

    $("#btn-submit").click(function(){
      $("#geocomplete").trigger("geocode");
    });

    $("#btn-reset").click(function(){
      $('#geocomplete').val('');
      gmap.setCenter(new google.maps.LatLng(22.2116,4.5775));
      gmap.setZoom(2);
      info_window.close();
      resizeMap();
    });
  }
