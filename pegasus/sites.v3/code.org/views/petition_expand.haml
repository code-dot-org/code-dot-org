%link{:href=>"/css/petition.css", :rel=>"stylesheet"}

#petitionblock.greybox
  #petition_message= I18n.t :petition_message

  #form.container_responsive
    #petition_sign_message.desktop-feature= I18n.t(:petition_sign_message).gsub("#", format_integer_with_commas(fetch_metrics['petition_signatures']).to_s)

    %form#petition_form{:onsubmit=>"return petition.signPetition()"}

      #email_error= I18n.t :enter_valid_email
      #age_error= I18n.t :enter_valid_age
      #no_error &nbsp;

      #fields
        .col-18
          %input#name.grey_input{:name=>"name_s", :placeholder=>I18n.t(:name), :type=>'text'}
        .col-18
          %input#email.grey_input{:name=>"email_s", :placeholder=>I18n.t(:email), :type=>'email'}
          %div.desktop-feature= I18n.t :used_infrequent_updates
        .col-18
          %input#zip_code_or_country.grey_input{:name=>"zip_code_or_country_s", :placeholder=>I18n.t(:zipcode), :type=>'text'}
          %div.desktop-feature= I18n.t :enter_country
        .col-18
          %span
            =I18n.t :petition_age
            %select#age.dropdown{:name=>"age_i"}
              %option{value:0}= '-'
              -(1..100).each do |age|
                %option{value:age}= age
          %div.desktop-feature
            %a{href: '/privacy', style: 'color: #5b6770;'}= I18n.t :privacy_practices_children
        .col-18
          %span
            =I18n.t :i_am_a
            %select.dropdown{:name=>"role_s"}
              %option{:value=>"other"}= I18n.t :participant_select
              %option{:value=>"student"}= I18n.t :participant_student
              %option{:value=>"parent"}= I18n.t :participant_parent
              %option{:value=>"educator"}= I18n.t :participant_educator
              %option{:value=>"engineer"}= I18n.t :participant_engineer
              %option{:value=>"other"}= I18n.t :participant_other
        .col-18.i-agree-button
          %button#gobutton.button_enabled= I18n.t :i_agree

  #thanks.container_responsive
    %br
    %span= I18n.t :petition_thankyou
    %br
    %br

  %div.clear
  .container_responsive
    #threedivs
      %div#signpetitionclick
        -if request.language  == 'en'
          %span.diversitypledge{onclick: "expandPetition();"}= I18n.t :homepage_diversity_pledge
        %button{onclick: "expandPetition();", style: "margin-bottom:5px"}= I18n.t :homepage_signpetition_dropdown
        %span.joinothers= I18n.t(:petition_join_others).gsub("#", format_integer_with_commas(fetch_metrics['petition_signatures']).to_s)

:javascript

  var petitionClickReported = false;

  function expandPetition()
  {
    $('#petitioninfo').fadeOut(); 
    $('#signpetitionclick').fadeOut();
    $('#form').slideDown('slow').animate({ opacity: 1 }, { queue: false, duration: 'slow' });
  }

  function Petition()
  {
    // placeholder text for non-HTML5 browsers
    $('input[type=text], textarea').placeholder();
    $('input[type=email], textarea').placeholder();
  }

  Petition.prototype.showAgeError = function(error)
  {
    $("input#age").toggleClass("input_error", error);
    $("#age_error").toggle(error);
  }

  Petition.prototype.showEmailError = function(error)
  {
    $("input#email").toggleClass("input_error", error);
    $("#email_error").toggle(error);
  }

  Petition.prototype.showNoError = function(noError)
  {
    $("#no_error").toggle(noError);
  }

  Petition.prototype.processResponse = function(data)
  {
    var display = $("#mobile-header").css("display");
    var mobileDisplay = display !== undefined && display != "none";

    if (mobileDisplay)
    {
      var form = $("#form");
      var thanks = $("#thanks");

      form.hide();
      thanks.show();
    }
    else if (data.state_code_s && data.state_code_s != "")
    {
      window.location.href = "/promote/" + data.state_code_s;
    }
    else
    {
      window.location.href = "/promote/thanks";
    }
  }

  Petition.prototype.processError = function(data)
  {
    $("#gobutton").removeAttr('disabled');
    $("#gobutton").addClass("button_enabled").removeClass("button_disabled");

    var badEmail = (data.status == 400 && data.responseJSON.email_s !== undefined);

    var badAge = !badEmail && (data.status == 400 && data.responseJSON.age_i !== undefined);

    Petition.prototype.showAgeError(badAge);
    Petition.prototype.showEmailError(badEmail);
    Petition.prototype.showNoError(!badAge && !badEmail);
  }

  Petition.prototype.signPetition = function()
  {
    $("#gobutton").attr('disabled','disabled');
    $("#gobutton").removeClass("button_enabled").addClass("button_disabled");

    this.showAgeError(false);
    this.showEmailError(false);
    this.showNoError(true);

    $.ajax({
      url: "/forms/Petition",
      type: "post",
      dataType: "json",
      data: $('#petition_form').serialize()
    }).done(this.processResponse).fail(this.processError);

    // Let's just try to report a petition click once.
    if (! petitionClickReported) {

      if (console && console.log)
        console.log("Recording petition click", "#{request.path}");

      ga('send', 'event', 'petition', 'click', {'page': "#{request.path}"});   
      petitionClickReported = true;
    }

    return false;
  }

  $(document).ready()
  {
    petition = new Petition();
  }

 