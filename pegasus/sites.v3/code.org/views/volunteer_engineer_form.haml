:ruby
  form ||= Form2.new(data: "{}") # initialize an empty form if there was none provided to us as a local

%script{type: "text/javascript", src: "/js/sifter.min.js"}
%script{type: "text/javascript", src: "/js/microplugin.min.js"}
%script{type: "text/javascript", src: "/js/selectize.min.js"}
%link{rel: "stylesheet", type: "text/css", href: "/css/selectize.bootstrap3.css"}/
%script{type: "text/javascript", src: "https://maps.googleapis.com/maps/api/js?client=#{CDO.google_maps_client_id}&sensor=false&libraries=places,geometry&v=3.7"}

/[if lt IE 9]
  %script{src: "/js/es5-shim.min.js"}

%form#volunteer-engineer-submit-form{role: "form", onsubmit: "return volunteerEngineerFormSubmit()"}
  - if form.secret
    %h2= I18n.t(:volunteer_engineer_submission_update_information)
    %h3= I18n.t(:volunteer_engineer_submission_header_shared)

  - else
    %h2= I18n.t(:volunteer_engineer_submission_header_shared)

  .alert.alert-danger.error-message{style: 'display: none', role: 'alert'}

  .form-group
    %label.control-label{for: "volunteer-name"}= I18n.t(:volunteer_engineer_submission_field_name)
    %span.form-required-field *
    %div
      %input#volunteer-name.form-control{name: "name_s", placeholder: I18n.t(:volunteer_engineer_submission_field_name_placeholder), type: "text", required: true, value: form.data['name_s']}/

  .form-group
    %label.control-label{for: "volunteer-company"}= I18n.t(:volunteer_engineer_submission_field_company)
    %span
    %div
      %input#volunteer-company.form-control{name: "company_s", placeholder: I18n.t(:volunteer_engineer_submission_field_company_placeholder), type: "text", required: false, value: form.data['company_s']}/

  .form-group
    %label.control-label{for: "volunteer-experience"}= I18n.t(:volunteer_engineer_submission_field_experience_level)
    %span.form-required-field *
    %div
      %select#volunteer-experience.form-control{name: "experience_s", type: "select", required: true}
        %option{selected: form.data['experience_s'].nil_or_empty?, value: ""}
        -VolunteerEngineerSubmission2015.experiences.each_pair do |key,label|
          %option{value: key, selected: key == form.data['experience_s']}= label

  .form-group
    %label.control-label{for: "volunteer-location"}= I18n.t(:volunteer_engineer_submission_field_location)
    %span.form-required-field *
    %p= I18n.t(:volunteer_engineer_submission_field_location_desc)
    %div
      %input#volunteer-location.form-control{name: "location_s", placeholder: I18n.t(:volunteer_engineer_submission_field_location_placeholder), type: "text", required: true, value: form.data['location_s']}/

  .form-group
    %label.control-label{for: "volunteer-location-flexibility"}= I18n.t(:volunteer_engineer_submission_field_location_flexibility)
    %span.form-required-field *
    %div
      %select#volunteer-location-flexibility.form-control{name: "location_flexibility_ss[]", type: "select", required: true, multiple: true}
        %option{selected: form.data['location_flexibility_ss'].nil_or_empty?, value: ""}
        -VolunteerEngineerSubmission2015.locations.each_pair do |key,label|
          %option{value: key, selected: (form.data['location_flexibility_ss'] || []).include?(key)}= label

  .form-group
    .checkbox
      %label
        %input#volunteer-after-hoc{name: "volunteer_after_hoc_b", type: "checkbox", value: '1', checked: form.data["volunteer_after_hoc_b"], required: false}/
        = I18n.t(:volunteer_engineer_submission_checkbox_after_hoc)

  .form-group{style: "display: none;"}
    %label.control-label{for: "volunteer-time-commitment"}= I18n.t(:volunteer_engineer_submission_field_time_commitment)
    %div
      %select#volunteer-time-commitment.form-control{name: "time_commitment_s", type: "select", required: false}
        %option{selected: form.data['time_commitment_s'].nil_or_empty?, value: ""}
        -VolunteerEngineerSubmission2015.commitments.each_pair do |key,label|
          %option{value: key, selected: key == form.data['time_commitment_s']}= label

  .form-group
    %label.control-label{for: "volunteer-linkedin"}= I18n.t(:volunteer_engineer_submission_field_linkedin)
    %div
      %input#volunteer-linkedin.form-control{name: "linkedin_s", placeholder: I18n.t(:volunteer_engineer_submission_field_linkedin_placeholder), type: "text", required: false, value: form.data['linkedin_s']}/
  .form-group
    %label.control-label{for: "volunteer-facebook"}= I18n.t(:volunteer_engineer_submission_field_facebook)
    %div
      %input#volunteer-facebook.form-control{name: "facebook_s", placeholder: I18n.t(:volunteer_engineer_submission_field_facebook_placeholder), type: "text", required: false, value: form.data['facebook_s']}/

  .form-group
    %label.control-label{for: "volunteer-description"}= I18n.t(:volunteer_engineer_submission_field_description)
    %span.form-required-field *
    %p= I18n.t(:volunteer_engineer_submission_field_description_desc)
    %div
      %textarea#volunteer-description.form-control{name: "description_s", placeholder: I18n.t(:volunteer_engineer_submission_field_description_placeholder), required: true, style: "height: 10em;"}
        = form.data['description_s']
  %hr
  %h2= I18n.t(:volunteer_engineer_submission_header_private)

  .form-group
    %label.control-label{for: "volunteer-email"}= I18n.t(:volunteer_engineer_submission_field_email)
    %span.form-required-field *
    %p= I18n.t(:volunteer_engineer_submission_field_email_desc)
    %div
      %input#volunteer-email.form-control{name: "email_s", placeholder: I18n.t(:volunteer_engineer_submission_field_email_placeholder), type: "text", required: true, value: form.data['email_s']}/

  %br
  .form-group{style: "margin-bottom: 0px"}
    %p= I18n.t(:volunteer_engineer_submission_final_paragraph)
    %div
      %label{style: 'font-weight: normal; cursor: pointer', for: 'volunteer-allow-contact'}
        %input#volunteer-allow-contact{name: 'allow_contact_b', type: 'checkbox', value: '1', required: true, checked: true}
          = I18n.t(:volunteer_engineer_submission_checkbox_contact)
        %span.form-required-field *

  .form-group
    %div
      %label{style: 'font-weight: normal; cursor: pointer'}
        %input#volunteer-age-18-plus{name: 'age_18_plus_b', type: 'checkbox', value: '1', required: true, checked: true}
          = I18n.t(:volunteer_engineer_submission_checkbox_age_18_plus)
        %span.form-required-field *

  .form-group
    %button.primary.btn-submit{type: "submit"}= I18n.t(:volunteer_engineer_submission_submit)

#volunteer-engineer-thanks{:style=>"display: none;"}
  .alert.alert-success{role:"alert"}
    %p= I18n.t(:volunteer_engineer_submission_thankyou).gsub('%{url}', '/volunteer/local')
  - if !form.secret
    #edit-information
      You can update your volunteer information or email subscription preferences anytime
      %a#edit-link-tag{href: "#"} here.
      Please bookmark this page to easily reference later.

:javascript
  $(document).ready(function() {
    new google.maps.places.SearchBox(document.getElementById('volunteer-location'));

    $('#volunteer-engineer-submit-form select').selectize();

    $('#volunteer-languages').change(function() {
      if ($.inArray('other', $(this).val()) > -1) {
        $('#volunteer-languages-other-wrapper').show();
      } else {
        $('#volunteer-languages-other').val('');
        $('#volunteer-languages-other-wrapper').hide();
      }
    }).triggerHandler('change');
    $('#volunteer-after-hoc').change(function() {
      if($(this).is(':checked')) {
        $('#volunteer-time-commitment').closest('.form-group').slideDown();
      } else {
        $('#volunteer-time-commitment').closest('.form-group').slideUp();
      }
    }).triggerHandler('change');
  });

  function processVolunteerEngineerFormResponse(data)
  {
    $('form').hide();
    $('#volunteer-engineer-thanks').fadeIn();
    $('#edit-link-tag').attr('href', '/volunteer/engineer/edit/' + data.secret);
  }

  function processVolunteerEngineerFormError(data)
  {
    $('.has-error').removeClass('has-error');

    errors = Object.keys(data.responseJSON);
    errors_count = errors.length;

    for (i = 0; i < errors_count; ++i) {
      error_id = '#volunteer-' + errors[i].replace(/_/g, '-');
      error_id = error_id.replace(/-[sb]s?$/, '');
      $(error_id).parents('.form-group').addClass('has-error');
    }

    $('#volunteer-engineer-submit-form .error-message').text('An error occurred. Please check to make sure all required fields have been filled out.').show();

    $('html, body').animate({
      scrollTop: $('#volunteer-engineer-submit-form').offset().top
    }, 1000);

    $('#volunteer-engineer-submit-form .btn-submit').removeAttr('disabled');
    $('#volunteer-engineer-submit-form .btn-submit').removeClass("button_disabled").addClass("button_enabled");
  }

  function volunteerEngineerFormSubmit()
  {
    $('#volunteer-engineer-submit-form .btn-submit').attr('disabled','disabled');
    $('#volunteer-engineer-submit-form .btn-submit').removeClass("button_enabled").addClass("button_disabled");

    var serializedData = $('#volunteer-engineer-submit-form').serializeArray();

    // Send null when checkbox is unchecked to reset the value. Otherwise nothing will be updated for the field.
    serializedData = serializedData.concat(
      $('input[type=checkbox]:not(:checked)#volunteer-after-hoc').map(
        function() {
            return {"name": this.name, "value": null}
        }).get(),
      $('input[type=checkbox]:not(:checked)#volunteer-allow-contact').map(
        function() {
            return {"name": this.name, "value": null}
        }).get(),
      $('input[type=checkbox]:not(:checked)#volunteer-age-18-plus').map(
        function() {
            return {"name": this.name, "value": null}
        }).get(),
    );

    $.ajax({
      url: "/forms/VolunteerEngineerSubmission2015#{'/' + form.secret if form && form.secret}",
      type: "post",
      dataType: "json",
      data: serializedData
    }).done(processVolunteerEngineerFormResponse).fail(processVolunteerEngineerFormError);

    return false;
  }
