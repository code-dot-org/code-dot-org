
- (1..13).each do |n|
  :css
    .courses .bar-#{n} {
      float: left;
      width: #{n * 7}%;
    }

    .arrow-offset-#{n}:after {
      left: #{n * 68 + 34}px;
    }

- (0..4).each do |n|
  :css
    .tools-arrow-offset-#{n}:after {
      left: #{n * 140 + 60}px;
    }

:css

  .courses .grouprow {
    color: #fff;
    border: 1px solid white;
    background-color: #666;
    padding: 10px 5px 10px 5px;
    box-sizing: border-box;
    text-align: center;
  }

  .courses .graderow {
    color: #eee;
    border: 1px solid white;
    background-color: #888;
    padding: 10px 5px 10px 5px;
    box-sizing: border-box;
    text-align: center;
  }

  .courses .course {
    cursor: pointer;
  }

  .courses .courserow {
    border: 0px solid grey;
    background-color: #ddd;
    color: white;
    //background: linear-gradient(to right, rgba(0, 148, 202, 1), rgba(0, 148, 202, 0.85));
    border: 1px solid white;
    padding: 5px 10px 5px 10px;
    border-radius: 0px;
    margin: 5px 0px 5px 0px
  }

  .courses .break {
    clear: both;
  }

  .courses .title {
    font-size: 14px;
    font-family: 'Gotham 4r', sans-serif;
  }

  .courses .groupname {
    font-size: 12px;
    display: inline-block;
    white-space: nowrap;
    right: 0px;
    color: rgb(206,243,246);
  }
  .courses .subtitle {
    font-size: 10px;
  }

  .courses .description {
    font-size: 12px;
    color: grey;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-left: 0px;
    margin-right: 10px
  }

  .course a {
    color: white;
    font-size: 12px;
    margin-left: 10px;
    margin-left: 0px;
    font-family: 'Gotham 4r', sans-serif;
  }

  .course .courseimage {
    float: left;
    width: 240px;
    padding: 0px 10px 0px 0px;
  }

  .arrow_box {
    position: relative;
    background: #eee;
    padding: 5px 10px 5px 5px;
    //overflow: hidden;
  }

  .arrow_box:after {
    bottom: 100%;
    //left: 40%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
    border-color: rgba(170, 170, 170, 0);
    border-bottom-color: #eee;
    border-width: 10px;
    margin-left: -10px;
  }

  .detailcontainer {
    clear: both;
    width: 882px;
    padding: 10px 0px 5px 0px;
    box-sizing: border-box;
  }

  .detailcontainer .title {
    font-size: 18px;
    font-family: 'Gotham 5r', sans-serif;
  }

  .detailcontainer a {
    font-family: 'Gotham 5r', sans-serif;
  }

  .notes {
    text-align: center;
    width: 882px;
    margin-top: 16px;
  }

  .notes .block {
    float: left;
    width: 33%;
    box-sizing: border-box;
    padding: 20px;
    text-align: center;
    font-size: 12px;
    line-height: 18px;

  }

  .notes .number {
    display: inline-block;
    background-color: #888;
    border-radius: 20px;
    width: 40px;
    height: 40px;
    color: white;
    line-height: 40px;
    float: center;
    margin-bottom: 20px;
  }

- courses = []
- courses << { name: "Course 1", starts: 0, ends: 1, description: "Introductory course for early readers.", group: "CS Fundamentals", link: "/educate/curriculum/elementary-school#course1", img: "/shared/images/courses/logo_tall_course1.jpg", color: "#33E0EF", long: "Start with Course 1 for early readers. Students will create computer programs that will help them learn to collaborate with others, develop problem-solving skills, and persist through difficult tasks. By the end of this course, students create their very own custom game or story that they can share. Recommended for grades K-1." }
- courses << { name: "Course 2", starts: 1, ends: 5, description: "Introductory course for students who can read.", group: "CS Fundamentals", link: "/educate/curriculum/elementary-school#course2", img: "/shared/images/courses/logo_tall_course2.jpg", color: "#33E0EF", long: "Start with Course 2 for students who can read and have no prior programming experience. In this course students will create programs to solve problems and develop interactive games or stories they can share. Recommended for grades 2-5." }
- courses << { name: "Course 3", starts: 3, ends: 5, description: "Follow-up to Course 2.", group: "CS Fundamentals", link: "/educate/curriculum/elementary-school#course3", img: "/shared/images/courses/logo_tall_course3.jpg", color: "#33E0EF", long: "Course 3 is designed for students who have taken Course 2. Students will delve deeper into programming topics introduced in previous courses to create flexible solutions to more complex problems. By the end of this course, students create interactive stories and games they can share with anyone. Recommended for grades 4-5." }
- courses << { name: "Course 4", starts: 5, ends: 6, description: "Follow-up to Course 3.", group: "CS Fundamentals", link: "/educate/curriculum/elementary-school#course4", img: "/shared/images/courses/logo_tall_course4.jpg", color: "#33E0EF", long: "Course 4 is designed for students who have taken Courses 2 and 3. Students will learn how to tackle puzzles with increased complexity as they learn how to combine several concepts when solving each challenge. By the time this Course is completed, students will be creating programs that let them showcase multiple skills, including for loops and functions with parameters. Recommended for grades 4-8." }

- courses << { name: "CS Discoveries", starts: 7, ends: 9, subtitle: "Under development", description: "Introductory computer science course that be a semester or year long.", link: "/educate/csd", img: "/images/fit-500/csd/ms.jpg", color: "#1AC7D6", long: "CS Discoveries is an introductory Computer Science course that empowers students to create authentic artifacts and engage with CS as a medium for creativity, communication, problem solving, and fun. The course will be piloted in Spring 2017, with full rollout Summer 2017." }
- courses << { name: "CS Principles", subtitle: "Advanced Placement course", starts: 9, ends: 12, description: "A year-long rigorous introductory computer science course at the high-school level covering the Internet, data, and programming. Can be run as a non-AP course.", link: "/educate/csp", img: "/shared/images/teacher-announcement/csp-widgets.png", color: "#00adbc", long: "In fall 2016, the College Board launched its newest AP® course, AP Computer Science Principles. The course introduces students to the foundational concepts of computer science and challenges them to explore how computing and technology can impact the world. The AP Program designed AP Computer Science Principles with the goal of creating leaders in computer science fields and attracting and engaging those who are traditionally underrepresented with essential computing tools and multidisciplinary opportunities." }

- courses << { name: "Accelerated Course", starts: 5, ends: 12, description: "A faster-paced course that covers all of the concepts covered in Courses 1 - 4 in 20-hours.", group: "CS Fundamentals", link: "/educate/curriculum/accelerated-course", img: "/images/20-hour-banner.jpg", color: "#1AC7D6", long: "K-8 Intro to Computer Science is a free course that aims to demystify computer science and show K-8 students that it’s fun, collaborative, and creative. The course is designed to motivate students and educators to continue learning computer science to improve real world relationships, connections, and life." }


-#
  - courses << { heading: "Standalone activities" }
  - courses << { name: "Unplugged", starts: 0, ends: 6, link: "/curriculum/unplugged" }
  - courses << { name: "Hour of Code", starts: 0, ends: 12, link: "/learn" }


%h2{style: "margin-top: 22px"} Overview of Code Studio Courses

%p Code.org is building a full K-12 curriculum pathway on our Code Studio learning platform. Our courses are already being taught in thousands of classrooms! Click each course to see more details.

.courseexplorer.courses{style: "margin-left: 0px; margin-top: 30px"}
  .group{style: "overflow: hidden"}
    .grouprow.bar-6{style: "opacity: 0.7; opacity: 1"}
      Elementary school
    .grouprow.bar-3{style: "opacity: 0.85; opacity: 1"}
      Middle school
    .grouprow.bar-4{style: "opacity: 1"}
      High school
  .grade.break
    .graderow.bar-1{style: "opacity: 0.7"}
      K
    - (1..12).each do |n|
      - opacity = n.between?(0,5) ? 0.7 : n.between?(6,8) ? 0.85 : 1
      .graderow.bar-1{style: "opacity: #{opacity}"}
        = n
  .coursebodycontainer{ style: "position: relative; overflow: hidden; clear: both"}
    .coursebodyback{ style: "position: absolute; top: 0; left: 0; height: 100%; width: 100%; z-index: -100"}
      - (1..13).each do |n|
        - opacity = n.between?(0,6) ? 0.6 : n.between?(7,9) ? 0.8 : 1
        -# opacity = n % 2 == 0 ? 0.8 : 0.6
        .graderow.bar-1{style: "height: 100%; background-color: rgba(200, 200, 200, #{opacity})"}
    .coursebodymain{style: "width: 100%"}
      - courses.each_with_index do |course, course_index|
        - if course[:heading]
          %h2.course.break
            = course[:heading]
        - else
          .course.break{id: "course-#{course_index}", onclick: "$('#courseextra-#{course_index}').slideToggle(); $('.courseexplorer .detailcontainer').not('#courseextra-#{course_index}').slideUp();"}
            - unless course[:starts] == 0
              %div{class: "bar-#{course[:starts]}"}
                &nbsp;
            %div{class: "courserow bar-#{course[:ends] - course[:starts] + 1}", style: "xopacity: #{course[:opacity] || 1}; background-color: #{"#1AC7D6" || course[:color] || '#00adbc'}"}
              .title
                =course[:name]
              - if course[:group]
                .groupname
                  =(course[:group])
          .course.detailcontainer{id: "courseextra-#{course_index}", style: "display: none; color: grey; cursor: auto"}
            .arrow_box{class: "arrow-offset-#{course[:starts]}"}
              .arrow_box_content{style: "overflow: hidden"}
                - if course[:img]
                  .left{style: "float: left; width: 30%"}
                    %a{href: course[:link]}
                      %img.courseimage{src: course[:img]}
                .right{style: "float: left; width: 65%"}
                  .title
                    =course[:name]
                  - if course[:long]
                    .description
                      =course[:long]
                  - else
                    .description
                      =course[:description]
                  - if course[:link]
                    %br/
                    %a{href: course[:link], style: "padding-left: 0px; color: grey"}
                      Learn more
              .arrow_box_close{style: "position: absolute; right: 10px; top: 0px; cursor: pointer", onclick: "$('#courseextra-#{course_index}').slideUp()" }
                %i.fa.fa-times{"aria-hidden" => "true"}

          .cleardiv{style: "clear: both"}
  .cleardiv{style: "clear: both"}

  .notes{style: "clear: both; background-color: #ddd; overflow: hidden;"}
    %h3
      Notes
    .block
      .number 1
      %br/
      Students with no prior computer science experience can start with almost any course. However, we recommend completing Course 2 before starting Course 3 or 4.
    .block
      .number 2
      %br/
      The above shows default progression.  Actual implementation may vary.
    .block
      .number 3
      %br/
      While listed for younger grades, Courses 2–4 can be used by older students



- tools = []
- tools << { name: "Hour of Code", starts: 0, ends: 12, link: "/learn", description: "An interactive catalog of hundreds of hour-long activities.", img: "/images/fill-336x140/learn/student2.png", long: "Try any one of hundreds of one-hour tutorials designed for all ages in over 45 languages. Join millions of students and teachers in over 180 countries starting with an Hour of Code. No prior computer science experience required.", layout: "wide" }
- tools << { name: "Artist", starts: 0, ends: 5, link: CDO.studio_url("/projects/artist"), description: "Draw cool pictures and designs with the Artist!", link: CDO.studio_url("/projects/artist"), long: "Unleash your creativity! Draw cool pictures and create designs with the Artist!", img: "/shared/images/fill-140x140/courses/logo_artist.png" }
- tools << { name: "Play Lab", starts: 2, ends: 6, link: CDO.studio_url("/projects/playlab"), description: "Create a story or make a game with Play Lab!", long: "Start a Play Lab project to create a story or make a game! Save and return to your project to build on it little by little, then share with friends when you're done!", img: "/images/fill-140x140/playlab_original3.png" }
- tools << { name: "App Lab", starts: 9, ends: 12, link: "/educate/applab", description: "Create a multi-page web app.", long: "App Lab is a programming environment where you can make simple apps. Design an app, code with blocks or JavaScript, and share your app in seconds.", img: "/shared/images/fill-140x140/courses/logo_applab.png" }
- tools << { name: "Text compression widget", starts: 9, ends: 12, link: "/educate/csp/widgets#text-compression", description: "Learn about text compression with this interactive widget.", long: "The text compression widget gives students the chance to learn about identifying patterns and developing a strategy for compressing a piece of text.", img: "/shared/images/fill-140x140/courses/logo_compression.png" }
- tools << { name: "Pixelation widget", starts: 9, ends: 12, link: "/educate/csp/widgets#pixelation", description: "Learn about graphics foramts with this interactive widget.", long: "The pixelation widget gives students the chance to learn about how images are encoded with pixel data. Then they'll encode their own images in binary.", img: "/shared/images/fill-140x140/courses/logo_pixelation.png" }
- tools << { name: "Cryptography widgets", starts: 9, ends: 12, link: "/educate/csp/widgets#cryptography", description: "Learn about cryptography with this interactive widget.", long: "These two widgets let students play with some classic schemes for both encrypting and \"cracking\" secret messages.", img: "/shared/images/fill-140x140/courses/logo_cryptography.png" }
- tools << { name: "Internet simulator", starts: 9, ends: 12, link: "/educate/csp/widgets#internet-simulator", description: "A group of students can learn how the internet works by communciating with each other.", img: "/shared/images/fill-140x140/courses/logo_netsim.png" }
- tools << { name: "Unplugged Activities", starts: 0, ends: 6, link: "/educate/csp/widgets#internet-simulator", description: "A large collection of activities that don't require computers.", long: "The Internet Simulator is designed to let students visualize, experiment with, and solve different kinds of problems associated with networked computers in a hands-on way.", link: "/curriculum/unplugged", img: "/shared/images/fill-140x140/courses/logo_unplugged.png" }

-#
  - tools << { name: "Game Lab", starts: 7, ends: 9, description: "Create a real-time game with Game Lab.", img: "/shared/images/fill-100x100/courses/logo_gamelab.png"}
  - tools << { name: "Maker Toolkit", starts: 7, ends: 9, description: "Use external hardware for both input and output.", img: "/shared/images/fill-100x100/courses/logo_makerkit.png"}


%h2 Standalone Tools

%p In addition to our Code Studio courses, students can explore computer science concepts in a variety of ways including one-hour tutorials, single-concept lessons with widgets, and even unplugged activities without any computers or technology.

.tools.courses{style: "margin-left: 0px; margin-top: 30px"}
  - [0,1].each do |row|
    - if row == 0
      - tools_for_row = tools[0, 4]
    - else
      - tools_for_row = tools[4, 8]
    .toolsrow{style: "clear: both"}
      - tools_for_row.each_with_index do |tool, index|
        - tool_index = row * 5  + index
        - width = tool[:layout] == "wide" ? 240 : 100
        .tool{id: "tool-#{index}", style: "width: #{width + 40}px; float: left; padding: 10px; text-align: center; cursor: pointer", data: { index: tool_index, row: row } }
          %img{src: tool[:img] || "/shared/images/fill-#{width}x100/courses/logo_tall_course1.jpg", style: "width: #{width}px; border-radius: 10px;"}
          %br/
          .name{style: "font-size: 12px; font-family: 'Gotham 5r', sans-serif; line-height: 14px; padding-top: 4px"}
            = tool[:name]

    .detailrow{id: "detailrow-#{row}", style: "display: none; position: relative; clear: both; height: 180px; "}
      - tools_for_row.each_with_index do |tool, index|
        - tool_index = row * 5 + index
        - width = tool[:layout] == "wide" ? 336 : 140
        - arrow_index = row == 0 && index > 0 ? index + 1 : index
        .course.detailcontainer{id: "toolsextra-#{tool_index}", style: "display: none; color: grey; cursor: auto; position: absolute; top: 0px; left: 0px"}
          .arrow_box{class: "tools-arrow-offset-#{arrow_index}"}
            .arrow_box_content{style: "overflow: hidden"}
              - if tool[:img]
                .left{style: "float: left; width: #{width}px"}
                  %a{href: tool[:link]}
                    %img.courseimage{src: tool[:img], style: "width: #{width}px"}
              .right{style: "float: left; width: #{830-width}px"}
                .title
                  =tool[:name]
                - if tool[:long]
                  .description
                    =tool[:long]
                - else
                  .description
                    =tool[:description]
                - if tool[:link]
                  %br/
                  %a{href: tool[:link], style: "padding-left: 0px; color: grey"}
                    Learn more
            .tool_arrow_box_close{style: "position: absolute; right: 10px; top: 0px; cursor: pointer", onclick: "$('#toolsextra-#{tool_index}').slideUp()", data: { index: index } }
              %i.fa.fa-times{"aria-hidden" => "true"}


:javascript
  var detailRowShowing = -1;
  var toolShowing = -1;

  $(document).ready()
  {
    $('.tool').click(function() {
      var row = ($(this).data('row'));
      var index = ($(this).data('index'));

      if (toolShowing == -1) {
        $('#detailrow-' + row).slideDown();
        $('#toolsextra-' + index).fadeIn();
        detailRowShowing = row;
        toolShowing = index;
      } else if (toolShowing == index) {
        $('#detailrow-' + detailRowShowing).slideUp();
        $('#toolsextra-' + index).fadeOut();
        detailRowShowing = -1;
        toolShowing = -1;
      } else if (detailRowShowing == row) {
        $('#toolsextra-' + toolShowing).fadeOut();
        $('#toolsextra-' + index).fadeIn();
        toolShowing = index;
      } else {
        $('#detailrow-' + detailRowShowing).slideUp();
        $('#toolsextra-' + toolShowing).fadeOut();
        $('#detailrow-' + row).slideDown();
        $('#toolsextra-' + index).fadeIn();
        detailRowShowing = row;
        toolShowing = index;
      }
    });

    $('.tool_arrow_box_close').click(function () {
      $('.detailrow').slideUp();
      toolShowing = -1;
    });
  }
