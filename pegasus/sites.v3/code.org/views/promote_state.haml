-require 'state_abbr'
-data = DB[:cdo_state_promote].where(state_code_s:state).first
-pass if data.nil?
-statename = get_us_state_from_abbr(state)
-petition_url = data[:petition_url_t]
%script{type: "text/javascript", src: "/shared/js/helpers.js"}
%script{type: "text/javascript", src: "/js/promote.js"}
%p#state-title
  #{statename}
%p.fact{style: "margin-bottom: 0px;"}
  -unless data[:cs_jobs_i] == 0
    %strong.figure
      =format_integer_with_commas(data[:cs_jobs_i])
    .info
      Open computing jobs
-unless data[:growth_vs_average_f] < 0.0
  %p.fact.subfact{style: "margin-bottom: 0px;"}
    (<b>#{data[:growth_vs_average_f]}x</b> the state average demand rate)
%p.fact.subfact
  with an average salary of <b>$#{format_integer_with_commas(data[:avg_sal_computing_i])}</b>
%p.fact
  %strong.figure
    =number_to_percentage(data[:count_schools_teach_cs_i], precision: 0)
  .info
    of public high schools teach a CS class
%p.fact
  -unless data[:cs_graduates] == 0
    %strong.figure
      =format_integer_with_commas(data[:cs_graduates_i])
    .info
      Computer science graduates

.policy-title.fact
  = precede "Policy Environment (" do
    = succeed "):" do
      %a{href: 'http://bit.ly/9policiesrubric', target: '_blank'} rubric

.icon-facts.info
  .fact.icon-fact
    - if data[:pd_funding_s] == "No"
      .fa-stack
        %i.fa.fa-circle.fa-stack-2x
        %i.fa.fa-times-circle.fa-stack-1x
      .fact-text
        No dedicated state funding for CS PD
    - elsif data[:pd_funding_s] == "Yes"
      %i.fa.fa-check-circle
      .fact-text
        Dedicated state funding for CS PD
    - elsif data[:pd_funding_s] == "Other"
      .fa-stack
        %i.fa.fa-circle.fa-stack-2x
        %i.fa.fa-times-circle.fa-stack-1x
      .fact-text
        = data[:pd_funding_exception_s]
  .fact.icon-fact
    - if data[:require_hs_s] == "No"
      .fa-stack
        %i.fa.fa-circle.fa-stack-2x
        %i.fa.fa-times-circle.fa-stack-1x
      .fact-text
        Does not require all high schools to offer CS
    - elsif data[:require_hs_s] == "Yes"
      %i.fa.fa-check-circle
      .fact-text
        Requires all high schools to offer CS
    - elsif data[:require_hs_s] == "Other"
      .fa-stack
        %i.fa.fa-circle.fa-stack-2x
        %i.fa.fa-times-circle.fa-stack-1x
      .fact-text
        = data[:require_hs_exception_s]

  .fact.icon-fact
    - if data[:cs_standards_s] == "No"
      .fa-stack
        %i.fa.fa-circle.fa-stack-2x
        %i.fa.fa-times-circle.fa-stack-1x
      .fact-text
        No K-12 CS curriculum standards
    - elsif data[:cs_standards_s] == "Yes"
      %i.fa.fa-check-circle
      .fact-text
        K-12 CS curriculum standards
    - elsif data[:cs_standards_s] == "Other"
      .fa-stack
        %i.fa.fa-circle.fa-stack-2x
        %i.fa.fa-times-circle.fa-stack-1x
      .fact-text
        = data[:cs_standards_exception_s]

%p.fact{style: "margin-top: 5px; margin-bottom: 0px; text-align: left"}
  #show-ap-stats{style: "cursor: pointer;"} &#9654;&nbsp; AP Stats
  #hide-ap-stats{style: "display: none;"}
    %div{style: "cursor: pointer;"} &#9660;&nbsp; AP Stats
    .fact
      %i.fa.fa-circle.fa-1{style: "font-size: 14px;"}
      &nbsp;
      = "#{data[:percent_schools_ap_cs_i]}% of schools teach AP CS"
    .fact
      %i.fa.fa-circle.fa-1{style: "font-size: 14px;"}
      &nbsp;
      = "#{format_integer_with_commas(data[:ap_cs_exams_i])} AP CS exams were taken last year"
    .fact
      %i.fa.fa-circle.fa-1{style: "font-size: 14px;"}
      &nbsp;
      = "#{data[:percent_ap_female_i]}% of them were taken by female students"

.state-buttons
  -if ! state.nil_or_empty? && File.exists?(pegasus_dir("sites.v3/code.org/public/advocacy/state-facts/#{state}.pdf.fetch"))
    .state-button.download-fact-sheet
      %a{:href=>CDO.code_org_url("/advocacy/state-facts/#{state}.pdf"), target: '_blank'}
        %button<
          View state fact-sheet

  - if ! state.nil_or_empty?
    .state-button.take-action
      %a{:href=>'https://www.votervoice.net/Code/campaigns/58463/respond', target: '_blank'}
        %button<
          Take action in your state

-if data[:text_t]
  %p
    =data[:text_t]

  -if data[:action_text_s] && data[:action_url_s]
    %a{href: data[:action_url_s], target: '_blank'}
      %button{class: 'state-petition-btn'}
        = data[:action_text_s]
  - else
    %a{href: data[:action_url_s], target: '_blank'}
      %button{class: 'state-petition-btn', style: 'visibility: hidden'}
        Sign petition
