# Prerequisites:
# - VPC stack must be created: https://github.com/code-dot-org/code-dot-org/blob/staging/aws/cloudformation/vpc.yml.erb
# - Manually build docker image using Dockerfile in this directory and push to ECR repository in same account + region as this stack
#
# Manual steps needed after stack creation:
# - Finish configuring Cloudwatch Event Rule to run Fargate task once per day with the following settings:
#     Target: ECS task
#       Launch Type: Fargate
#       Network Configuration:
#         Subnet: A Private Subnet from VPC stack output
#         Security Groups: default security group for VPC
#         Auto-assign Public IP: DISABLED
# - Enable Cloudwatch Event Rule
#
# Requires specifying the "CAPABILITY_NAMED_IAM" cloudformation capability, and specifying parameters via environment variables
# or locals.yml

AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation template to create an Fargate cluster and task definition for running Aurora backup verification.

Parameters:
  HoneybadgerApiKey:
    Type: String
    Default: ""
    Description: Honeybadger API key used for reporting errors during execution of the ECS task
    NoEcho: True
  HoneybadgerSnsTopicArn:
    Type: String
    Description: SNS topic ARN created by alerting CloudFormation stack
    NoEcho: True

Resources:
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AuroraVerifyBackupsEcsTaskRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ecs-tasks.amazonaws.com"
            Action: 
              - "sts:AssumeRole"

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AuroraVerifyBackupsEcsTaskExecutionRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "ecs-tasks.amazonaws.com"
          Action:
          - "sts:AssumeRole"

  CWEInvokeECSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AuroraVerifyBackupsCWERole
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "events.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies:
        # Grant permissions for managing specific non-admin AWS::IAM resources.
        - PolicyName: AllowRuleToRunFargateTask
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                # Manually construct the Task Definition Family ARN, since !Ref returns the Task Definition Revision ARN
                Resource: !Ref TaskDefinition
                Condition:
                  ArnLike:
                    ecs:cluster: !GetAtt ECSCluster.Arn
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt TaskRole.Arn
                  - !GetAtt TaskExecutionRole.Arn
                Condition:
                  StringLike:
                    iam:PassedToService: ecs-tasks.amazonaws.com

  ECSCluster:
    Type: AWS::ECS::Cluster

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AWS::StackName}-aurora-verify-backups"
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      Cpu: 256
      Memory: 0.5GB
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
      - Name: aurora-verify-backups
        Essential: true
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/aurora-verify-backups:latest"
        MemoryReservation: 512
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref CloudwatchLogsGroup
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub "${AWS::StackName}-aurora-verify-backups"
        Environment:
          -
            Name: DB_CLUSTER_ID
            Value: aurora-verify-backups-cluster
          -
            Name: DB_INSTANCE_ID
            Value: aurora-verify-backups-instance
          -
            Name: DB_SNAPSHOT_IDENTIFIER_PREFIX
            Value: autoscale-prod
          -
            Name: DB_SUBNET_GROUP_NAME
            Value: !ImportValue VPC-DBSubnetGroup
          -
            Name: REGION
            Value: !Ref AWS::Region
          -
            Name: HONEYBADGER_API_KEY
            Value: !Ref HoneybadgerApiKey

  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "ECSLogGroup-${AWS::StackName}"
      RetentionInDays: 14

# Currently, a Cloudwatch Event Rule which runs a fargate task can't be fully configured via CloudFormation:
# https://github.com/aws/containers-roadmap/issues/92
# For now, the stack will create the Rule, but it must be manually configured and enabled (see instructions in comments at top of file)
  OncePerDayRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Run aurora backups verification once per day.
      Name: !Sub "${AWS::StackName}-OncePerDay"
      RoleArn: !GetAtt CWEInvokeECSRole.Arn
      ScheduleExpression: rate(1 day)
      State: DISABLED
      Targets:
        - Arn: !GetAtt ECSCluster.Arn
          RoleArn: !GetAtt CWEInvokeECSRole.Arn
          Id: FargateAuroraVerifyBackupsTarget
          EcsParameters:
            TaskCount: 1
            TaskDefinitionArn: !Ref TaskDefinition

  FailedInvocationsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-FailedInvocations"
      AlarmDescription: Alarms when the "once per day" cloudwatch rule fails to start a Verify Backups fargate task.
      AlarmActions:
        - !Ref HoneybadgerSnsTopicArn
      Dimensions:
        - Name: RuleName
          Value: !Ref OncePerDayRule
      MetricName: FailedInvocations
      Namespace: AWS/Events
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0.0
      Period: 300 # 5 minutes
      EvaluationPeriods: 1
      TreatMissingData: notBreaching

  NoInvocationsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-NoInvocations"
      AlarmDescription: Alarms when the "once per day" cloudwatch rule doesn't attempt to start a Verify Backups fargate task at least once per day.
      AlarmActions:
      - !Ref HoneybadgerSnsTopicArn
      Dimensions:
      - Name: RuleName
        Value: !Ref OncePerDayRule
      MetricName: Invocations
      Namespace: AWS/Events
      Statistic: Sum
      ComparisonOperator: LessThanThreshold
      Threshold: 1.0
      Period: 86400 # One day
      EvaluationPeriods: 1
      TreatMissingData: breaching
