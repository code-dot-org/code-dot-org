<% cache_node_type = rack_env?(:production) ? 'cache.r3.large' : 'cache.t2.micro' -%>
  GeocoderSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Geocoder Cache Subnet Group
      SubnetIds: <%= subnets.to_json %>
  GeocoderGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: Geocoder Replication Group
      NumCacheClusters: 3
<%  if cache_node_type.include? 'cache.t2' -%>
      AutomaticFailoverEnabled: false
<%  end-%>
      Engine: redis
      CacheNodeType: <%= cache_node_type %>
      SecurityGroupIds: [!ImportValue VPC-RedisSecurityGroup]
      CacheSubnetGroupName: !Ref GeocoderSubnetGroup
  MemcachedParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: memcached1.4
      Description: Memcached modified max_item_size.
      Properties:
        max_item_size: <%=64.megabytes%>
  Memcached:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType: <%= cache_node_type %>
      CacheParameterGroupName: !Ref MemcachedParameterGroup
      CacheSubnetGroupName: !Ref GeocoderSubnetGroup
      ClusterName: <%=stack_name[0..19]%> # Max 20 chars
      Engine: memcached
      EngineVersion: 1.4
      NumCacheNodes: 2
      AZMode: cross-az
      PreferredAvailabilityZones: <%= AVAILABILITY_ZONES.first(2).to_json %>
      VpcSecurityGroupIds: [!ImportValue VPC-MemcachedSecurityGroup]
