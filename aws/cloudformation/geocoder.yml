# This template is a modified version of the template generated by the ECS console cluster creation wizard.
# It creates a fargate service which runs https://github.com/apilayer/freegeoip/, and an ELB which fronts that service.

AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation template to create an ECS Fargate stack for running https://github.com/apilayer/freegeoip/.
Parameters:
  EcsClusterName:
    Type: String
    Description: ECS Cluster Name
    Default: geocoder-freegeoip
  EcsPort:
    Type: String
    Description: Security Group port to open on ECS instances
    Default: 80
  ElbPort:
    Type: String
    Description: Security Group port to open on ELB
    Default: 80
  SourceCidr:
    Type: String
    Description: CIDR/IP range for EcsPort and ElbPort
    Default: 0.0.0.0/0
  TargetType:
    Type: String
    Description: ALB target group target type
    Default: ip
Resources:
  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS Allowed Ports
      VpcId: !ImportValue VPC
      SecurityGroupIngress: 
        -
          IpProtocol: tcp
          FromPort: !Ref EcsPort
          ToPort: !Ref EcsPort
          CidrIp: !Ref SourceCidr
        -
          IpProtocol: tcp
          FromPort: 1
          ToPort: 65535
          SourceSecurityGroupId: !Ref AlbSecurityGroup
        -
          IpProtocol: tcp
          FromPort: !Ref EcsPort
          ToPort: !Ref EcsPort
          CidrIp: !Ref SourceCidr
      Tags:
        -
          Key: Name
          Value: !Sub "ECS ${EcsClusterName} - ECS SecurityGroup"
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Allowed Ports
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ElbPort
          ToPort: !Ref ElbPort
          CidrIp: !Ref SourceCidr
      Tags:
        -
          Key: Name
          Value: !Sub "ECS ${EcsClusterName} - ALB SecurityGroup"
  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "TargetGroup-${AWS::StackName}"
      VpcId: !ImportValue VPC
      Port: !Ref ElbPort
      TargetType: !Ref TargetType
      Protocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /json/1.2.3.4
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Tags:
        -
          Key: Name
          Value: !Sub "ECS ${EcsClusterName} - TargetGroup"
  EcsElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "ELB-${AWS::StackName}"
      SecurityGroups:
        - !Ref AlbSecurityGroup
      Subnets:
        - !ImportValue VPC-SubnetB
        - !ImportValue VPC-SubnetC
      Scheme: internal
      Tags:
        -
          Key: Name
          Value: !Sub "ECS ${EcsClusterName} - ALB"
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref EcsElasticLoadBalancer
      Port: !Ref ElbPort
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
  ECSCluster:
    Type: AWS::ECS::Cluster
  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "ECSLogGroup-${AWS::StackName}"
      RetentionInDays: 14
  FreegeoipTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${AWS::StackName}-freegeoip"
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ExecutionRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      Cpu: 256
      Memory: 0.5GB
      ContainerDefinitions:
      - Name: freegeoip
        Essential: true
        # Image was built from https://github.com/voyagin/freegeoip and contains our free MaxMind License Key.
        # A copy of the key is stored in AWS Secrets Manager, and credentials to login to the MaxMind web console
        # to provision a new key are shared securely within the organization.
        Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/vgeoip:latest"
        MemoryReservation: 512
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref CloudwatchLogsGroup
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: !Sub "${AWS::StackName}-freegeoip"
        PortMappings:
        - ContainerPort: 8080
  FreegeoipService:
    Type: AWS::ECS::Service
    DependsOn:
    - EcsElasticLoadBalancer
    - DefaultTargetGroup
    Properties:
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      DesiredCount: 1
      LoadBalancers:
      - ContainerName: freegeoip
        ContainerPort: 8080
        TargetGroupArn: !Ref DefaultTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref EcsSecurityGroup
          Subnets:
            - !ImportValue VPC-SubnetB
            - !ImportValue VPC-SubnetC
      TaskDefinition: !Ref FreegeoipTaskDefinition
  HTTPErrorRateAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:CDO-LowPriority"
      AlarmDescription: Send low priority page if percent HTTP requests to geocoder service exceeds 5%
      AlarmName: production_geocoder_http_error_rate
      ComparisonOperator: GreaterThanThreshold
      Metrics:
        - Id: total
          Label: RequestCount
          MetricStat:
            Metric:
              Dimensions:
                - Name: LoadBalancer
                  Value: !GetAtt EcsElasticLoadBalancer.LoadBalancerFullName
              MetricName: NewConnectionCount
              Namespace: 'AWS/ApplicationELB'
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: target_fail
          Label: HTTPCode_Target_5XX_Count
          MetricStat:
            Metric:
              Dimensions:
                - Name: LoadBalancer
                  Value: !GetAtt EcsElasticLoadBalancer.LoadBalancerFullName
              MetricName: HTTPCode_Target_5XX_Count
              Namespace: 'AWS/ApplicationELB'
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: elb_fail
          Label: HTTPCode_ELB_5XX_Count
          MetricStat:
            Metric:
              Dimensions:
                - Name: LoadBalancer
                  Value: !GetAtt EcsElasticLoadBalancer.LoadBalancerFullName
              MetricName: HTTPCode_ELB_5XX_Count
              Namespace: 'AWS/ApplicationELB'
            Period: 300
            Stat: Sum
            Unit: Count
          ReturnData: false
        - Id: fail_rate
          Label: Percent Request Failure
          Expression: '100*(elb_fail+target_fail)/total'
          ReturnData: true
      EvaluationPeriods: 5
      Threshold: 5
      TreatMissingData: missing
Outputs:
  EcsService:
    Value: !Ref FreegeoipService
  EcsCluster:
    Value: !Ref ECSCluster
  TaskDef:
    Value: !Ref FreegeoipTaskDefinition
  EcsElbName:
    Description: Load Balancer for ECS Service
    Value: !Ref EcsElasticLoadBalancer
  Version:
    Description: ECS Cloudformation template version
    Value: 3.0.0
