<%
unless dry_run
  update_cookbooks.call
  update_bootstrap_script.call
end

commit = ENV['COMMIT'] || `git ls-remote origin #{branch}`.split.first
ami = commit[0..4]
-%>
---
AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template for Code.org application
Resources:
  # Signal when the instance is fully provisioned and ready for AMI creation.
  AMICreate<%=ami%>:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: WebServerAMI
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
        Count: 1
  WebServerAMI:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: <%=IMAGE_ID%>
      InstanceType: <%=INSTANCE_TYPE%>
      IamInstanceProfile: !ImportValue IAM-FrontendInstanceProfile
      SecurityGroupIds: [!ImportValue VPC-FrontendSecurityGroup]
      SubnetId: !ImportValue VPC-Subnet<%=azs.first%>
      KeyName: <%=SSH_KEY_NAME%>
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 64
            VolumeType: gp2
      UserData:
        Fn::Base64: <%=file('bootstrap_chef_stack.sh.erb',
          resource_id: "AMICreate#{ami}",
          node_name: 'ami-$INSTANCE_ID',
          run_list: [
            local_mode ? 'recipe[cdo-apps]' : 'role[unmonitored-frontend]'
          ],
          commit: commit,
          shutdown: true,
          daemon: false
        )%>
  AMI<%=ami%>: <%= lambda_fn.call 'AMIManager',
    DependsOn: "AMICreate#{ami}",
    InstanceId: {Ref: "WebServerAMI" } %>
Outputs:
  ImageId:
    Description: Image ID (old)
    Value: ami-ee45d7f8
    Export: {Name: !Sub "${AWS::StackName}-ImageId"}
  ImageId2:
    Description: Image ID (old)
    Value: ami-14136c02
    Export: {Name: !Sub "${AWS::StackName}-ImageId2"}
  AMI:
    Description: Image ID
    Value: {"Fn::GetAtt": [AMI<%=ami%>, ImageId]}
