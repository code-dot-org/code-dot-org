CHEF_CACHE=<%=CDO.chef_local_mode ? '/etc/chef/local-mode-cache/cache' : '/var/chef/cache' %>

# This line causes the LaunchConfiguration to be replaced on each new commit.
COMMIT=<%=commit%>

# Remove instance-specific temp files left by aws-mon script.
rm -rf /var/tmp/aws-mon

# Update frontend hostname using local-mode chef-client.
pushd $CHEF_CACHE
  /opt/chef/bin/chef-client -z -N <%=node_name%> -o 'recipe[cdo-apps::hostname]'
popd

# Run rbspy for 2 minutes on 3 dashboard worker processes at startup.
# We're doing this temporarily to help debug our deployment unavailability issue.
# Find 3 dashboard worker process IDs and feed them to 3 rbspy invocations, in parallel using xargs.
ps aux | grep "cluster worker" | grep dashboard | head -n 3 | tr --squeeze-repeats ' ' | cut -d ' ' -f 2 | xargs -P 3 -I {} sudo rbspy record --silent --duration 120 --pid {} &

# Increase EC2 instance metadata service retries/timeouts.
export AWS_METADATA_SERVICE_TIMEOUT=30
export AWS_METADATA_SERVICE_NUM_ATTEMPTS=30

# Ensure the instance launch has completed successfully by requesting the Health Check endpoint for Pegasus via nginx
# (localhost:80/health_check) and also Dashboard directly via its Unix socket, bypassing nginx.
# The status code determines success/failure of the instance launch.
curl --silent --show-error --fail --retry 10 --retry-connrefused --retry-max-time 300 \
  localhost:80/health_check > /dev/null \
&& curl --silent --show-error --fail --retry 10 --retry-connrefused --retry-max-time 300 \
  --unix-socket /run/unicorn/dashboard.sock localhost:80/health_check > /dev/null
